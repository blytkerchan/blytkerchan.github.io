{"version":3,"file":"static/js/667.190f26c7.chunk.js","mappings":"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","sources":["layout/Category.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Markdown from \"react-markdown\";\n\nimport usePosts from \"../lib/usePosts\";\nimport useTitle from \"../lib/useTitle\";\nimport Spinner from \"./Spinner\";\n\nimport remarkLink from \"../remark/links\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkImages from \"remark-images\";\nimport remarkMath from \"remark-math\";\nimport rehypeRaw from \"rehype-raw\";\nimport rehypeKatex from \"rehype-katex\";\n\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport useCategories from \"../lib/useCategories\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Category = ({ env }) => {\n  const { t } = useTranslation();\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n\n  const theCategories = useCategories();\n  const thePosts = usePosts();\n  const [ready, setReady_] = useState(false);\n  const [notFound, setNotFound_] = useState(false);\n  const setReady = () => setReady_(true);\n  const set404 = () => setNotFound_(true);\n\n  const location = useLocation();\n  var slug = null;\n\n  if (env.useHashRouting) {\n    slug = location.hash.substring(1).substring(\"/category/\".length);\n  } else {\n    slug = location.pathname.substring(\"/category/\".length);\n  }\n\n  const { setSubtitle } = useTitle();\n\n  useEffect(() => {\n    if (theCategories.categoryExists(slug)) {\n      setCategoryName(theCategories.getCategoryName(slug));\n      setSubtitle(theCategories.getCategoryName(slug));\n      const postUUIDs = theCategories.getCategoryPosts(slug);\n      var posts = [];\n      postUUIDs.forEach((post) => {\n        posts.push(thePosts.findPostByUUID(post));\n      });\n      posts.sort((lhs, rhs) => {\n        const a = rhs.date;\n        const b = lhs.date;\n        if (a === b) {\n          return 0;\n        }\n\n        if (a > b) {\n          return 1;\n        }\n\n        return -1;\n      });\n      setPosts(posts);\n      setReady();\n      document.getElementById(\"scrollBox\").scroll({ top: 0, behavior: \"smooth\" });\n    } else {\n      set404();\n    }\n  }, [slug]);\n\n  if (notFound) {\n    return (\n      <>\n        <h1>{t(\"Not found\")}</h1>\n        <p>{t(\"It looks like you've found a broken permalink - or perhaps you mis-typed the URL?\")}</p>\n        <Link to=\"/\">{t(\"Take me back!\")}</Link>\n        <div className=\"h-100 d-flex align-items-center justify-content-center\" style={{ minHeight: \"75vh\" }}>\n          <img src=\"/404.png\" width=\"75%\" />\n        </div>\n      </>\n    );\n  } else if (ready) {\n    return (\n      <div id=\"category-posts\">\n        <h2 className=\"post-list-heading\">{t(categoryName)}</h2>\n        <ul className=\"post-list\">\n          {posts.map(({ title, permalink, locallink, excerpt, date }) => (\n            <li key={permalink}>\n              <span className=\"post-meta\">{new Date(Date.parse(date)).toLocaleDateString()}</span>\n              <h3>\n                <Link className=\"post-link\" to={locallink}>\n                  {title}\n                </Link>\n              </h3>\n\n              <Markdown\n                remarkPlugins={[remarkImages, remarkGfm, remarkMath, remarkLink]}\n                rehypePlugins={[rehypeRaw, rehypeKatex]}\n                components={{\n                  a: (props) => {\n                    if (!(\"target\" in props)) {\n                      return <Link to={props.href}>{props.children}</Link>;\n                    } else {\n                      var newProps = {};\n                      Object.keys(props).forEach((prop) => {\n                        if (prop != \"children\") {\n                          newProps[prop] = props[prop];\n                        }\n                      });\n                      return <a {...newProps}>{props.children}</a>;\n                    }\n                  },\n                }}\n              >\n                {excerpt}\n              </Markdown>\n              <span className=\"post-more-link\">\n                <Link className=\"post-more-link\" to={locallink}>\n                  {t(\"more...\")}\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  } else {\n    return <Spinner id=\"spinner\" />;\n  }\n};\n\nexport default Category;\n"],"names":["_ref","env","t","useTranslation","categoryName","setCategoryName","useState","posts","setPosts","theCategories","useCategories","thePosts","usePosts","ready","setReady_","notFound","setNotFound_","location","useLocation","slug","useHashRouting","hash","substring","pathname","setSubtitle","useTitle","useEffect","categoryExists","getCategoryName","postUUIDs","getCategoryPosts","forEach","post","push","findPostByUUID","sort","lhs","rhs","a","date","b","document","getElementById","scroll","top","behavior","_jsxs","_Fragment","children","_jsx","Link","to","className","style","minHeight","src","width","id","map","_ref2","title","permalink","locallink","excerpt","Date","parse","toLocaleDateString","Markdown","remarkPlugins","remarkImages","remarkGfm","remarkMath","remarkLink","rehypePlugins","rehypeRaw","rehypeKatex","components","props","newProps","Object","keys","prop","href","Spinner"],"sourceRoot":""}