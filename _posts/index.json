[{"author":"rlc","date":"2024-05-18T00:00:00.000Z","layout":"post","title":"What just happened?","categories":["This blog"],"tags":["Blog Update (9.5)","React Development (8.7)","Web Performance (8.3)","Markdown Rendering (7.8)","Webpack Indexing (7.4)","Lazy Loading (7.1)","AI Categorization (6.9)","Responsive Design (6.5)","Programming Languages (6.0)","Dark Mode Implementation (5.8)","Jekyll to Phoenix.ui Transition (5.4)"],"uuid":"5c2a3147-899a-47a1-881e-1ef63163c6df","filename":"2024-05-18-what-just-happened.md","slug":"what-just-happened","excerpt":"Regular visitors of this blog will have noticed that something has changed.","permalink":"https://rlc.vlinder.ca/blog/2024/05/18/what-just-happened","locallink":"/blog/2024/05/18/what-just-happened","published":true},{"author":"rlc","date":"2024-05-04T00:00:00.000Z","layout":"post","title":"Homo numeris?","categories":["Digital Diplomacy","Cybersecurity and AI Vulnerabilities","Technological Innovation in Government","AI Ethics and Future Implications","Science Fiction and Speculative Technology"],"tags":["Digital Diplomacy (9.8)","Cybersecurity (8.6)","AI Representation (8.2)","Consular Affairs (7.9)","Information Warfare (7.5)","Digital Identity (7.1)","Cyber-Attack Vulnerability (6.8)","AI in Government (6.4)","Quantum Computing (6.0)","AI Ethics (5.7)","Science Fiction (5.3)"],"uuid":"13f4f36f-0430-4cb9-a4a6-b8a5857fab81","filename":"2024-05-04-homo-numeris.md","slug":"homo-numeris","excerpt":"The Ukrainian government [announced on May 1](https://mfa.gov.ua/en/news/mzs-ukrayini-priznachilo-cifrovu-osobu-dlya-informuvannya-shchodo-konsulskih-pitan) that they would use a “digital person” to represent the ministry of foreign affairs for at least some of their announcements. It (she?) will be a representative for the ministry on consular affairs and is called “Victoria Shi”, which refers to Ukraine's goal of victory in their war with Russia (or perhaps rather Russia’s war on them) and the fact that it’s an artificial intelligence.","permalink":"https://rlc.vlinder.ca/blog/2024/05/04/homo-numeris","locallink":"/blog/2024/05/04/homo-numeris","published":true},{"author":"rlc","categories":["Information Technology","Data Management","Interoperability","Micro-services","Message Processing","System Architecture"],"date":"2024-04-03T00:00:00.000Z","layout":"post","permalink":"https://vlindersoftware.github.io/python-event-superschema/","tags":["Interoperability (0.9)","Information systems (0.8)","Data meaning (0.7)","Data formatting (0.6)","Semantics (0.5)","Micro-services (0.9)","Message processing (0.8)","De-coupling (0.7)","System architecture (0.6)","Communication (0.8)","Message definition (0.7)","Ground rules (0.6)"],"title":"Python super-schema","uuid":"fc202fc3-0c92-4858-b9dc-11aa63af5343","filename":"2024-04-03-superschema.md","slug":"superschema","excerpt":"Interoperability is the scourge of all information systems: knowing what data means, how it is formatted, and what the semantics of the various fields are can be a daunting task. Micro-services are generally designed to process messages in potentially large quantities and, in order to do that, need to know what the messages mean. They are also generally designed to be de-coupled from each other so they can easily be replaced or updated. That means that to construct a system with a micro-service-oriented architecture, you need to have them communicate with each other and you need messages to do that. Those messages have to be well-defined and follow some ground rules.","locallink":"https://vlindersoftware.github.io/python-event-superschema/","published":true},{"author":"rlc","categories":["Software Engineering"],"date":"2023-05-13T00:00:00.000Z","layout":"post","tags":["software-engineering(0.9)","design-failure-mode(0.8)","effect-analysis(0.8)","DFMEA(0.9)","validation(0.7)","design-decisions(0.6)","software-technique(0.7)","existing-design(0.6)","magnifying-glass(0.5)","what-if-scenario(0.6)","fictional-website(0.7)","online-store(0.7)","florist(0.6)","AWS(0.8)","CloudFront(0.9)","S3-bucket(0.8)","serverless-functions(0.7)","NoSQL-database(0.6)","Simple-Queue-Service(0.8)","CloudFormation(0.7)","front-end(0.7)","Angular-app(0.7)","API(0.8)","failure-mode(0.8)","user-visible-effect(0.8)","business-impact(0.8)","detection(0.7)","mitigation(0.8)","remediation(0.8)","restoration(0.8)","observability(0.7)","error-handling(0.6)","logging(0.7)","availability(0.7)","retry(0.6)","idempotent(0.6)","observability(0.7)","trend-analysis(0.6)","observability(0.7)","observability(0.7)","observability(0.7)","observability(0.7)"],"title":"DFMEA- Design Failure Mode and Effect Analysis","uuid":"06d60ce5-5838-4008-9561-ae57161d3ab1","filename":"2023-05-13-dfmea.md","slug":"dfmea","excerpt":"<img src=\"/assets/2023/02/cat.jpg\" width=\"300px\" align=\"right\" alt=\"I wrote this by hand before typing it up, and drew a cat. This is the cat.\" />Design Failure Mode and Effect Analysis (DFMEA) is a software engineering technique that can help validate design decisions or improve upon them. It takes your existing design and puts each component and link under a magnifying glass, running it through a what-if scenario. In this post, I will walk through a DFMEA of a fictional website and on-line store for a fictional florist. If you read my other blog, [Applied Paranoia](https://applied-paranoia.com) you may already be familiar with that application.\n","permalink":"https://rlc.vlinder.ca/blog/2023/05/13/dfmea","locallink":"/blog/2023/05/13/dfmea","published":true},{"author":"rlc","categories":["Law","Software Development","Standards and Specifications","Legal Writing","Contract Law"],"comments":true,"date":"2022-05-30T00:00:00.000Z","layout":"post","tags":["legal requirements (0.9)","engineers (0.7)","lawyers (0.8)","software developers (0.7)","standards (0.9)","specifications (0.8)","RFCs (0.9)","HTTP request (0.6)","software development (0.7)","contracts (0.8)","legislation (0.7)","development cycle (0.6)"],"title":"Lawyers- you gotta (something) them","uuid":"1f9c55af-631f-4dfd-8aac-e52628362515","filename":"2022-05-30-lawyers.md","slug":"lawyers","excerpt":"> \"*we will need to make sure legal requirements are at least similar across the board*\"\n\nLegal requirements are something engineers don't like to think too much about: they get in the way of progress and are generally perceived as a pain in the nether regions. There are some disparaging ideas about what lawyers do on a daily basis that seem to be prevalent in the industry. From my point of view, though, they're not that different from software developers. They just have extra difficulties software developers don't have: they can only test their \"code\" by confronting a judge. In software, we have almost instant feed-back running our code using unit tests.\n","permalink":"https://rlc.vlinder.ca/blog/2022/05/30/lawyers","locallink":"/blog/2022/05/30/lawyers","published":true},{"author":"rlc","categories":["Education","Problem-solving","Teaching","Software Engineering","Firmware Engineering"],"comments":true,"date":"2021-09-27T00:00:00.000Z","layout":"post","tags":["problem-solving (0.9)","teaching (0.8)","coaching (0.7)","software engineering (0.6)","problem definition (0.6)","algorithm design (0.5)","test-driven development (0.5)","cognitive load (0.4)","teleconferencing technologies (0.4)","FPGA firmware design (0.4)","cryptography (0.4)","high-precision time synchronization (0.4)","system of systems (0.4)","novice programmers (0.4)","framework (0.4)","validation (0.4)","verification (0.4)","mental model (0.4)","analogies (0.4)","test cases (0.4)","reflection (0.4)","root cause (0.4)","modeling (0.4)","iteration (0.4)","unit tests (0.4)"],"title":"Coaching and problem solving","uuid":"3238df24-a269-4cb9-82b9-f8d89101ac13","filename":"2021-09-27-pcdit.md","slug":"pcdit","excerpt":"I am not a teacher. According to my wife, who is a professor at law and therefore knows a thing or two about teaching, I am _really, definitely_ not a teacher. I may have taught the occasional workshop and may try to explain things from time to time, but who am I to argue with my wife? I do find myself in the position of having to explain things a lot, though, and with today's teleconferencing technologies, I find myself explaining to an ever-wider audience. The people on the other end of the connection are generally not novices: we share a common vocabulary and a common way of thinking about problems that makes it easier to convey whatever message I'm trying to convey. For my wife, that would be the equivalent of talking to graduate or post-graduate students. Sometimes, though, I don't get my point accross, so I decided to read up on teaching.\n\n","permalink":"https://rlc.vlinder.ca/blog/2021/09/27/pcdit","locallink":"/blog/2021/09/27/pcdit","published":true},{"author":"rlc","categories":["Technology","Science","Research","Quantum Computing","Cybersecurity"],"comments":true,"date":"2021-09-19T00:00:00.000Z","layout":"post","tags":["relaxing (0.9)","movies (0.5)","music (0.5)","reading (0.8)","papers (0.8)","cybersecurity (0.7)","quantum computing (0.9)","Arxiv (0.6)","error mitigation (0.8)","quantum error correction (0.9)","quantum circuits (0.8)","noise (0.7)","hardware errors (0.6)","QPU (0.6)","classical computer (0.6)","cosmic rays (0.5)","error correction codes (0.7)","quantum gates (0.7)","quantum state (0.7)","quantum channel (0.7)","error channel (0.7)","quantum experiment (0.7)","accuracy (0.8)","theorem (0.7)","probabilistic error cancellation (0.7)","Richardson extrapolation (0.6)","Virtual distillation (0.6)","Clifford gates (0.6)","Pauli channel (0.6)","dynamic error correction (0.8)","desktop quantum coprocessor (0.7)"],"title":"Fundamental limitations of quantum error mitigation","uuid":"4cf4052f-7950-4958-bbe6-a11677bd06b2","filename":"2021-09-19-fundamental-limitations-of-quantum-error-mitigation.md","slug":"fundamental-limitations-of-quantum-error-mitigation","excerpt":"People have different ways of relaxing. Some people like to watch movies, others like to listen to music, ... I like to read papers, usually either about cybersecurity or quantum computing. Yesterday, I had a bit of time on my hands and decided to read on the latter: I had found an interesting paper called \"Fundamental limitations of quantum error mitigation\" on [Arxiv](https://arxiv.org/pdf/2109.04457.pdf), in which the authors, Ryuji Takagi, Suguru Endo, Shintaro Minagawa and Mile Gu, propose a new model for quantum error mitigation and, building on that model, find the fundamental limits.\n\n","permalink":"https://rlc.vlinder.ca/blog/2021/09/19/fundamental-limitations-of-quantum-error-mitigation","locallink":"/blog/2021/09/19/fundamental-limitations-of-quantum-error-mitigation","published":true},{"author":"rlc","categories":["Technology","Health","Privacy","Security","Government","Software","Data Security","Vaccine Passports"],"comments":true,"date":"2021-09-06T00:00:00.000Z","layout":"post","tags":["driving (0.9)","QR code (0.9)","vaccine passport (0.9)","privacy implications (0.8)","SHC (0.7)","X.509 certificates (0.7)","European standard (0.7)","certificate revocation list (0.8)","implementation options (0.8)","privacy (0.9)","OCSP (0.6)","revocation list-based approach (0.7)","Tim Horton's (0.6)","intrusion of privacy (0.8)","VaxiCode Verif (0.6)"],"title":"Contents of the Quebec vaccine passport -- TMI?","uuid":"444b40c3-dff4-408b-b2d2-cf9f8bf8165d","filename":"2021-09-06-vaxicode-tmi.md","slug":"vaxicode-tmi","excerpt":"While driving this afternoon, my wife and I had a chat about the contents of the QR code that encodes the vaccine passport here in Quebec. Apparently there had been some questions to the premier and the minister of health about \"hackers\" getting to its contents, and the privacy implications of such \"cracks\". I had some ideas on how I’d design it, but I didn’t know how it actually worked, and I was clueless as to what a hacker could well crack (regardless of the color of their hat). Surely the contents would be signed and there'd be no more than strictly necessary encoded in the \"passport\"?\n\n","permalink":"https://rlc.vlinder.ca/blog/2021/09/06/vaxicode-tmi","locallink":"/blog/2021/09/06/vaxicode-tmi","published":true},{"author":"rlc","categories":["Physics","Quantum Mechanics","Interpretations of Quantum Mechanics","Observer Effect","Schrödinger's Cat","Wigner's Friend Experiment","Copenhagen Interpretation","Many Worlds Interpretation","Heisenberg's Uncertainty Principle","Wave Function","Entanglement","Observer Independence","Free Will","Locality"],"comments":true,"date":"2021-08-31T00:00:00.000Z","layout":"post","tags":["quantum mechanics (0.9)","interpretations (0.8)","Copenhagen interpretation (0.7)","many worlds interpretation (0.7)","Wigner's Friend experiment (0.8)","Schrödinger's cat (0.7)","Heisenberg's uncertainty principle (0.7)","observer influence (0.8)","wave function (0.8)","entanglement (0.8)","Dirac notation (0.7)","Proietti et al. experiment (0.8)","observer independence (0.8)","free choice (0.6)","locality (0.6)"],"title":"Experimental test of local observer-independence","uuid":"5b04b85b-b33e-43a8-919c-4683d975004c","filename":"2021-08-31-experimental-test-of-local-observer-independence.md","slug":"experimental-test-of-local-observer-independence","excerpt":"In a recent [paper published on arxiv](https://arxiv.org/pdf/1902.05080.pdf), what was formerly a thought experiment has been realized (with minor tweaks) and, while some say this indicates [there is no objective reality](https://interestingengineering.com/new-physics-experiment-indicates-no-objective-reality), I rather think it means something else. \n\n","permalink":"https://rlc.vlinder.ca/blog/2021/08/31/experimental-test-of-local-observer-independence","locallink":"/blog/2021/08/31/experimental-test-of-local-observer-independence","published":true},{"author":"rlc","categories":["Software Development","Firmware Engineering","VHDL Programming","Coding Standards","Semantic Naming","Type Systems"],"comments":true,"date":"2021-08-29T00:00:00.000Z","layout":"post","tags":["VHDL code (1.0)","firmware engineers (0.8)","signals (0.7)","datasheet pin name (0.6)","Hungarian warthogs (0.5)","software (0.9)","type system (0.8)","PotatoLauncherTargetingStatus (0.7)","compiler (0.8)","gate usage (0.6)","readability (0.9)","software guy's code (0.7)"],"title":"Here’s something I don’t understand","uuid":"ef21494e-f953-4615-a6da-0987e4d29692","filename":"2021-08-29-something-i-dont-understand.md","slug":"something-i-dont-understand","excerpt":"Every time I look at VHDL code written by (sometimes veteran, sometimes not so much) firmware engineers, the code looks similar: a bunch of signals coming in with their direction encore in the name, and sometimes the polarity as well, but very little in the way of functionality: sometimes it’s just the datasheet pin name of the device the signal is from that made it all the way into the component I’m looking at (which, when I find that annoying, is not the top). \n\nThis part I kinda get: it’s the same issue we’ve had in software for ages, dating back before the Hungarian warthogs of the 1990s. \n","permalink":"https://rlc.vlinder.ca/blog/2021/08/29/something-i-dont-understand","locallink":"/blog/2021/08/29/something-i-dont-understand","published":true},{"author":"rlc","categories":["Personal Blog","Cybersecurity","Quantum Computing"],"comments":true,"date":"2021-08-26T00:00:00.000Z","layout":"post","slug":"weird","tags":["Blogging (0.9)","Pandemic (0.8)","Florida (0.7)","Cybersecurity (0.8)","Quantum Computing (0.9)","Writing (0.7)","Stasis Pod (0.5)","Life (0.6)"],"title":"Wow, this is weird","uuid":"07af3915-90b6-49d6-9785-8e40418c75d2","filename":"2021-08-26-weird.md","excerpt":"The last time I wrote anything on this blog was more than 20 months ago. Back then, I had just come back from spending Christmas with friends and family in Florida. Since then, we've been in a global pandemic and no-one in their right mind would go to Florida.\n","permalink":"https://rlc.vlinder.ca/blog/2021/08/26/weird","locallink":"/blog/2021/08/26/weird","published":true},{"author":"rlc","categories":["New Year","Decades","Calendar","Rant"],"comments":true,"date":"2020-01-01T00:00:00.000Z","layout":"post","slug":"happy-newyear","tags":["New Year (0.9)","Decade (0.8)","2020 (0.7)","Century (0.6)","Calendar (0.5)","Time (0.4)","Common Era (0.3)","Rant (0.3)","Nerd (0.2)","Detail (0.2)"],"title":"Happy new year!","uuid":"04cc0c46-399b-4457-a67b-e94652351779","filename":"2020-01-01-haapy-newyear.md","excerpt":"Happy new year!\n\n2019 was an interesting year for many reasons, and I was lucky enough to finish it with family and friends in sunny Florida. 2020 also promises to be interesting, but being the nerd and nit-picker that I am, let me just rant about one minor detail...\n","permalink":"https://rlc.vlinder.ca/blog/2020/01/01/happy-newyear","locallink":"/blog/2020/01/01/happy-newyear","published":true},{"author":"rlc","categories":["Journalism","Astronomy","Science"],"comments":true,"date":"2019-12-24T00:00:00.000Z","layout":"post","slug":"weird-title","tags":["Washington Post (0.9)","journalism (0.8)","subscription (0.7)","balanced reporting (0.6)","NASA (0.8)","shooting stars (0.9)","space probe (0.7)","astronomy (0.6)","asteroid (0.7)"],"title":"Weird title in this morning's Washington Post","uuid":"9db9dfbc-8c59-4df0-b35d-393782f84e04","filename":"2019-12-24-weird-title.md","excerpt":"I subscribe to the Washington Post, not because I read it that much (I don't have much time for that), but because I think they do a good job of balanced journalism that warrants the few dollars the subscription costs. After all, journalists need to eat too. _I **strongly** suggest you do the same for whatever press outlet you think does a good job._\n\nWhile flipping through its pages today, I came accross a title that looked, wrong: \"A NASA spacecraft circling the sub stumbled upon a trail of shooting stars\". Any geek worth their salt will see what's wrong...\n\n","permalink":"https://rlc.vlinder.ca/blog/2019/12/24/weird-title","locallink":"/blog/2019/12/24/weird-title","published":true},{"author":"rlc","categories":["Quantum Computing","Teleportation","Star Trek","Physics","Sci-fi"],"comments":true,"date":"2019-11-12T00:00:00.000Z","layout":"post","slug":"quantum-teleportation","tags":["quantum computing (0.9)","quantum teleportation (0.9)","Star Trek (0.7)","qubits (0.8)","Heisenberg compensators (0.6)","Enterprise (0.6)","physics (0.5)","teleportation circuit (0.7)","Captain Kirk (0.6)","energy conversion (0.5)","sci-fi (0.4)","no cloning theorem (0.7)","Tom Riker (0.4)"],"title":"Quantum teleportation","uuid":"3b5baa8d-9990-48a2-b5b3-768f8c25eb07","filename":"2019-11-12-quantum-teleportation.md","excerpt":"A bit more fun with quantum computing...\n\nQuantum teleportation is one of those things that Star Trek fans (like myself) like to believe is a dream come true: if it's possible to teleport qubits, surely it may be possible to teleport real-world things some day?\n","permalink":"https://rlc.vlinder.ca/blog/2019/11/12/quantum-teleportation","locallink":"/blog/2019/11/12/quantum-teleportation","published":true},{"author":"rlc","categories":["Technology","Quantum Computing","Computer Science","Physics","Research"],"comments":true,"date":"2019-11-06T00:00:00.000Z","layout":"post","slug":"first-quantum-results","tags":["quantum computing (1.0)","quantum circuits (1.0)","IBM (0.8)","Google (0.5)","Hadamard gate (0.9)","CNOT gate (0.9)","quantum computers (0.9)","error analysis (0.9)","quantum simulator (0.8)","quantum errors (0.9)","quantum results (0.8)","quantum entanglement (0.7)","quantum gates (0.8)","quantum experiments (0.7)","quantum comparison (0.6)"],"title":"My first results with quantum computing experiments","uuid":"87995d8f-7512-4511-ad1c-9961ad4eeadc","filename":"2019-11-06-first-quantum-results.md","excerpt":"I ran two quantum circuits on two real quantum computers and one simulator. I'll share my results and some observations.\n\n","permalink":"https://rlc.vlinder.ca/blog/2019/11/06/first-quantum-results","locallink":"/blog/2019/11/06/first-quantum-results","published":true},{"author":"rlc","categories":["Quantum Computing","Linear Algebra","Quantum Entanglement","Mathematics"],"comments":true,"date":"2019-11-03T00:00:00.000Z","layout":"post","permalink":"/assets/2019/11/quantum-exponential.pdf","tags":["quantum computers (0.9)","quantum supremacy (0.8)","linear algebra (0.7)","quantum entanglement (0.9)","classical computers (0.6)","exponential time (0.5)","memory (0.4)","PDF format (0.3)"],"title":"Why classical computers need exponentially more time and memory to simulate quantum computers","uuid":"54d406bd-6405-49e7-bd80-550fd45f6150","filename":"2019-11-03-why-classic-computers-exponential.md","slug":"why-classic-computers-exponential","excerpt":"If you're a bit like me, you get annoyed by the over-simplified explanations of quantum computers that have been going around since [Google demonstrated quantum supremacy](https://rlc.vlinder.ca/blog/2019/09/29/quantum-supremacy). One of the things that those explanations _always_ gloss over is how it's so much harder for a classical computer to simulate a quantum computer running what is basically linear algebra, than it is for a quantum computer to just run it. The answer to that is **quantum entanglement**, and in this post I will try to explain how it works.\n\nI should point out that this means either math or meth will be involved in understanding what I'm about to write. The second option being temporary for understanding and permanent for negative effects, I recommend the first.\n\nIn order to explain why classical computers need exponentially more time and memory to simulate quantum computers according to the size of the quantum computer being simulated, I need to explain a few things about quantum computers and how they work. Now, because there's linear algebra involved and because it's a lot easier to write linear algebra in Latex than it is in markdown, you're going to have to [download this post in PDF format to read it](/assets/2019/11/quantum-exponential.pdf).\n\n**2019-11-11 Update:** I've updated the PDF to clarify a few things, following comments by my lovely wife.","locallink":"/assets/2019/11/quantum-exponential.pdf","published":true},{"author":"rlc","categories":["Cybersecurity","SCADA protocols","Authentication","Secure Authentication","Role-Based Access Control (RBAC)","Multi-user support","DNP3-SA","IEEE standards","IEC standards"],"comments":false,"layout":"post","tags":["DNP3 (1.0)","Authentication (0.8)","Secure Authentication (0.7)","DNP3-SA (0.9)","Technical Committee (0.6)","Multi-user support (0.8)","RBAC (0.7)","Symmetric key (0.8)","Asymmetric cryptography (0.7)","Cybersecurity (0.6)","SCADA (0.8)","IEEE 1815 (0.6)","Master-Outstation Association (0.9)","Authorization Management Protocol (0.7)","Enrolment problem (0.6)"],"title":"Authentication of individual users in DNP3 Secure Authentication- TB2019-001, and more","uuid":"ad6c8f5f-0511-4062-bd63-2a4c4ef3b34f","filename":"2019-10-26-tb2019-001-multi-user-sa.md","date":"2019-10-26T00:00:00.000Z","slug":"tb2019-001-multi-user-sa","excerpt":"In February of this year, the DNP Technical Committee published TB2019-001: \"Authentication of individual users is obsolete in DNP3-SA\". This technical bulletin, which was the first work item from the Tech Committee's Secure Authentication Task Force to be published, was the fruit of two and a half years of work between the moment the Tech Committee decided to remove multi-user support and the moment the document was created, edited, reviewed, etc.\n\nIn this post, I will take a close look at what the impact of this document is on existing implementations of DNP3: systems, devices and firmware.\n","permalink":"https://rlc.vlinder.ca/blog/2019/10/26/tb2019-001-multi-user-sa","locallink":"/blog/2019/10/26/tb2019-001-multi-user-sa","published":true},{"author":"rlc","categories":["Technology","Computers","Programming"],"comments":true,"date":"2019-10-19T00:00:00.000Z","layout":"post","slug":"wonderful-world","tags":["Technology (5.0)","Computer History (4.5)","Programming (4.0)","Software Engineering (3.5)","Computer Science (3.0)","Internet (3.0)","Moore's Law (2.5)","Quantum Computing (2.0)","Innovation (2.0)","Future Technology (1.5)"],"title":"We live in a wonderful world","uuid":"247e0acc-876f-4edb-a5b1-1491680a953d","filename":"2019-10-19-wonderful-world.md","excerpt":"We truly live in a wonderful world that would have been impossible to imagine only a few decades ago.\n\nAllow me to wax eloquent for a moment.\n","permalink":"https://rlc.vlinder.ca/blog/2019/10/19/wonderful-world","locallink":"/blog/2019/10/19/wonderful-world","published":true},{"author":"rlc","categories":["Cybersecurity","Quantum Computing","Asymmetric Cryptography","Post-Quantum Cryptography","Digital Signature Algorithm"],"comments":true,"date":"2019-10-07T00:00:00.000Z","layout":"post","slug":"when-rsa-dies","tags":["cryptography (1.0)","RSA (0.9)","Diffie-Hellman (0.9)","quantum computing (0.8)","quantum resistance (0.8)","ElGamal (0.8)","asymmetric cryptography (0.7)","SIDH (0.7)","quantum-resistant (0.7)","PKI (0.7)","digital signature algorithm (0.7)"],"title":"When RSA dies","uuid":"708f3e80-9f88-4b97-9ad3-589793f2f17d","filename":"2019-10-07-when-rsa-dies.md","excerpt":"<p>Below, I explain (as best I can):\n<ul>\n<li>why the end of RSA is nigh</li>\n<li>why ephemeral Diffie-Hellman will survive</li>\n<li>what we can and cannot build on top of ephemeral Diffie-Hellman</li>\n<li>what this means for post-quantum PKI</li>\n<li>why we need a quantum-resistant digital signature algorithm</li>\n</ul></p>\n<p>All of this is both complex and complicated. It is hard to write about this with any level of accuracy and still be readable for someone who hasn't spent an unreasonable amount of time steeped in articles about abstract math.</p>\n<p>I gloss over a lot of details trying to keep it reasonably understandable, and I hope I haven't dumbed everything down too much. I apologize in advance both for the bits that are too hard to understand, and the bits that may seem too obvious. It's hard to find a middle ground.</p>\n","permalink":"https://rlc.vlinder.ca/blog/2019/10/07/when-rsa-dies","locallink":"/blog/2019/10/07/when-rsa-dies","published":true},{"author":"rlc","categories":["Technology","Physics","Quantum Computing","Computer Science","Engineering","Mathematics","Cybersecurity"],"comments":true,"date":"2019-09-28T00:00:00.000Z","layout":"post","slug":"quantum-supremacy","tags":["technology (0.9)","quantum computing (0.8)","physics (0.7)","Google (0.6)","experiment (0.6)","quantum supremacy (0.9)","random numbers (0.7)","Feynman (0.5)","qubits (0.7)","classical computers (0.6)","linear algebra (0.6)","supercomputers (0.5)","IBM (0.4)","Shor's algorithm (0.6)","RSA (0.5)","cyber security (0.4)","Diffie-Hellman (0.4)"],"title":"Quantum Supremacy","uuid":"7eb14138-3712-4f86-88a9-7cfa6cc3945d","filename":"2019-09-28-quantum-supremacy.md","excerpt":"A few days ago, the Financial Times [reported](https://www.ft.com/content/b9bb4e54-dbc1-11e9-8f9b-77216ebe1f17) that \"Google claims to have reached quantum supremacy\". The paper in question, available [here](https://www.docdroid.net/h9oBikj/quantum-supremacy-using-a-programmable-superconducting-processor.pdf), explains how they reached this milestone, and how they proved it. It does beg the question, though: what *is* quantum supremacy?\n","permalink":"https://rlc.vlinder.ca/blog/2019/09/28/quantum-supremacy","locallink":"/blog/2019/09/28/quantum-supremacy","published":true},{"author":"rlc","categories":["Technology","Computer Science","Software Development","Hardware Engineering"],"comments":true,"date":"2018-10-30T00:00:00.000Z","layout":"post","slug":"That-lunch-wasnt-free","tags":["Spectre (0.8)","Meltdown (0.8)","bugs (0.6)","free lunch (0.9)","instruction-level parallelism (0.7)","hardware parallelism (0.8)","imperative programming (0.7)","declarative programming (0.9)","computer architecture (0.6)","cache optimization (0.7)"],"title":"That lunch wasn't free after all","uuid":"c66d38a7-2e92-4967-ac22-6b721d693c44","filename":"2018-10-30-that-lunch-wasnt-free.md","excerpt":"The Spectre and Meltdown bugs have shown that the free lunch was indeed over a decade ago. We should therefore stop attempting to exploit instruction-level parallelism with ever more complex stacks and ever more complex pipelines and branch predictors, and start exploiting the inherent parallelism of hardware. In order to do that, we need to change the way we thing about software from our current imperative way of thinking to a more declarative way of thinking. At the same time, we need to change the way our computers think about software to allow them to exploit this more declarative style to use their inherent parallelism and free up die space currently used for caches and ILP.\n\n[Read the article](/assets/2018/free-lunch.pdf)","permalink":"https://rlc.vlinder.ca/blog/2018/10/30/That-lunch-wasnt-free","locallink":"/blog/2018/10/30/That-lunch-wasnt-free","published":true},{"author":"rlc","categories":["Technology","Blogging","Web development"],"comments":true,"date":"2018-09-11T00:00:00.000Z","layout":"post","slug":"Reboot","tags":["Blogging (0.8)","Website migration (0.7)","Jekyll (0.9)","Wordpress (0.6)","Vim (0.5)","PDF files (0.7)","LaTeX (0.6)","Bug reporting (0.8)"],"title":"reboot","uuid":"b79e3bca-a152-4303-b549-94891316ddb5","filename":"2018-09-11-reboot.markdown","excerpt":"Readers of this blog may wonder what happened: the layout is completely different, but the thing is also a lot faster..??!\n\nThe reason for this is simple: I stopped using Wordpress. It was giving me more trouble than it was worth, so I decided to move the site, and all of its contents, to Jekyll. This has the advantage of being able to write directly in Vim, with the only minor disadvantage of having to build the site.\n\nSome formatting will need to be fixed for older posts, and I will start doing that when I have a bit of time. In the mean time, I will try to just post stuff out.\n\nSome of what I post may be PDF files: I've been using LaTeX a lot lately, and have some interesting stuff that presents better as PDFs. I'll see how that turns out as well.\n\nAlso: please let me know about any bugs you see: the site is large enough for me to not be able to re-read everything, so there may be a few bugs I've missed.","permalink":"https://rlc.vlinder.ca/blog/2018/09/11/Reboot","locallink":"/blog/2018/09/11/Reboot","published":true},{"author":"rlc","categories":["Technology","Engineering","Software Development","Debugging","Real-time Systems","Industrial Devices","Data Logging","Memory Management","Processor Optimization","Resource Management","Windows Embedded Compact","Kernel Programming","Multi-threading","Data Structures","Algorithms","Performance Optimization","Error Handling","File Management","System Design","Optimization Techniques","Diagnostic Tools","Report Generation","Data Formatting","Operating Systems"],"comments":true,"date":"2017-10-15T00:00:00.000Z","layout":"post","tags":["industrial devices (1.0)","real-time (1.0)","logging (1.0)","diagnose (1.0)","timing constraints (0.9)","system (0.9)","debug messages (1.0)","memory (0.9)","processor time (0.9)","resources (0.9)","error (1.0)","debugging (1.0)","Windows Embedded Compact (1.0)","driver (1.0)","I/O Control (0.9)","OAL (0.9)","kernel-mode (0.9)","hooking (1.0)","queue (1.0)","multi-producer single-consumer (0.9)","FIFO (1.0)","named event (0.9)","flush-to-disk (0.9)","abstract data type (0.9)","MPMC queue (0.9)","atomic operations (0.9)","optimization (1.0)","sprintf (1.0)","WriteFile (1.0)"],"title":"The Logging \"problem\"","wordpress_id":3457,"uuid":"ae6ddae5-aa5b-406d-a800-f348d87eeaa2","filename":"2017-10-15-the-logging-problem.markdown","slug":"the-logging-problem","excerpt":"A recurring problem in real-time industrial devices is logging: you want to log all the information you need to diagnose a problem, but you don't want to slow down your system and miss timing constraints, or unnecessarily burden your system when there are no problems. On the other hand, you often don't know that there is a problem to be diagnosed (and therefore logged) before there is an actual problem, in which case you may be too late to start your logs.\n\nThe solution seems obvious: just look a minute or so into the future and, if any trouble is brewing, start logging. But as a wise person once said: \"Always in motion the future is.\"\nIn the real world, we need real solutions.\n\n","permalink":"https://rlc.vlinder.ca/blog/2017/10/15/the-logging-problem","locallink":"/blog/2017/10/15/the-logging-problem","published":true},{"author":"rlc","categories":["Technology","Security","Finance","Legal","Identity Theft","Data Breach"],"comments":true,"date":"2017-09-12T00:00:00.000Z","layout":"post","tags":["data breach (0.9)","Equifax (0.8)","New York Attorney General (0.7)","identity theft (0.6)","hackers (0.5)","investigation (0.5)","class action lawsuit (0.4)","financial system (0.4)","security audit (0.3)","credit card information (0.3)","personal information (0.3)","vulnerability (0.3)","security measures (0.2)","market capitalisation (0.2)","security issues (0.2)"],"title":"The Equifax data breach: what we know, what you can do, what's next","wordpress_id":4252,"uuid":"3e8990ce-60b3-4bb4-9d33-b3ff263e3b7c","filename":"2017-09-12-the-equifax-data-breach-what-we-know-what-you-can-do-whats-next.markdown","slug":"the-equifax-data-breach-what-we-know-what-you-can-do-whats-next","excerpt":"<img src=\"/assets/2017/09/img_7368-141x300.jpg\" alt=\"TL;DR mindmap\">\n","permalink":"https://rlc.vlinder.ca/blog/2017/09/12/the-equifax-data-breach-what-we-know-what-you-can-do-whats-next","locallink":"/blog/2017/09/12/the-equifax-data-breach-what-we-know-what-you-can-do-whats-next","published":true},{"author":"rlc","categories":["Technology","Software Development","Interior Design","Cognitive Bias","Firmware Development","Embedded Systems","Internet of Things (IoT)","Security"],"comments":true,"date":"2017-07-22T00:00:00.000Z","layout":"post","tags":["software development (0.9)","competence (0.8)","incompetence (0.7)","Dunning-Kruger effect (0.9)","firmware development (0.8)","embedded devices (0.7)","IoT devices (0.6)","multi-threading (0.7)","security breach (0.6)","skill-set (0.8)"],"title":"The problem with making things too easy","wordpress_id":4185,"uuid":"3e1cbf1b-2d10-4e65-96a6-65b75cda6757","filename":"2017-07-22-the-problem-with-making-things-too-easy.markdown","slug":"the-problem-with-making-things-too-easy","excerpt":"<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">The thing with making things easier is that it makes mediocre people seem competent and incompetent people seem mediocre...</p>&mdash; Ronald (@blytkerchan) <a href=\"https://twitter.com/blytkerchan/status/888378949683773440?ref_src=twsrc%5Etfw\">July 21, 2017</a></blockquote>\n\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n","permalink":"https://rlc.vlinder.ca/blog/2017/07/22/the-problem-with-making-things-too-easy","locallink":"/blog/2017/07/22/the-problem-with-making-things-too-easy","published":true},{"author":"rlc","categories":["Politics"],"comments":true,"date":"2017-05-06T00:00:00.000Z","layout":"post","tags":["French Election (0.9)","Emmanuel Macron (0.8)","Marine le Pen (0.7)","American Presidential Election (0.6)","Checks and Balances (0.8)","Geert Wilders (0.5)","NATO (0.4)","European Union (0.7)","Louis Chedid (0.3)","Anne Frank (0.4)","Nazi Occupation (0.4)"],"title":"To those of you who don't speak French and follow me on Twitter","wordpress_id":4174,"uuid":"5011003b-def0-4849-8fe8-1e2f30401855","filename":"2017-05-06-to-those-of-you-who-dont-speak-french-and-follow-me-on-twitter.markdown","slug":"to-those-of-you-who-dont-speak-french-and-follow-me-on-twitter","excerpt":"As may know, France is going to the polls tomorrow to elect a new president. They have a choice between an unaffiliated centrist, Emmanuel Macron, and an unavowed fascist, Marine le Pen.\n\nI am not French, but my wife is, and my children have a number citizenships among which French is one they all share. Aside from that, the stakes for the French election are much higher than they were for the Dutch elections, a few months ago, and arguably even for the American presidential election last November.\n\nLet me explain those assertions.\n\n","permalink":"https://rlc.vlinder.ca/blog/2017/05/06/to-those-of-you-who-dont-speak-french-and-follow-me-on-twitter","locallink":"/blog/2017/05/06/to-those-of-you-who-dont-speak-french-and-follow-me-on-twitter","published":true},{"author":"rlc","categories":["Technology","Programming","DIY","Innovation"],"comments":true,"date":"2017-04-18T00:00:00.000Z","layout":"post","tags":["C# (0.9)","Arduino (0.8)","OpenCV (0.7)","Laser pointer (0.6)","Face detection (0.8)","Live video feed (0.6)","Programming (0.7)","Dangerous project (0.5)","Innovative (0.6)","YouTube video (0.5)"],"title":"This guy is out of his mind (and lucky if he can still see)","wordpress_id":4169,"uuid":"1d0a4f90-5b4c-4128-bdd7-9353e39eacc3","filename":"2017-04-18-this-guy-is-out-of-his-mind-and-lucky-if-he-can-still-see.markdown","slug":"this-guy-is-out-of-his-mind-and-lucky-if-he-can-still-see","excerpt":"This guy has to be completely bonkers: he wrote an application in C# (would not have my language of choice) to detect a human face in a live video feed and point a laser at it.\n\n","permalink":"https://rlc.vlinder.ca/blog/2017/04/18/this-guy-is-out-of-his-mind-and-lucky-if-he-can-still-see","locallink":"/blog/2017/04/18/this-guy-is-out-of-his-mind-and-lucky-if-he-can-still-see","published":true},{"author":"rlc","categories":["Technology","Law Enforcement","Privacy","Security","Crime"],"comments":true,"date":"2017-03-23T00:00:00.000Z","layout":"post","tags":["1. PGP (1.0)","2. Police (0.8)","3. Server (0.7)","4. Encryption (0.6)","5. Security (0.6)","6. Dutch (0.5)","7. Law enforcement (0.5)","8. Privacy (0.5)","9. Hack (0.4)","10. BlackBerrys (0.4)"],"title":"\"Police hack PGP server\" -- really?","wordpress_id":4162,"uuid":"fb2c7176-247a-45d1-94ca-00f8dd046e1a","filename":"2017-03-23-police-hack-pgp-server-really.markdown","slug":"police-hack-pgp-server-really","excerpt":"This afternoon, this headline caught my attention: \"[Police hack PGP server with 3.6 million messages from organized crime BlackBerrys](http://www.zdnet.com/article/police-hack-pgp-server-with-3-6-million-messages-from-organized-crime-blackberrys/)\". When I read it, I thought: \"either the journalist/title writer got it wrong, or PGP is broken\".\n\n","permalink":"https://rlc.vlinder.ca/blog/2017/03/23/police-hack-pgp-server-really","locallink":"/blog/2017/03/23/police-hack-pgp-server-really","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2017-03-04T00:00:00.000Z","layout":"post","tags":["unpredictability (0.9)","unreadability (0.8)","object-orientation (0.7)","Mjolnir (0.6)","frameworks (0.5)","test documentation (0.4)"],"title":"Writing unmaintainable code in five easy steps","wordpress_id":4154,"uuid":"a20b094e-7fc0-4b68-9927-a8d5095c4f76","filename":"2017-03-04-writing-unmaintainable-code-in-five-easy-steps.markdown","slug":"writing-unmaintainable-code-in-five-easy-steps","excerpt":"I have recently had to modify some code that, to say the least, was very hard to maintain -- or refactor, for that matter.\n\nThe following are a few, firmly tongue-in-cheek, steps to make sure your code is thoroughly frustrating to whoever needs to maintain it after you.\n\n","permalink":"https://rlc.vlinder.ca/blog/2017/03/04/writing-unmaintainable-code-in-five-easy-steps","locallink":"/blog/2017/03/04/writing-unmaintainable-code-in-five-easy-steps","published":true},{"author":"rlc","categories":["Project Management"],"comments":true,"date":"2016-11-16T00:00:00.000Z","layout":"post","tags":["meeting efficiency (0.9)","Scrum (0.8)","agile methodology (0.7)","project management (0.6)","team productivity (0.5)","overhead costs (0.8)","developer time (0.6)","legacy code (0.4)","daily meetings (0.7)","economic argument (0.6)"],"title":"Meetings, meetings, and more meetings","wordpress_id":4126,"uuid":"03b1e4f9-b925-4058-b452-b77b640a52fb","filename":"2016-11-16-meetings-meetings-and-more-meetings.markdown","slug":"meetings-meetings-and-more-meetings","excerpt":"Recently, I spent a significant part of the day in a meeting reviewing the year's progress on several projects, including the introduction of an agile methodology -- Scrum. The approach in the meeting was simple: write on a sticky note what we did well, and on another what we should not repeat or how we should improve. The subject was \"Scrum/agile\". I only wrote one sticky note: \"get rid of Scrum\".\n\n<b><i>The TL;DR:</i></b><br/>\nScrum, in my opinion, is (moderately) useful for small teams with a single, short-term project -- something like a web application. The overhead it imposes _vastly_ outweighs the benefits for larger teams and larger projects.\n\n","permalink":"https://rlc.vlinder.ca/blog/2016/11/16/meetings-meetings-and-more-meetings","locallink":"/blog/2016/11/16/meetings-meetings-and-more-meetings","published":true},{"author":"rlc","categories":["Engineering","Invention","Software Development","Research and Development"],"comments":true,"date":"2016-09-13T00:00:00.000Z","layout":"post","tags":["engineering (0.9)","software (0.8)","inventor (0.7)","lab (0.6)","clock synchronization (0.9)","electricity grid automation (0.8)","debugging (0.7)"],"title":"Debugging — or: what I do for a living","wordpress_id":4100,"uuid":"5bc56694-a0d6-465b-a704-5f2ed6fff219","filename":"2016-09-13-debugging-or-what-i-do-for-a-living.markdown","slug":"debugging-or-what-i-do-for-a-living","excerpt":"I am often asked by friends and acquaintances of various backgrounds, what I do for a living. Depending on my mood at the time, I can answer in any number of ways, but invariably my answers are met with blank stares, questions that clearly demonstrate that I have once again failed to make myself understood and an eventual change of subject.\n\n","permalink":"https://rlc.vlinder.ca/blog/2016/09/13/debugging-or-what-i-do-for-a-living","locallink":"/blog/2016/09/13/debugging-or-what-i-do-for-a-living","published":true},{"author":"rlc","categories":["Social Media","Pets","Photography"],"date":"2016-09-10T00:00:00.000Z","layout":"post","tags":["cat (0.9)","Twitterverse (0.7)","vote (0.5)","Felicia (0.4)","relaxing (0.3)","image (0.3)","Twitter (0.2)","social media (0.2)"],"title":"Really, Twitterverse?","uuid":"2ea5ec1b-cdb2-43ff-b989-e9843d5d2ef5","filename":"2016-09-10-really-twitterverse.markdown","slug":"really-twitterverse","excerpt":"<img src=\"/assets/2016/09/image-2-1024x768.jpeg\" alt=\"Felicia, our cat, relaxing\" />\n\nThe Twitterverse has spoken, quietly, with a single vote -- a cat it is...","permalink":"https://rlc.vlinder.ca/blog/2016/09/10/really-twitterverse","locallink":"/blog/2016/09/10/really-twitterverse","published":true},{"author":"rlc","categories":["Technology","How-to","Parenting","Software Installation","Network Configuration","Web Browsing","Chrome Configuration","Screen Saver Configuration","Guest Session Configuration","LightDM Configuration","Child Safety","Public Kiosk Setup","Virtual Machine Setup","Security Hardening"],"comments":true,"date":"2016-07-27T00:00:00.000Z","layout":"post","tags":["HOWTO (1.0)","Xubuntu (1.0)","kiosk (1.0)","USB stick (1.0)","wired network (1.0)","auxiliary applications (1.0)","Chrome (1.0)","screen saver (1.0)","children (1.0)","TV (1.0)","public kiosk (1.0)","touch screen (1.0)","on-screen keyboards (1.0)","external hard drive (1.0)","guest session (1.0)","autologin (1.0)","mouse (1.0)","hard drive (1.0)","virtual machine (1.0)","harden setup (1.0)"],"title":"Setting up a Xubuntu-based kiosk","wordpress_id":4060,"uuid":"f9d55b05-c4d3-44de-b2c5-7f67f15775ef","filename":"2016-07-27-setting-up-a-xubuntu-based-kiosk.markdown","slug":"setting-up-a-xubuntu-based-kiosk","excerpt":"This is another \"HOWTO\" post -- setting up a Xubuntu-based kiosk, which I did to make a new \"TV\" for my kids.\n\n","permalink":"https://rlc.vlinder.ca/blog/2016/07/27/setting-up-a-xubuntu-based-kiosk","locallink":"/blog/2016/07/27/setting-up-a-xubuntu-based-kiosk","published":true},{"author":"rlc","categories":["Ethics","History","Project Management","Government","Technology","Business","Society"],"comments":true,"date":"2016-05-25T00:00:00.000Z","layout":"post","tags":["project management (0.9)","technocracy (0.8)","ethics (0.7)","history (0.6)","government (0.6)","experts (0.6)","engineering (0.5)","responsibility (0.5)","morality (0.5)","business (0.4)","society (0.4)","humanity (0.4)","mistakes (0.4)","deportation (0.3)","war crimes (0.3)","atrocities (0.3)","ethical implications (0.3)","team organization (0.2)","boundaries (0.2)","Holocaust (0.2)","software development (0.2)","Ford (0.2)","safety (0.2)"],"title":"Technocracy II","wordpress_id":3893,"uuid":"48a1b112-4e2b-4367-b0a0-bcbbd35e5578","filename":"2016-05-25-technocracy-ii.markdown","slug":"technocracy-ii","excerpt":"In my [previous post](/blog/2016/05/technocracy/), I described technocracy as something that is positive in project and product management, and in team organization. In this post, to supply a boundary to my previous text, I will make the case for the opposite.\n\n","permalink":"https://rlc.vlinder.ca/blog/2016/05/25/technocracy-ii","locallink":"/blog/2016/05/25/technocracy-ii","published":true},{"author":"rlc","categories":["Project Management"],"comments":true,"date":"2016-05-21T00:00:00.000Z","layout":"post","tags":["project management (0.9)","team management (0.8)","agile development (0.7)","system architecture (0.8)","technocratic approach (0.9)","software development (0.6)","team organization (0.7)","code review (0.6)","vision statement (0.8)","milestone planning (0.7)"],"title":"Technocracy","wordpress_id":3883,"uuid":"cde0fd9a-f5ba-48df-9497-7aa2227dee42","filename":"2016-05-21-technocracy.markdown","slug":"technocracy","excerpt":"In a discussion with a \"Product Owner\" recently, I told him I take a more technocratic approach to project management than they did. We discussed different project management styles for the next hour or so.\n\n<b><i>TL;DR:</i></b> I believe that\n\n<ul>\n<li>to effectively and efficiently run a large team of developers who are collectively responsible for a product with a large code-base, that team needs to be organized as a network of smaller teams with experts leading each of those smaller teams, and</li>\n<li>to successfully manage an \"agile\" development team and create a viable product, one has to have a vision and break it down from there.</li>\n</ul>\n\n","permalink":"https://rlc.vlinder.ca/blog/2016/05/21/technocracy","locallink":"/blog/2016/05/21/technocracy","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2016-04-20T00:00:00.000Z","layout":"post","tags":["real-time systems (1.0)","worst-case timing (1.0)","average-case timing (1.0)","coffee shop (1.0)","Geeks (1.0)","soft system (0.9)","non-blocking state test (0.9)","redundancy (1.0)","real-time post-condition (0.9)"],"title":"Real-time thirsty","wordpress_id":3843,"uuid":"2dbb7694-ce99-48d7-8a96-bd43e298092a","filename":"2016-04-20-real-time-thirsty.markdown","slug":"real-time-thirsty","excerpt":"<b><i>The TL;DR:</i></b><br/>\n\nIn this post, I show using a fictitious example why real-time systems are defined by their worst-case timing rather than their average-case timing.\n\nImagine you're running a coffee shop -- not the kind you find in Amsterdam, but one where they actually serve coffee. Your customers are generally in a hurry, so they just want to get a cup of coffee, pay and leave to catch their plane, train or automobile. To attract more customers and appeal to the Geek crowd, you name your coffee shop \"Real-Time Thirsty\" and promise an \"Average case serving within one minute!\".\n\nWhile you get many customers, you're not getting the Geeks-in-a-hurry crowd you were expecting.\n\n","permalink":"https://rlc.vlinder.ca/blog/2016/04/20/real-time-thirsty","locallink":"/blog/2016/04/20/real-time-thirsty","published":true},{"author":"rlc","categories":["Technology","Operating Systems","Software Installation","SSH Configuration","X Server Configuration","Linux Configuration","Windows Configuration","Networking","Cybersecurity"],"comments":true,"date":"2016-04-15T00:00:00.000Z","excerpt":"This is one of those \"recipe\" posts that tend to be useful if you happen to want to do exactly what I just did. The end result of this one is a Windows shortcut called \"Linux terminal\" on the desktop, that opens up an SSH terminal to a Linux box, with X forwarding.","layout":"post","tags":["Linux (0.9)","Windows (0.8)","iOS (0.5)","Ubuntu (0.7)","Debian (0.6)","RedHat (0.4)","X-over-SSH (0.6)","Putty (0.4)","Xming (0.4)","Cygwin (0.9)","SSH (0.8)","X server (0.7)","Xorg-server (0.6)","Vim (0.5)","Mintty (0.5)","X11Forwarding (0.6)","XWin (0.4)","DISPLAY environment variable (0.5)","X logo (0.4)","Xterm (0.4)"],"title":"Setting up Cygwin for X forwarding","wordpress_id":3816,"uuid":"f66f9df2-46ff-467f-9248-078e33bb3737","filename":"2016-04-15-setting-up-cygwin-for-x-forwarding.markdown","slug":"setting-up-cygwin-for-x-forwarding","permalink":"https://rlc.vlinder.ca/blog/2016/04/15/setting-up-cygwin-for-x-forwarding","locallink":"/blog/2016/04/15/setting-up-cygwin-for-x-forwarding","published":true},{"author":"rlc","categories":["Technology","Software Development","Continuous Integration","Virtualization","Open Source Software"],"comments":true,"date":"2016-04-02T00:00:00.000Z","layout":"post","tags":["server (0.9)","operating systems (0.8)","VMs (0.7)","Continuous Integration (0.9)","OpenDNP3 (0.8)","CMake (0.7)","configuration management (0.7)","AppVeyor (0.8)","Travis-CI (0.8)","build jobs (0.7)","release process (0.8)"],"title":"Shutting down servers","wordpress_id":3810,"uuid":"83114f42-f12b-473d-9f00-feef6aee2ac1","filename":"2016-04-02-shutting-down-servers.markdown","slug":"shutting-down-servers","excerpt":"I used to have a server with five operating systems, running in VMs, merrily humming away compiling whatever I coded. I say \"used to have\" because I shut it down a few weeks ago. Now, I have those same operating systems, as well as a large number of others, running on systems I don't need to worry about.\n\n","permalink":"https://rlc.vlinder.ca/blog/2016/04/02/shutting-down-servers","locallink":"/blog/2016/04/02/shutting-down-servers","published":true},{"author":"rlc","categories":["Security","Programming","Software Development","Open Source Software"],"comments":true,"date":"2016-03-28T00:00:00.000Z","layout":"post","tags":["security (0.9)","STL algorithms (0.8)","iterators (0.7)","containers (0.6)","safety (0.8)","output ranges (0.5)","Microsoft Visual Studio (0.7)","checked iterator (0.9)","debugging (0.6)","compilers (0.7)","Apache license (0.6)","GitHub (0.7)","pull requests (0.5)"],"title":"Checked output iterator","wordpress_id":3806,"uuid":"a807507a-4fef-4b13-818c-8ef2dbe68b90","filename":"2016-03-28-checked-output-iterator.markdown","slug":"checked-output-iterator","excerpt":"While writing about security -- which takes a great deal of my time lately, which is one of the reasons I haven't updated my blog as often as I usually would -- I came to the conclusion that, while I recommend using STL algorithms, iterators and containers for safety purposes that doesn't solve the problem when the standard algorithms don't check the validity of their output ranges.\n\n","permalink":"https://rlc.vlinder.ca/blog/2016/03/28/checked-output-iterator","locallink":"/blog/2016/03/28/checked-output-iterator","published":true},{"author":"rlc","categories":["Technology","Programming","Software Development","Engineering","Opinions"],"comments":true,"date":"2016-03-08T00:00:00.000Z","layout":"post","tags":["Dutch saying (1.0)","Opinionated cobbler (0.8)","Scripting engine (0.9)","String classes (0.9)","C-style strings (0.7)","Copy-on-write string (0.7)","Swiss army knife (0.6)","Litmus test (0.6)","Security flaw (0.8)","SSL implementation (0.8)"],"title":"Schoenmaker, blijf bij je leest (Cobbler, stick to your last)","wordpress_id":3441,"uuid":"530edc3b-c948-4d1c-94f4-4dce204af860","filename":"2016-03-08-schoenmaker-blijf-bij-je-leest-cobbler-stick-to-your-last.markdown","slug":"schoenmaker-blijf-bij-je-leest-cobbler-stick-to-your-last","excerpt":"This is an old Dutch saying, which probably has its origins in a village with a particularly opinionated cobbler.\n\nI am not one to stick to my last -- but if I were a cobbler, I don't think I'd be _that_ cobbler: I like to know what I'm doing.\n\n","permalink":"https://rlc.vlinder.ca/blog/2016/03/08/schoenmaker-blijf-bij-je-leest-cobbler-stick-to-your-last","locallink":"/blog/2016/03/08/schoenmaker-blijf-bij-je-leest-cobbler-stick-to-your-last","published":true},{"author":"rlc","categories":["Technology","Programming","Optimization","Concurrency","Data Structures"],"comments":true,"date":"2015-11-07T00:00:00.000Z","layout":"post","tags":["queue-optimization (1.0)","lamport-queue (1.0)","shared-state (1.0)","memory-barriers (1.0)","atomic-operations (1.0)","synchronization-cost (1.0)","memory-model (1.0)","optimization-tradeoff (1.0)","caching (1.0)","reducing-operations (1.0)"],"title":"Interesting modifications to the Lamport queue, part II","wordpress_id":3763,"uuid":"f817a5bc-457e-4cd4-aea7-65fdc6c147d9","filename":"2015-11-07-interesting-modifications-to-the-lamport-queue-part-ii.markdown","slug":"interesting-modifications-to-the-lamport-queue-part-ii","excerpt":"In the [previous installment](/blog/2015/11/05/interesting-modifications-to-the-lamport-queue), on this subject, I described a few modifications to the Lamport queue introduced by Nhat Minh Le _et al._ to relax operations on shared state as much as possible, while maintaining correctness.\n\nIn this article, I will discuss the further optimizations to reduce the number of operations on shared state, thus eliminating the need for memory barriers completely in many cases.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/11/07/interesting-modifications-to-the-lamport-queue-part-ii","locallink":"/blog/2015/11/07/interesting-modifications-to-the-lamport-queue-part-ii","published":true},{"author":"rlc","categories":["Computer Science","Programming","Multi-threading","Algorithms","Concurrency","Memory Model","Data Structures"],"comments":true,"date":"2015-11-06T00:00:00.000Z","layout":"post","permanent link":"/blog/2015/11/interesting-modifications-to-the-lamport-queue/","slug":"interesting-modifications-to-the-lamport-queue","tags":["queue-algorithms (1.0)","Lamport-queue (1.0)","C11-memory-model (1.0)","cache-locality (1.0)","multi-threaded-programming (1.0)","SPSC (1.0)","MPSC (1.0)","SPMC (1.0)","MPMC (1.0)","lock-freedom (1.0)","contention (1.0)","memory-barriers (1.0)","data-race (1.0)","happens-before (1.0)","atomic-operations (1.0)"],"title":"Interesting modifications to the Lamport queue","wordpress_id":3679,"uuid":"91e4dca7-b3cf-45d6-b44b-f5b525a57c2e","filename":"2015-11-06-interesting-modifications-to-the-lamport-queue.markdown","excerpt":"While researching lock-free queue algorithms, I came across a few articles that made some interesting modifications to the Lamport queue. One made it more efficient by exploiting C11's new memory model, while another made it more efficient by using cache locality. As I found the first one to be more interesting, and the refinements more useful for general multi-threaded programming, I thought I'd explain that one in a bit more detail.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/11/06/interesting-modifications-to-the-lamport-queue","locallink":"/blog/2015/11/06/interesting-modifications-to-the-lamport-queue","published":true},{"author":"rlc","categories":["Technology","Cybersecurity","SCADA","Open Source Software"],"comments":true,"date":"2015-10-01T00:00:00.000Z","layout":"post","tags":["DNP3 (1.0)","SCADA protocol (0.7)","EPRI (0.8)","Secure Authentication (0.9)","Key Management Protocol (0.8)","Fuzzing (0.6)","OpenDNP3 (0.8)","Robus (0.7)","Modbus (0.7)","Security (0.9)","Interoperability (0.8)","TLS (0.7)","Face-to-face meeting (0.6)","CERT advisory (0.7)","Open Source (0.8)"],"title":"Progress in DNP3 security","wordpress_id":3733,"uuid":"460a09ab-511d-41d1-a207-451f901fb7c1","filename":"2015-10-01-progress-in-dnp3-security.markdown","slug":"progress-in-dnp3-security","excerpt":"In [July last year](/blog/2014/07/ics-security-current-and-future-focus/), I discussed why Adam Crain and Chris Sistrunk fuzzed DNP3 stacks in devices from various vendors, finding many issues along the way (see [project Robus](https://automatak.com/robus/)). This time, I'll provide a bit of an overview of what has happened since.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/10/01/progress-in-dnp3-security","locallink":"/blog/2015/10/01/progress-in-dnp3-security","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2015-09-04T00:00:00.000Z","layout":"post","tags":["Windows API (1.0)","synchronization primitive (0.8)","mutual exclusion device (0.7)","CRITICAL_SECTION (1.0)","critical section (0.9)","shared resource (0.8)","threads (0.6)","processes (0.6)","data protection (0.8)","concurrent access (0.7)","ScopedLock class (0.9)","exception-safety (0.8)","lock leaks (0.7)","POSIX (0.6)","Mutex class (0.8)","encapsulation (0.7)","newbies (0.5)","mutex (0.9)"],"title":"CIS: \"Protecting\" code in stead of data","wordpress_id":3236,"uuid":"72856ae1-cfe5-417f-bebb-2b4d92b2f71b","filename":"2015-09-04-cis-protecting-code-in-stead-of-data.markdown","slug":"cis-protecting-code-in-stead-of-data","excerpt":"The Windows API contains a synchronization primitive that _is_ a mutual exclusion device, but is also a colossal misnomer. I mean, of course, the `CRITICAL_SECTION`.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/09/04/cis-protecting-code-in-stead-of-data","locallink":"/blog/2015/09/04/cis-protecting-code-in-stead-of-data","published":true},{"author":"rlc","categories":["Software Development Best Practices"],"comments":true,"date":"2015-08-17T00:00:00.000Z","layout":"post","tags":["Threading APIs (0.8)","Windows API (0.7)","pthreads (0.7)","Mutex (0.9)","Locking (0.8)","Unlocking (0.8)","Lock leak (0.9)","Deadlocks (0.7)","RAII (0.9)","Coding standards (0.6)","Static analysis tool (0.6)"],"title":"CIS: Lock Leaks","wordpress_id":3241,"uuid":"15d88784-c6fc-4a77-a8b5-8c50777e6c83","filename":"2015-08-17-cis-lock-leaks.markdown","slug":"cis-lock-leaks","excerpt":"The two most popular threading APIs, the Windows API and pthreads, both have the same basic way of locking and unlocking a mutex -- that is, with two separate functions. This leaves the code prone to lock leak: the thread that acquired a lock doesn't release it because an error occurred.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/08/17/cis-lock-leaks","locallink":"/blog/2015/08/17/cis-lock-leaks","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2015-08-05T00:00:00.000Z","layout":"post","tags":["synchronization (0.9)","server application (0.8)","database (0.8)","triggers (0.7)","communication (0.7)","coupling (0.9)","API (0.6)","retro-action (0.7)","Windows API (0.6)","anonymous pipes (0.6)"],"title":"CIS: Unexpected Coupling","wordpress_id":3266,"uuid":"7a06511d-3331-4ce5-8d11-a009672e77ba","filename":"2015-08-05-cis-unexpected-coupling.markdown","slug":"cis-unexpected-coupling","excerpt":"One of the most common problems with synchronization occurs when things need each other that you didn't expect to need each other.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/08/05/cis-unexpected-coupling","locallink":"/blog/2015/08/05/cis-unexpected-coupling","published":true},{"author":"rlc","categories":["Version Control Systems","Software Development Tools","Distributed Systems","Graphical User Interfaces","Integration with IDEs","Understanding Git","Rebasing in Git","Continuous Integration"],"comments":true,"date":"2015-07-20T00:00:00.000Z","layout":"post","tags":["Git misconceptions (1.0)","Graphical tools for Git (0.8)","Central repository in Git (0.7)","SSH in Git (0.6)","IDE integration with Git (0.9)","Understanding Git (1.0)","Rebasing in Git (0.8)","Continuous integration in Git (0.9)"],"title":"Git demystification","wordpress_id":3662,"uuid":"183aa905-4ec5-404d-a2d2-191a4f44cf6a","filename":"2015-07-20-git-demystification.markdown","slug":"git-demystification","excerpt":"There are a few misconceptions I hear about Git that I find should be cleared up a bit, so here goes:\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/07/20/git-demystification","locallink":"/blog/2015/07/20/git-demystification","published":true},{"author":"rlc","categories":["Software Development","Continuous Integration","Testing","Automation"],"comments":true,"date":"2015-07-16T00:00:00.000Z","layout":"post","tags":["Continuous Integration (1.0)","Small incremental changes (0.8)","Continuous testing (0.9)","Continuous builds (0.9)","Investment (0.7)","Fail Fast (1.0)","Self-documenting code (0.9)","Test cases (0.8)","Build fast (0.9)","Automate testing (1.0)","Feedback (0.8)"],"title":"Three ideas you should steal from Continuous Integration","wordpress_id":3674,"uuid":"3a7c97e0-609a-491d-b998-2a38bde65b71","filename":"2015-07-16-three-ideas-you-should-steal-from-continuous-integration.markdown","slug":"three-ideas-you-should-steal-from-continuous-integration","excerpt":"I like Continuous Integration -- a lot. Small incremental changes, continuous testing, continuous builds: these are Good Things. They provide statistics, things you can measure your progress with. But Continuous Integration requires an investment on the part of the development team, the testers, etc. There are, however, a few things you can adopt _right now_ so, I decided to give you a list of things I think you _should_ adopt.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/07/16/three-ideas-you-should-steal-from-continuous-integration","locallink":"/blog/2015/07/16/three-ideas-you-should-steal-from-continuous-integration","published":true},{"author":"rlc","categories":["Web Development","Software Development","Memory Optimization","Server Implementation","Performance Optimization"],"comments":true,"date":"2015-07-03T00:00:00.000Z","layout":"post","tags":["Arachnida (0.9)","Web server (0.8)","Memory optimization (0.7)","Service separation (0.6)","String optimization (0.8)","Memory profiling (0.7)","Low-hanging fruit (0.6)","Caching (0.6)","RAII (0.7)","Static variables (0.7)"],"uuid":"fd2fbbce-a353-4134-8659-21395db2c218","filename":"2015-07-03-eliminating-waste-as-a-way-to-optimize.markdown","slug":"eliminating-waste-as-a-way-to-optimize","excerpt":"I recently had a chance to work on an implementation of an Arachnida-based web server that had started using a lot of memory as new features were being added.\n\nArachnida itself is pretty lean and comes with a number of tools to help build web services in industrial devices, but it is not an \"app in a box\": some assembly is required and you have to make some of the parts yourself.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/07/03/eliminating-waste-as-a-way-to-optimize","locallink":"/blog/2015/07/03/eliminating-waste-as-a-way-to-optimize","published":true},{"author":"rlc","categories":["Technical Writing"],"comments":false,"date":"2015-06-30T00:00:00.000Z","layout":"post","tags":["technical documentation (0.9)","communication (0.8)","investment (0.8)","code quality (0.7)","usability (0.7)","customer expectations (0.6)","product quality (0.6)","tools (0.6)","time management (0.5)","software engineering (0.5)"],"title":"Technical documentation","wordpress_id":3431,"uuid":"fcd1baeb-e004-4d86-8c6d-208572ccd3f8","filename":"2015-06-30-technical-documentation.markdown","slug":"technical-documentation","excerpt":"Developers tend to have a very low opinion of technical documentation: it is often wrong, partial, unclear and not worth the trouble of reading. This is, in part, a self-fulfilling prophecy: such low opinions of technical documentation results in them not being read, and not being invested in.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/06/30/technical-documentation","locallink":"/blog/2015/06/30/technical-documentation","published":true},{"author":"rlc","categories":["Software Development","Technology","Business","Programming","Open Source Software"],"comments":true,"date":"2015-06-29T00:00:00.000Z","layout":"post","tags":["Vlinder Software (0.9)","Depends (0.9)","Dependency tracker (0.8)","Jail project (0.6)","Safe Memory Reclamation algorithm (0.7)","Lock-free code (0.6)","Adapter pattern (0.7)","Dr. Dobbs (0.6)","GNU Make (0.6)","Microsoft Visual Studio (0.6)","Commercial support (0.7)","GPLv2 (0.6)"],"title":"The story of \"Depends\"","wordpress_id":3647,"uuid":"dc16d70c-e27f-4065-bbde-0dd2e2283e24","filename":"2015-06-29-the-story-of-depends.markdown","slug":"the-story-of-depends","excerpt":"Today, I announced on behalf of my company, Vlinder Software, that we would no longer be supporting \"Depends\", the dependency tracker. I think it may be worthwhile to tell you a by about the history of Depends, how it became a product of Vlinder Software, and why it no longer is one.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/06/29/the-story-of-depends","locallink":"/blog/2015/06/29/the-story-of-depends","published":true},{"author":"rlc","categories":["Mathematics"],"comments":true,"date":"2015-06-25T00:00:00.000Z","excerpt":"I am not a mathematician, but I do like Bayes' theorem for non-functional requirements analysis -- and I'd like to present an example of its application","layout":"post","tags":["mathematics (0.9)","Bayes' theorem (0.8)","non-functional requirements analysis (0.7)","IEEE Standard 1815-2012 (0.6)","DNP (0.5)","TCP/IP (0.5)","availability requirements (0.4)","networking (0.4)","link status (0.4)","device failure (0.4)","uptime (0.4)","connection status (0.4)","probability (0.4)","TCP connection (0.4)","DNP3 devices (0.4)","link status request (0.4)","availability (0.4)","link status request time-out (0.4)","flow chart (0.4)","disconnect/reconnect (0.4)","system's link (0.4)"],"title":"Bayes' theorem in non-functional requirements analysis -- an example","wordpress_id":3540,"uuid":"d22496f4-4e06-4245-81d1-7838c69c5225","filename":"2015-06-25-bayes-theorem-in-non-functional-requirements-analysis-an-example.markdown","slug":"bayes-theorem-in-non-functional-requirements-analysis-an-example","permalink":"https://rlc.vlinder.ca/blog/2015/06/25/bayes-theorem-in-non-functional-requirements-analysis-an-example","locallink":"/blog/2015/06/25/bayes-theorem-in-non-functional-requirements-analysis-an-example","published":true},{"author":"rlc","categories":["Industrial espionage","Trade secrets","Economic espionage","Intellectual property theft","Technology security"],"comments":true,"date":"2015-05-24T00:00:00.000Z","layout":"post","tags":["industrial espionage (1.0)","intellectual property theft (1.0)","China (0.9)","Canada (0.8)","trade secrets (0.7)","economic espionage (0.7)","legislation (0.6)","Nortel Networks Corp. (0.5)","FBI (0.5)","IP theft (0.5)","technology companies (0.4)","cybersecurity (0.4)","professionals (0.4)","mind-set (0.3)","FBI agent (0.3)","agriculture (0.3)","telecommunications (0.3)"],"title":"Globe and Mail: Canada lacks law that defines, protects trade secrets","wordpress_id":3507,"uuid":"2f7608f3-335e-444b-9546-98147a378ed3","filename":"2015-05-24-globe-and-mail-canada-lacks-law-that-defines-protects-trade-secrets.markdown","slug":"globe-and-mail-canada-lacks-law-that-defines-protects-trade-secrets","excerpt":"According to the Globe and Mail (Iain Marlow, 20 May 2015) the 32-count indictment against six Chinese nationals who allegedly used their positions to obtain intellectual property from universities and businesses in the U.S. and then take that knowledge home to China, would not be possible here: \"Canadian observers say the 32 count indictment, which was unsealed late on Monday, highlights the prevalence and severity of industrial espionage in North America, and underscores the need for Canada to adopt more stringent laws. Canada has no dedicated act on trade secrets and economic espionage and has not successfully prosecuted a similar case, experts say.\"\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/05/24/globe-and-mail-canada-lacks-law-that-defines-protects-trade-secrets","locallink":"/blog/2015/05/24/globe-and-mail-canada-lacks-law-that-defines-protects-trade-secrets","published":true},{"author":"rlc","categories":["Consumer Behavior"],"comments":true,"date":"2015-02-15T00:00:00.000Z","layout":"post","tags":["Behavioural economics (0.9)","Consumer behavior (0.8)","Materialism (0.7)","Technology consumption (0.6)","Product satisfaction (0.5)","Minimalism (0.4)","Apple products (0.3)","Personal finance (0.2)","Prioritizing needs (0.1)"],"title":"Why I didn't buy a new iPad today","wordpress_id":3435,"uuid":"7381f7ab-b7cb-4f5a-a5d8-2664176daed3","filename":"2015-02-15-why-i-didnt-buy-a-new-ipad-today.markdown","slug":"why-i-didnt-buy-a-new-ipad-today","excerpt":"Behavioural economists will tell you that the \"happy high\" you get from buying a new toy, a new device, a new computer, a new car or a new house usually wares off within three months. It's called the ever-receding horizon of happiness (or something like that -- something close to the ever-receding hair line) and it's why I have a small car (just big enough for day-to-day requirements but not big enough to take the whole family on vacation), a fairly crappy laptop computer (good enough to run OpenOffice Write and an SSH client on, but not good enough to compile FPGA firmware or big chunks of software in any hurry, but that's what the SSH client is there for) and why I've had the same iPad for the last five years or so.\n\n","permalink":"https://rlc.vlinder.ca/blog/2015/02/15/why-i-didnt-buy-a-new-ipad-today","locallink":"/blog/2015/02/15/why-i-didnt-buy-a-new-ipad-today","published":true},{"author":"rlc","categories":["Technology","Programming","Time Management"],"comments":true,"date":"2014-11-13T00:00:00.000Z","layout":"post","tags":["gardening (0.9)","code implementation (0.8)","time-outs (0.9)","monotonic counter (0.9)","HPET (0.7)","counter frequency (0.8)","overflow prevention (0.8)","embedded systems (0.7)"],"title":"Implementing time-outs (safely)","wordpress_id":3423,"uuid":"de70f6dc-e8cb-404c-82b2-3283f2294122","filename":"2014-11-13-implementing-time-outs-safely.markdown","slug":"implementing-time-outs-safely","excerpt":"Thyme is a herb that grows in gardens.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/11/13/implementing-time-outs-safely","locallink":"/blog/2014/11/13/implementing-time-outs-safely","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2014-11-09T00:00:00.000Z","layout":"post","tags":["bungee coding (0.9)","VHDL (0.8)","digital signal processing (0.7)","Fourier transforms (0.6)","real-time constraints (0.5)","Web interface (0.4)","PLC-style logic (0.7)","protocol stacks (0.6)","Python code generation (0.8)","technical design (0.9)","fast-paced project (0.7)","proof-of-concept (0.8)"],"title":"Bungee coding","wordpress_id":3158,"uuid":"baaf5731-f23e-4414-abc0-2e909d801785","filename":"2014-11-09-bungee-coding.markdown","slug":"bungee-coding","excerpt":"For the last few weeks, I've been doing what you might call _bungee coding_: going from high-level to low-level code and back. This week, a whole team is doing it -- fun!\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/11/09/bungee-coding","locallink":"/blog/2014/11/09/bungee-coding","published":true},{"author":"rlc","categories":["Technology","Programming","Transportation","Electronics","Engineering"],"comments":true,"date":"2014-11-08T00:00:00.000Z","excerpt":"While at Chicago's O'Hare airport, waiting for my connecting flight to Reno, I had a bit of time to start coding on my BrainF interpreter again -- once I had found an outlet, that is. My goal was to add something that would allow something else to communicate with the interpreter. There are a few buses I like for this kind of thing, and SPI is one of them.","layout":"post","tags":["airport (0.9)","coding (0.8)","BrainF interpreter (0.7)","SPI (0.9)","full-duplex (0.6)","clock (0.5)","master (0.4)","slave (0.4)","MOSI (0.3)","MISO (0.3)","debouncing (0.7)","FIFO (0.6)","GitHub (0.4)","select (0.8)","deselect (0.8)","testbench (0.5)"],"title":"Adding SPI support to the BrainF interpreter","wordpress_id":3359,"uuid":"4ad44361-b08f-4a15-a2d8-55e9dee7fa5a","filename":"2014-11-08-adding-spi-support-to-the-brainf-interpreter.markdown","slug":"adding-spi-support-to-the-brainf-interpreter","permalink":"https://rlc.vlinder.ca/blog/2014/11/08/adding-spi-support-to-the-brainf-interpreter","locallink":"/blog/2014/11/08/adding-spi-support-to-the-brainf-interpreter","published":true},{"author":"rlc","categories":["Web Development"],"comments":true,"date":"2014-11-01T00:00:00.000Z","layout":"post","tags":["image (0.9)","communication (0.8)","missed (0.7)","alt text (0.6)","visual content (0.5)"],"title":"Miss(ed) Communication","wordpress_id":3400,"uuid":"38210a87-f63d-44bb-a5fc-95ff727e4593","filename":"2014-11-01-missed-communication.markdown","slug":"missed-communication","excerpt":"<img src=\"/assets/2014/10/IMG_1303-1024x279.png\" alt=\"Miss(ed) Communication\" />","permalink":"https://rlc.vlinder.ca/blog/2014/11/01/missed-communication","locallink":"/blog/2014/11/01/missed-communication","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2014-10-24T00:00:00.000Z","layout":"post","tags":["bugs (1.0)","API (0.8)","library (0.7)","smart pointer (0.9)","design flaw (0.8)","testing framework (0.6)","implementation (0.7)","code changes (0.7)","requirements (0.6)","executive decision (0.5)","Vlinder Software (0.6)","namespace (0.7)","automated builds (0.6)","upgrade (0.7)"],"title":"Radical Refactoring: Breaking Changes","wordpress_id":3349,"uuid":"1a10f7e5-3834-41ab-9442-22b25a42f820","filename":"2014-10-24-radical-refactoring-breaking-changes.markdown","slug":"radical-refactoring-breaking-changes","excerpt":"One of the most common sources of bugs is ambiguity: some too-subtle API change that's missed in a library update and introduces a subtle bug, that finally only gets found out in the field. My answer to that problem is radical: make changes breaking changes -- make sure the code just won't compile unless fixed: the compiler is generally better at finding things you missed than you are.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/10/24/radical-refactoring-breaking-changes","locallink":"/blog/2014/10/24/radical-refactoring-breaking-changes","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2014-10-22T00:00:00.000Z","layout":"post","tags":["VHDL (1.0)","BrainF (1.0)","Interpreter (0.9)","Instructions (0.8)","Debug (0.7)","Registers (0.6)","Compiler (0.6)","Test Bench (0.6)","Breakpoints (0.5)","Simulation (0.5)","Interrupt (0.5)"],"title":"Improving the BrainF interpreter","wordpress_id":3338,"uuid":"18ea097a-ce88-46b1-b12f-d11f30d34fb6","filename":"2014-10-22-improving-the-brainf-interpreter.markdown","slug":"improving-the-brainf-interpreter","excerpt":"As I wrote in a [previous post](/blog/2014/10/writing-a-brainf-interpreter-in-vhdl/), I wrote a BrainF interpreter in VHDL over a week-end. I decided to improve it a bit.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/10/22/improving-the-brainf-interpreter","locallink":"/blog/2014/10/22/improving-the-brainf-interpreter","published":true},{"author":"rlc","categories":["Software Development","Code Refactoring","API Design","Compiler Optimization","Bug Detection"],"comments":true,"date":"2014-10-18T00:00:00.000Z","layout":"post","tags":["bug detection (0.9)","API changes (0.8)","compiler (0.9)","code review (0.7)","platform compatibility (0.6)","refactoring (0.8)","economic considerations (0.5)"],"title":"Radical Refactoring: Have the compiler to (some of) the reviewing","wordpress_id":3346,"uuid":"649cc25e-5514-49e0-bbba-008e2b724074","filename":"2014-10-18-radical-refactoring-have-the-compiler-to-some-of-the-reviewing.markdown","slug":"radical-refactoring-have-the-compiler-to-some-of-the-reviewing","excerpt":"One of the most common sources of bugs is ambiguity: some too-subtle API change that's missed in a library update and introduces a subtle bug, that finally only gets found out in the field. My answer to that problem is radical: make changes breaking changes -- make sure the code just won't compile unless fixed: the compiler is generally better at finding things you missed than you are.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/10/18/radical-refactoring-have-the-compiler-to-some-of-the-reviewing","locallink":"/blog/2014/10/18/radical-refactoring-have-the-compiler-to-some-of-the-reviewing","published":true},{"author":"rlc","categories":["Software Development","Programming","Interpreters","Parsers","VHDL","Design Patterns","State Machines","AST (Abstract Syntax Tree)","Coding Style","Signal Processing","Simulation","Testing","Optimization","Assertions","Test Bench","ModelSim"],"comments":true,"date":"2014-10-03T00:00:00.000Z","layout":"post","slug":"writing-a-brainf-interpreter-in-vhdl","tags":null,"title":"Writing a BrainF interpreter ... in VHDL","wordpress_id":3303,"uuid":"a03b4ef9-69d0-40b8-9d02-2b4348b92ef3","filename":"2014-10-03-writing-a-brainf-interpreter-in-vhdl.markdown","excerpt":"I've written parsers and interpreters before, but usually in C++ or, if I was feeling like doing _all_ of the hard work myself, in C.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/10/03/writing-a-brainf-interpreter-in-vhdl","locallink":"/blog/2014/10/03/writing-a-brainf-interpreter-in-vhdl","published":true},{"author":"rlc","categories":["Programming","Algorithms","Data Structures"],"comments":true,"date":"2014-09-05T00:00:00.000Z","layout":"post","tags":["algorithm (0.9)","query routine (0.8)","set manipulation (0.7)","C++ (0.6)","interview question (0.5)","complexity analysis (0.8)","GitHub (0.4)"],"title":"Optimization by puzzle","wordpress_id":3274,"uuid":"4c9e5f96-18a6-4cf2-817c-f4cbbc3246e0","filename":"2014-09-05-optimization-by-puzzle.markdown","slug":"optimization-by-puzzle","excerpt":"Given a `query` routine that takes a name and may return several, write a routine that takes a single name and returns a set of names for which each of the following is true:\n\n1. For each name in the set, `query` has been called exactly once.\n2. All the results from the calls to `query` are included in the set\n3. the parameter to the routine is not included in the set\n\nYou may assume the following:\n\n1. Calls to `query` are idempotent (So you really do need to call them only once).\n2. There is a finite number of values for names.\n3. Names are less-than-comparable value-types (i.e. you can store them in an `std::set`) and are not expensive to copy\n4. `query` results never contain their argument (I.e. for the case at hand, we're querying a directed acyclic graph, so our first argument will never be seen in any of the `query` results, although any given value may appear more than once in `query` results).\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/09/05/optimization-by-puzzle","locallink":"/blog/2014/09/05/optimization-by-puzzle","published":true},{"author":"rlc","categories":["Education","Mathematics","Problem-solving","Algorithms"],"comments":true,"date":"2014-09-05T00:00:00.000Z","layout":"post","tags":["set theory (0.9)","graph theory (0.8)","algorithms (0.9)","computational complexity (0.7)","children (0.6)","names (0.7)","Venn chart (0.5)","analogies (0.6)"],"title":"A different take on the \"optimize by puzzle\" problem","wordpress_id":3291,"uuid":"ce9c7a83-3e4f-4398-939a-efc08ed6e45e","filename":"2014-09-05-a-different-take-on-the-optimize-by-puzzle-problem.markdown","slug":"a-different-take-on-the-optimize-by-puzzle-problem","excerpt":"I explained the problem I presented in my [previous post](/blog/2014/09/optimization-by-puzzle/) to my wife overt dinner yesterday. She's a professor at law and a very intelligent person, but has no notion of set theory, graph theory, or algorithms. I'm sure many of my colleagues run into similar problems, so I thought I'd share the analogies I used to explain the problem, and the solution. I didn't get to explaining how to arrive at computational complexity, though.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/09/05/a-different-take-on-the-optimize-by-puzzle-problem","locallink":"/blog/2014/09/05/a-different-take-on-the-optimize-by-puzzle-problem","published":true},{"author":"rlc","categories":["Software Development","Bug Hunting","Programming Languages","System Analysis","Firmware Development","Protocol Implementation","Configuration Management"],"comments":true,"date":"2014-08-11T00:00:00.000Z","layout":"post","tags":["bug-hunt (1.0)","programming languages (0.8)","protocol (0.7)","firmware (0.9)","bug (1.0)","testing (0.6)","configuration (0.8)","DSP (0.7)","FPGA (0.7)","binary search (0.5)","bug-fixing (0.9)","system analysis (0.7)"],"title":"Looking for bugs (in several wrong places)","wordpress_id":3254,"uuid":"114d3834-2e0c-4e96-a1c6-c5bc5d2e67ed","filename":"2014-08-11-looking-for-bugs-in-several-wrong-places.markdown","slug":"looking-for-bugs-in-several-wrong-places","excerpt":"I recently went on a bug-hunt in a huge system that I knew next to nothing about. The reason _I_ went on this bug-hunt was because, although I didn't know the system itself, I knew what the system was supposed to do, and I can read and write all the programming languages involved in developing the system (C++, C and VHDL). I'm also very familiar with the protocol of which the implementation was buggy, so not knowing the system was a minor inconvenience.\n\nThese are some notes I took during the bug-hunt, some of which intentionally kept vague so as to protect the guilty.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/08/11/looking-for-bugs-in-several-wrong-places","locallink":"/blog/2014/08/11/looking-for-bugs-in-several-wrong-places","published":true},{"author":"rlc","categories":["Productivity","Communication","Email Management"],"comments":true,"date":"2014-07-15T00:00:00.000Z","layout":"post","tags":["Email management (0.9)","Communication efficiency (0.8)","Inbox organization (0.7)","Prioritizing emails (0.6)","Response time (0.5)","Avoiding email overload (0.4)","Effective communication (0.4)","Email etiquette (0.3)","Managing work emails (0.3)","VIP communication (0.2)"],"title":"Re: E-mail","wordpress_id":3217,"uuid":"fb9e27bb-fe00-4e0f-8a64-1eb3fd7118e7","filename":"2014-07-15-re-e-mail.markdown","slug":"re-e-mail","excerpt":"The Globe&Mail; dedicated half a page of the Report on Business section to managing your inbox today. People who work with me know that\n\n1. if you want to get ahold of me quickly, E-mail is not the way to go\n2. if you want a thought-out, thorough response, E-mail _is_ the way to go\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/07/15/re-e-mail","locallink":"/blog/2014/07/15/re-e-mail","published":true},{"author":"rlc","categories":["Cybersecurity","Industrial Control Systems","Communication Protocols","SCADA Systems","Vulnerability Research","Smart Grids","Responsible Disclosure","Fuzzing","IEC Standards","Modbus","Metasploit","Vendor-specific Protocols"],"comments":true,"date":"2014-07-10T00:00:00.000Z","layout":"post","tags":["ICS security (1.0)","DNP3 (1.0)","SCADA protocols (0.9)","OpenDNP3 (0.8)","Smart Grid (0.7)","Security features (0.6)","Technical Committee (0.5)","Responsible disclosure (0.9)","Fuzzing tool (0.8)","Vendor-specific protocols (0.7)","Modbus (0.6)","IEC 61850 (0.5)","IEC 60870 (0.4)","Home-grown protocols (0.3)"],"title":"ICS Security: Current and Future Focus","wordpress_id":"2576 - ICS security","uuid":"72f5e824-0856-459e-a40b-3edb70d72cba","filename":"2014-07-10-ics-security-current-and-future-focus.markdown","slug":"ics-security-current-and-future-focus","excerpt":"The flurry of DNP3-related vulnerabilities reported to ICS-CERT as part of [Automatak's project Robus](http://www.automatak.com/robus/) seems to have subsided a bit, so it may be time to take a look at where we are regarding ICS security, and where we might be going next.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/07/10/ics-security-current-and-future-focus","locallink":"/blog/2014/07/10/ics-security-current-and-future-focus","published":true},{"author":"rlc","categories":["Open Source Software","Software Security","Vulnerabilities","Proprietary Software"],"comments":true,"date":"2014-07-06T00:00:00.000Z","excerpt":"There have been a number of well-publicized security flaws in open source software lately -- the most well-publicized of course being the OpenSSL Heartbleed bug.\n\nThen there's the demise of Truecrypt, recent bugs in GnuTLS and recent bugs in the Linux kernel.\n\nSo, is there a systemic problem with Open Source software? Does proprietary software have the same problem?\n","layout":"post","tags":["security (3.0)","open source (2.5)","software (2.0)","bugs (1.5)","vulnerabilities (1.5)","proprietary (1.2)","code (1.0)","Heartbleed (1.0)","Truecrypt (1.0)","OpenJDK (1.0)","Linux kernel (1.0)","GnuTLS (1.0)","CVE (1.0)","transparency (1.0)","quality (1.0)","popularity (1.0)","awareness (1.0)","Microsoft Windows CE (1.0)"],"title":"Is Open Source software security falling apart?","wordpress_id":3163,"uuid":"2a868d5c-dc42-47e7-a434-dea31dd26215","filename":"2014-07-06-is-open-source-software-security-falling-apart.markdown","slug":"is-open-source-software-security-falling-apart","permalink":"https://rlc.vlinder.ca/blog/2014/07/06/is-open-source-software-security-falling-apart","locallink":"/blog/2014/07/06/is-open-source-software-security-falling-apart","published":true},{"author":"rlc","categories":["Technology","Humor","Time Management","Standards"],"comments":true,"date":"2014-07-03T00:00:00.000Z","layout":"post","tags":["blogging (0.9)","frustration (0.8)","standards (0.9)","horse (0.9)","pony (0.9)","donkey (0.8)","ass (0.7)","cow (0.8)","dromedary (0.7)","camel (0.8)","protocols (0.9)","IEEE (0.9)","time (0.9)","TAI (0.8)","UTC (0.9)","time zones (0.9)","daylight savings time (0.9)","Chatham Island (0.7)","Nepal (0.7)","Chile (0.7)","Israel (0.8)","IRIG-B (0.8)","NTP (0.7)","synchro-phasors (0.7)","PTP (0.8)","NTP (0.7)","C37.238-2011 (0.8)","DST (0.8)","design by committee (0.9)"],"title":"\"A camel is a horse designed by a committee\"","wordpress_id":3165,"uuid":"f8990082-5f11-4b62-aaf5-6e0efec7e45d","filename":"2014-07-03-a-camel-is-a-horse-designed-by-a-committee.markdown","slug":"a-camel-is-a-horse-designed-by-a-committee","excerpt":"I don't usually use this blog to vent frustration, but I've been reading standards lately...\n\nThere are four versions of the horse:\n\n- **Pony**. Horses as the Good Lord intended them. Strong and sturdy, yet soft and cuddly; obedient yet intelligent; and I'm told they're rather tasty too!\n\n- **Horse**. All the qualities of the pony, without the esthetics.\n\n- **Donkey**. The beta version of the pony: strong and sturdy, but none of the frills and quite a few bugs in the programming. Also: they don't taste nearly as good (or so I'm told).\n\n- **Ass**. What the beta version became when the PMO took over.\n\n- **Cow**. A forked-off project from the (then open-source) Horse project that went for taste, combined with a bigger ass for the workload (in the form of an ox -- you didn't think I misspelled ass, did you?)\n\n- **Dromedary**. When some of the committee members got tired of trying to reach a consensus, they took what they had and ran with it -- even if it's running was more than a bit awkward.\n\n- **Camel**. None of the looks. Some of the features. Some features you didn't think a horse should have. Some you didn't think a horse _could_ have. More of the smell. Much, much more.\n\nWhen _you_ count, that doesn't add up to four, does it?\n\nThat's what design by committee is all about!\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/07/03/a-camel-is-a-horse-designed-by-a-committee","locallink":"/blog/2014/07/03/a-camel-is-a-horse-designed-by-a-committee","published":true},{"author":"Ronald Landheer-Cieslak","comments":false,"date":"2014-04-11T00:00:00.000Z","layout":"post","link":"http://vlinder.ca/2014/04/arachnida-the-heartbleed-bug-and-vlinder-software/","published":true,"slug":"arachnida-the-heartbleed-bug-and-vlinder-software","title":"Arachnida, The Heartbleed bug and Vlinder Software","wordpress_id":3156,"categories":["Vlinder Software"],"tags":[],"uuid":"13d2898d-d6ce-42ff-96e5-e855fe37718b","filename":"2014-04-11-arachnida-the-heartbleed-bug-and-vlinder-software.markdown","excerpt":"No Content Found\n","permalink":"https://rlc.vlinder.ca/blog/2014/04/11/arachnida-the-heartbleed-bug-and-vlinder-software","locallink":"/blog/2014/04/11/arachnida-the-heartbleed-bug-and-vlinder-software"},{"author":"rlc","categories":["Technology","Cybersecurity","Utilities","Software","Networks","Firmware","Exploits","Vulnerabilities","Risk Analysis","Attack Vectors","GPLv3","Consortium","Cyberterrorism","Smart Grid","Law Enforcement"],"comments":true,"date":"2014-03-01T00:00:00.000Z","layout":"post","tags":["Aegis (1.0)","Fuzzing tool (0.8)","Vulnerabilities (0.7)","Firmware upgrades (0.6)","Cybersecurity (0.9)","Smart grid (0.8)","Exploits (0.7)","Utilities (0.8)","Risk analysis (0.6)","Cyberterrorist attacks (0.7)"],"title":"What the industry should do with the upcoming Aegis release","wordpress_id":3074,"uuid":"28d746c8-a1d4-4a0a-80bc-e8e17507e658","filename":"2014-03-01-what-the-industry-should-do-with-the-upcoming-aegis-release.markdown","slug":"what-the-industry-should-do-with-the-upcoming-aegis-release","excerpt":"[Automatak will be releasing](https://web.archive.org/web/20150308032035/http://automatak.net/wordpress/?p=482) the Aegis fuzzing tool publicly and for free for the first time in a few days. Like I said yesterday:\n\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Can hardly wait:  &quot;2 weeks until Aegis™ release&quot; <a href=\"http://t.co/KrQkrbb9a9\">http://t.co/KrQkrbb9a9</a></p>&mdash; Ronald (@blytkerchan) <a href=\"https://twitter.com/blytkerchan/status/439582028259147777?ref_src=twsrc%5Etfw\">March 1, 2014</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nto which Adam replied:\n\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/blytkerchan?ref_src=twsrc%5Etfw\">@blytkerchan</a> I just hope the industry is ready!</p>&mdash; Code Monkey Hate Bug (@jadamcrain) <a href=\"https://twitter.com/jadamcrain/status/439774683827679233?ref_src=twsrc%5Etfw\">March 1, 2014</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nI don't think the industry is ready -- and here's why.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/03/01/what-the-industry-should-do-with-the-upcoming-aegis-release","locallink":"/blog/2014/03/01/what-the-industry-should-do-with-the-upcoming-aegis-release","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2014-02-09T00:00:00.000Z","layout":"post","tags":["optimization (0.9)","type lists (0.8)","template meta-programming (0.7)","Vlinder Software (0.6)","C++ (0.5)","library (0.4)","configuration headers (0.6)","allocators (0.7)","meta library (0.8)","type list meta-programs (0.9)","Haskell (0.7)","KMP algorithm (0.6)","user-interesting information (0.8)","allocation algorithms (0.7)"],"title":"Optimizing with type lists","wordpress_id":2563,"uuid":"cf155091-61f5-4de4-963f-ddab582847b2","filename":"2014-02-09-optimizing-with-type-lists.markdown","slug":"optimizing-with-type-lists","excerpt":"In this post, I will take a brief look at how using type lists can help optimize certain applications.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/02/09/optimizing-with-type-lists","locallink":"/blog/2014/02/09/optimizing-with-type-lists","published":true},{"author":"rlc","categories":["Programming","Algorithms","Functional Programming","C++"],"comments":true,"date":"2014-02-01T00:00:00.000Z","layout":"post","tags":["algorithm (0.9)","KMP (0.8)","compile-time (0.7)","C++ (0.6)","functional programming (0.6)","Haskell (0.6)","template meta-function (0.5)","recursion (0.5)","enable_if (0.4)"],"title":"A functional version of the KMP algorithm","wordpress_id":2527,"uuid":"c211f523-01ed-42a0-8f5c-64ffc811a743","filename":"2014-02-01-a-functional-version-of-the-kmp-algorithm.markdown","slug":"a-functional-version-of-the-kmp-algorithm","excerpt":"For one of the projects I'm working on, I needed a compile-time version of the KMP algorithm in C++. I started by making the algorithm functional.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/02/01/a-functional-version-of-the-kmp-algorithm","locallink":"/blog/2014/02/01/a-functional-version-of-the-kmp-algorithm","published":true},{"author":"rlc","categories":["Cybersecurity","Regulatory Compliance","Critical Infrastructure Protection","Smart Grids","Industry Standards","TCP/IP Communications","NERC-CIP Standards","Electronic Security Perimeter","Monitoring","Critical Cyber Assets","Firmware Quality","ICS Security","Pharmaceutical Industry","21CFR.11 Requirements","Authentication","Audit Logs","Confidentiality","Integrity","Authenticity","Non-Repudiation","Electricity Grid","Smart Grid Technology","Regulatory Requirements","Aging Infrastructure","Intelligent Electronic Devices","Remote Terminal Units","Data Concentrators","Power Systems Devices","Security Concerns","Political Will"],"comments":true,"date":"2014-01-05T00:00:00.000Z","layout":"post","tags":["ICS security (1.0)","NERC (0.9)","Critical Infrastructure Protection (0.8)","Smart grids (0.7)","TCP/IP communications (0.6)","Cyber Security (0.8)","Electronic Security Perimeter (0.8)","Pharmaceutical industry (0.7)","21CFR.11 requirements (0.8)","Confidentiality (0.6)","Integrity (0.6)","Authenticity (0.6)","Non-Repudiation (0.6)","Electricity grid (0.9)","Smart grid technology (0.7)","Aging infrastructure (0.7)","Firmware quality (0.7)","Regulatory requirements (0.8)","Intelligent electronic devices (0.7)","Security vulnerabilities (0.8)"],"title":"ICS security and regulatory requirements","wordpress_id":2490,"uuid":"d62a0657-d8f9-4ac9-bffc-c298adcaa8dd","filename":"2014-01-05-ics-security-and-regulatory-requirements.markdown","slug":"ics-security-and-regulatory-requirements","excerpt":"In North America, ICS security, as regards the electricity grid, is regulated by [NERC](http://www.nerc.com/), which provides and enforces, among other things, the Critical Infrastructure Protection (CIP) standards.\n\nIn this post, I'll provide a quick overview of those standards, provisions slightly more in-depth information than in my [previous post](/blog/2014/01/the-crain-sistrunk-vulnerabilities/).\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/01/05/ics-security-and-regulatory-requirements","locallink":"/blog/2014/01/05/ics-security-and-regulatory-requirements","published":true},{"author":"rlc","categories":["Cybersecurity","Technology","SCADA","Industrial Control Systems"],"comments":true,"date":"2014-01-03T00:00:00.000Z","layout":"post","tags":["industrial control systems (1.0)","ICSs (0.8)","security through obscurity (0.7)","Crain-Sistrunk vulnerabilities (0.9)","Project Robus (0.6)","DNP3 (0.9)","serial communications (0.8)","NERC (0.7)","SCADA (0.6)","DNP3 Secure Authentication (0.8)","negative testing (0.9)","smart fuzzer (0.8)","black hat hackers (0.7)","Internet-connected devices (0.8)","TLS (0.7)","firmware updates (0.8)","electrical grid (0.7)"],"title":"The Crain-Sistrunk vulnerabilities","wordpress_id":2427,"uuid":"de6e7dde-7aab-4697-9077-24889d917973","filename":"2014-01-03-the-crain-sistrunk-vulnerabilities.markdown","slug":"the-crain-sistrunk-vulnerabilities","excerpt":"In the two previous posts, I've shown that industrial control systems -- ICSs -- [are becoming more pervasive](/blog/2013/12/the-importance-of-ics-security-pervasiveness-of-icss/), and that they [rely on security through obscurity](/blog/2013/12/the-importance-of-ics-security-ics-communications/).\n\nNow, let's make the link with current events.\n\n","permalink":"https://rlc.vlinder.ca/blog/2014/01/03/the-crain-sistrunk-vulnerabilities","locallink":"/blog/2014/01/03/the-crain-sistrunk-vulnerabilities","published":true},{"author":"rlc","categories":["Industrial Control Systems (ICSs)","Power Grid","Smart Grid","Smart Metering Devices","Energy Efficiency","Cybersecurity"],"comments":true,"date":"2013-12-27T00:00:00.000Z","layout":"post","tags":["Industrial Control Systems (ICSs) (1.0)","Power grid (0.9)","Smart metering devices (0.8)","Smart grid (0.7)","Electricity grid (0.6)","Energy efficiency (0.5)","Communication security (0.4)","Infrastructure (0.3)","Resilience (0.3)","End-of-life (0.2)"],"title":"The importance of ICS security: pervasiveness of ICSs","wordpress_id":2453,"uuid":"3d3bf0cc-3cc3-402e-bbfb-7aafee4b1efe","filename":"2013-12-27-the-importance-of-ics-security-pervasiveness-of-icss.markdown","slug":"the-importance-of-ics-security-pervasiveness-of-icss","excerpt":"Industrial Control Systems (ICSs) are becoming pervasive throughout all branches of industry and all parts of our infrastructure: they are a part of every part of the electricity grid, from the nuclear power station to your home; they're found in the traffic lights of virtually every crossing; they regulate train traffic; they run the cookie factory that makes your favorite cookies and pack the pills your doctor prescribed.\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/12/27/the-importance-of-ics-security-pervasiveness-of-icss","locallink":"/blog/2013/12/27/the-importance-of-ics-security-pervasiveness-of-icss","published":true},{"author":"rlc","categories":["Cybersecurity","Industrial Control Systems (ICS)","Machine-to-Machine (M2M) Communications","Network Security","Authentication","Authorization","Non-repudiation","Transport Layer Security (TLS)","Public Key Infrastructure (PKI)","Radio Communications","Dial-up Connections","Serial Connections","Optic Fiber Networks"],"comments":true,"date":"2013-12-27T00:00:00.000Z","layout":"post","tags":["ICS (1.0)","Machine-to-machine communications (0.9)","DNP3 (1.0)","Modbus (0.8)","Security (1.0)","Authentication (0.9)","Authorization (0.8)","Non-repudiation (0.7)","TLS (0.9)","Transport layer security (0.8)","Public key infrastructure (PKI) (0.9)","Network security (0.9)","Radio communications (0.8)","Serial connections (0.7)","Obscurity (0.8)"],"title":"The importance of ICS security: ICS communications","wordpress_id":2456,"uuid":"c4cab83d-744f-4291-aeff-55085012e0f4","filename":"2013-12-27-the-importance-of-ics-security-ics-communications.markdown","slug":"the-importance-of-ics-security-ics-communications","excerpt":"For an ICS, having communications abilities generally means implementing some machine-to-machine communications protocol, such as DNP3 or Modbus. These protocols, which allow the device to report data to a \"master\" device and take their cue from those devices w.r.t. things they should be doing, are generally not designed with security in mind: most of them do not require, or expect, user authentication for any commands you might send them, and don't implement anything approaching what you'd expect from, e.g., a bank (confidentiality, integrity, authentication, authorization, non-repudiation).\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/12/27/the-importance-of-ics-security-ics-communications","locallink":"/blog/2013/12/27/the-importance-of-ics-security-ics-communications","published":true},{"author":"rlc","categories":["Programming","Data Analysis","Code Generation","Error Handling","Syntax"],"comments":true,"date":"2013-11-30T00:00:00.000Z","layout":"post","tags":["Perl (0.9)","Extraction (0.7)","Reporting (0.6)","Data processing (0.5)","Code generation (0.4)","Database dumps (0.4)","Error messages (0.4)","Syntax (0.4)","Eclectic (0.8)","Practical (0.7)"],"title":"Perl: Practical or Pathologically Eclectic? Both?","wordpress_id":2415,"uuid":"2c6426a6-9995-4601-b0e3-98183d603edc","filename":"2013-11-30-perl-practical-or-pathologically-eclectic-both.markdown","slug":"perl-practical-or-pathologically-eclectic-both","excerpt":"There are two canonical acronyms for Perl: \"Practical Extraction and Report Language\" and \"Pathologically Eclectic Rubbish Lister\". Arguably, Perl can be both.\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/11/30/perl-practical-or-pathologically-eclectic-both","locallink":"/blog/2013/11/30/perl-practical-or-pathologically-eclectic-both","published":true},{"author":"rlc","categories":["Cryptocurrency","Technology","Finance","Writing"],"comments":true,"date":"2013-11-28T00:00:00.000Z","layout":"post","tags":["Mindmap (0.9)","Thoughts (0.8)","BitCoin (0.9)","Prose (0.7)","Ideas (0.6)","Cryptocurrency (0.5)","Reflection (0.4)"],"title":"A few thoughts on BitCoin","wordpress_id":2421,"uuid":"db8b7db5-4f4b-4f89-b7a7-4475f3a57ed2","filename":"2013-11-28-a-few-thoughts-on-bitcoin.markdown","slug":"a-few-thoughts-on-bitcoin","excerpt":"Mindmap of a few thoughts on BitCoin I'd meant to turn into prose (still might)\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/11/28/a-few-thoughts-on-bitcoin","locallink":"/blog/2013/11/28/a-few-thoughts-on-bitcoin","published":true},{"author":"rlc","categories":["Software Development","GUI Frameworks","Programming Languages","User Interface Design","Productivity Tools"],"comments":true,"date":"2013-09-29T00:00:00.000Z","layout":"post","tags":["App Development (0.9)","GUI Framework (0.8)","C++ (0.7)","Qt (0.9)","System Tray (0.6)","Registry (0.4)","RAII (0.3)","Qt Creator (0.5)","Widget (0.4)","Gtk+ (0.2)",".NET (0.2)","wxWidgets (0.2)","Windows 8 (0.3)"],"title":"Qt to quickly write a GUI app","wordpress_id":2393,"uuid":"f6ccfb8a-ac88-48a7-ae9b-e63cc364ce8f","filename":"2013-09-29-qt-to-quickly-write-a-gui-app.markdown","slug":"qt-to-quickly-write-a-gui-app","excerpt":"Today, my wife asked me to write an app that would tell her to sit straight every 15 minutes. I know apps like that already exist and I could've pointed her to one, but I decided to write one myself. The result is tannez-moi (which is French for \"bother me\").\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/09/29/qt-to-quickly-write-a-gui-app","locallink":"/blog/2013/09/29/qt-to-quickly-write-a-gui-app","published":true},{"author":"rlc","categories":["Software Development","Formal Specifications","Programming Languages","Haskell","System Design","Bug Fixing","Verification","Testing","User Interface Design"],"comments":true,"date":"2013-09-25T00:00:00.000Z","layout":"post","tags":["specification (1.0)","C++ (0.8)","formal specification (0.9)","executable specifications (0.8)","Haskell (0.9)","LED (0.7)","binary inputs (0.7)","whiteboard (0.6)","truth table (0.6)","implementation (0.8)","formalism (0.7)"],"title":"The benefits of formal, executable specifications","wordpress_id":2387,"uuid":"6874fbe7-baf0-4c0c-a454-4465086b2357","filename":"2013-09-25-the-benefits-of-formal-executable-specifications.markdown","slug":"the-benefits-of-formal-executable-specifications","excerpt":"While a specification should not specify the C++ code that should be implemented for the specified feature, it should specify the feature in a verifiable manner. In some cases, formal -- and even executable -- specifications can be of great help.\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/09/25/the-benefits-of-formal-executable-specifications","locallink":"/blog/2013/09/25/the-benefits-of-formal-executable-specifications","published":true},{"author":"rlc","categories":["Government","Politics","Democracy","Parliamentary System","Constitutional Monarchy","Proportional Representation","Populism","Assassination","Transparency","Senate","Prime Minister","Question Period","Committees","Referendum"],"comments":true,"date":"2013-09-24T00:00:00.000Z","layout":"post","tags":["political reform (0.9)","parliamentary democracy (0.8)","Dutch system (0.7)","proportional representation (0.9)","populism (0.6)","Geert Wilders (0.5)","Canadian system (0.8)","transparency (0.7)","senate reform (0.8)","accountability (0.7)","question period (0.6)","committee selection (0.7)","corrective referendum (0.8)"],"title":"Why #fixthathouse?","wordpress_id":2382,"uuid":"74f77fbf-968f-401f-bc77-5a5d0eb4a358","filename":"2013-09-24-what-fixthathouse.markdown","slug":"what-fixthathouse","excerpt":"Those of you who follow me on Twitter might wonder why, all of a sudden, I started tweeting assertions with the #fixthathouse hashtag. The reason is simple, [CBC The House](http://cbc.ca/thehouse) made me do it.\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/09/24/what-fixthathouse","locallink":"/blog/2013/09/24/what-fixthathouse","published":true},{"author":"rlc","categories":["Politics","Religion","Immigration","Diversity","Xenophobia"],"comments":true,"date":"2013-09-14T00:00:00.000Z","layout":"post","tags":["politics (0.9)","Quebec (0.8)","government job (0.7)","PQ charter of values (0.7)","religious neutrality (0.7)","multi-ethnic society (0.6)","diversity (0.6)","uniforms (0.5)","headscarf (0.5)","xenophobia (0.5)"],"title":"Common nonsense: the charter of Quebec Values","wordpress_id":2358,"uuid":"fa1053f9-526c-453f-95ec-b792a5b01029","filename":"2013-09-14-common-nonsense-the-charter-of-quebec-values.markdown","slug":"common-nonsense-the-charter-of-quebec-values","excerpt":"[![20130913-211324.jpg](/assets/2013/09/20130913-211324.jpg)](/assets/2013/09/20130913-211324.jpg)\n\nFour of these need not apply for a government job in Quebec if the new PQ charter of values becomes law. Can you pick the one that might still get the job?\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/09/14/common-nonsense-the-charter-of-quebec-values","locallink":"/blog/2013/09/14/common-nonsense-the-charter-of-quebec-values","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2013-09-05T00:00:00.000Z","layout":"post","tags":["compiler (1.0)","debugging (0.8)","C++ (0.7)","Microsoft Visual Studio (0.6)","embedded systems (0.5)","bug fixing (0.9)","alignment (0.8)","stack corruption (0.7)","Windows Embedded Compact 7 (0.6)","code structure (0.5)"],"title":"Sometimes, your right hand should know what your left hand is doing","wordpress_id":2349,"uuid":"5e2e08ed-1c3e-49e3-8d75-6aa082b957fd","filename":"2013-09-05-sometimes-your-right-hand-should-know-what-your-left-hand-is-doing.markdown","slug":"sometimes-your-right-hand-should-know-what-your-left-hand-is-doing","excerpt":"Especially if you're a compiler...\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/09/05/sometimes-your-right-hand-should-know-what-your-left-hand-is-doing","locallink":"/blog/2013/09/05/sometimes-your-right-hand-should-know-what-your-left-hand-is-doing","published":true},{"author":"rlc","categories":["Algorithms","Data Structures"],"comments":true,"date":"2013-07-03T00:00:00.000Z","layout":"post","tags":["sequence (0.9)","objects (0.8)","space-efficient (0.7)","partial duplicates (0.6)","algorithm (0.9)","input/output iterators (0.8)","binary predicate (0.7)","binary transformation (0.6)","conditionalInPlaceMerge (0.9)","C++03 (0.8)","copying (0.7)"],"title":"Conditional in-place merge algorithm","wordpress_id":2336,"uuid":"9063c5ce-ddcb-4e5b-86be-962a2c4c5171","filename":"2013-07-03-conditional-in-place-merge-algorithm.markdown","slug":"conditional-in-place-merge-algorithm","excerpt":"Say you have a sorted sequence of objects.\n\nGo ahead, say: \"I have a sorted sequence of objects!\"\n\nNow say it's fairly cheap to copy those objects, you need to be space-efficient and your sequence may have partial duplicates -- i.e. objects that, under some conditions, could be merged together using some transformation.\n\nOK, so don't say it. It's true anyway. Now we need an algorithm to\n\n1. check for each pair of objects in the sequence whether they can be transformed into a single object\n\n2. apply the transformation if need be\n\nLet's have a look at that algorithm.\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/07/03/conditional-in-place-merge-algorithm","locallink":"/blog/2013/07/03/conditional-in-place-merge-algorithm","published":true},{"author":"rlc","categories":["Software Development","Programming Languages","Business/Company Announcement"],"comments":true,"date":"2013-06-10T00:00:00.000Z","layout":"post","tags":["Vlinder Software (0.9)","announcement (0.7)","end-of-life cycle (0.8)","CEO (0.6)","founder (0.5)","software development (0.7)","Funky language (0.8)","Boost.Spirit (0.7)","Domain-Specific Languages (0.8)","DSLs (0.7)"],"title":"Why I decided Vlinder Software should stop selling Funky","wordpress_id":2324,"uuid":"0ac74b81-b197-40c0-bfb2-876d769594fc","filename":"2013-06-10-why-i-decided-vlinder-software-should-stop-selling-funky.markdown","slug":"why-i-decided-vlinder-software-should-stop-selling-funky","excerpt":"If you follow the News feed from [Vlinder Software's site](http://vlinder.ca) you know that I've posted an announcement saying Funky is now in its end-of-life cycle. This is our first product to enter end-of-life, but what it basically means is that we won't actively work on improving the software anymore.\n\nIf you've been following me for a while, you'll know that I am the founder and sole proprietor of Vlinder Software, as well as the CEO and an Analyst. I don't usually sign off as CEO, but this is one of those decisions that is mine alone to take. In this post, I will explain why.\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/06/10/why-i-decided-vlinder-software-should-stop-selling-funky","locallink":"/blog/2013/06/10/why-i-decided-vlinder-software-should-stop-selling-funky","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2013-03-05T00:00:00.000Z","layout":"post","tags":["struct-design (1.0)","magic-numbers (0.9)","versions (0.8)","alignment (1.0)","endianness (0.7)","padding (1.0)","sizeof-operator (0.9)","debugging (0.9)","alignment-errors (0.8)","structure-size (0.9)","padding-errors (0.8)","byte-alignment (0.9)"],"title":"Structure alignment and padding","wordpress_id":2050,"uuid":"9524ad67-2c3c-41ae-b02a-95251064ba97","filename":"2013-03-05-structure-alignment-and-padding.markdown","slug":"structure-alignment-and-padding","excerpt":"In my [previous post](/blog/2012/12/how-to-design-a-struct-for-storage-or-networking/) on the subject, I talked about using magic numbers and versions, alignment, and later added a note about endianness after a suggestion from Michel Fortin. This time, I'll talk about padding, how the sizeof operator can be misleading and how to debug padding and alignment errors.\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/03/05/structure-alignment-and-padding","locallink":"/blog/2013/03/05/structure-alignment-and-padding","published":true},{"author":"rlc","categories":["Software Development","Version Control Systems","Collaborative Development","Distributed Versioning Systems","Software Engineering Practices"],"comments":true,"date":"2013-01-18T00:00:00.000Z","layout":"post","tags":["version control systems (1.0)","Linus Torvalds (0.8)","Git (0.7)","Subversion (0.7)","productivity (0.6)","software development (0.6)","collaboration (0.6)","distributed version control (0.6)","code management (0.5)","software engineering (0.5)"],"title":"Flawed ways of working: centrally managed version control","wordpress_id":2019,"uuid":"037e3add-5f03-4895-8b82-7bb323a466bf","filename":"2013-01-18-flawed-ways-of-working-centrally-managed-version-control.markdown","slug":"flawed-ways-of-working-centrally-managed-version-control","excerpt":"","permalink":"https://rlc.vlinder.ca/blog/2013/01/18/flawed-ways-of-working-centrally-managed-version-control","locallink":"/blog/2013/01/18/flawed-ways-of-working-centrally-managed-version-control","published":true},{"author":"rlc","categories":["Software Development","Coding Style","Function Declaration","Code Maintainability"],"comments":true,"date":"2013-01-08T00:00:00.000Z","layout":"post","tags":["coding style (0.9)","readability (0.8)","function declaration (0.7)","code integration (0.6)","maintainability (0.6)","parameter organization (0.5)","code modification (0.5)","habit change (0.4)","function call (0.4)","error spotting (0.3)","parameter alignment (0.3)","code understanding (0.3)","parameter modification (0.3)","comments (0.2)"],"title":"Minor changes in style","wordpress_id":2010,"uuid":"384270b3-14c5-48a5-8a04-50803ee69eee","filename":"2013-01-08-minor-changes-in-style.markdown","slug":"minor-changes-in-style","excerpt":"I am not usually one to make much of a fuss about coding style: as long as the code is easily readable, I don't much care whether you use tabs or spaces to indent, how you align your curly quotes, etc. There's really only two things I do care about when reading new code:\n\n1. is it easy to read the code without being misled by it?\n2. does the new code integrate well with the rest of the code?\n   I do have a few suggestions, though, but above all, I recognize it can be difficult to change habits -- and therefore to change one's coding style.\n\n","permalink":"https://rlc.vlinder.ca/blog/2013/01/08/minor-changes-in-style","locallink":"/blog/2013/01/08/minor-changes-in-style","published":true},{"author":"rlc","categories":["Office supplies","Office communication"],"comments":true,"date":"2012-12-21T00:00:00.000Z","layout":"post","tags":["reminder (0.8)","colleagues (0.7)","office whiteboard (0.9)","drawing (0.6)","image (0.5)"],"title":"Even in Quebec, Winter is not the only season","wordpress_id":1999,"uuid":"b7b1bf73-1a0f-45b6-9874-b3f7e98f73b8","filename":"2012-12-21-even-in-quebec-winter-is-not-the-only-season.markdown","slug":"even-in-quebec-winter-is-not-the-only-season","excerpt":"An just to remind myself and some of my colleagues, I drew this on the office whiteboard yesterday: [![20121220-193947.jpg](/assets/2012/12/20121220-193947.jpg)](/assets/2012/12/20121220-193947.jpg)","permalink":"https://rlc.vlinder.ca/blog/2012/12/21/even-in-quebec-winter-is-not-the-only-season","locallink":"/blog/2012/12/21/even-in-quebec-winter-is-not-the-only-season","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2012-12-05T00:00:00.000Z","layout":"post","tags":["software design (0.9)","communication (0.8)","structure design (0.8)","debugging (0.7)","software maintenance (0.7)","firmware (0.6)","version control (0.6)","data alignment (0.5)","magic numbers (0.5)","software evolution (0.5)"],"title":"What happens if structures aren't well-designed","wordpress_id":1979,"uuid":"9836c1e6-5dd0-4464-a17a-2a6ad92f97ea","filename":"2012-12-05-what-happens-if-structures-arent-well-designed.markdown","slug":"what-happens-if-structures-arent-well-designed","excerpt":"In my [previous post](/blog/2012/12/how-to-design-a-struct-for-storage-or-networking/), I explained how to design a structure for persisting and communicating. I didn't say why I explained it -- just that things get frustrating if these simple rules aren't followed. In this post, I will tell you why I wrote the previous one.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/12/05/what-happens-if-structures-arent-well-designed","locallink":"/blog/2012/12/05/what-happens-if-structures-arent-well-designed","published":true},{"author":"rlc","categories":["Technology","Programming","Data Management","Embedded Systems"],"comments":true,"date":"2012-12-05T00:00:00.000Z","layout":"post","tags":["data communication (1.0)","embedded devices (1.0)","persistence (1.0)","binary data (1.0)","magic number (1.0)","versioning (1.0)","structure alignment (1.0)","pragma pack (1.0)","variable-sized data (1.0)","reserved fields (1.0)","memset (1.0)","common magic numbers (1.0)","zero-termination (1.0)","reading and writing (1.0)","parsing (1.0)"],"title":"How to design a struct for storage or communicating","wordpress_id":1966,"uuid":"659de586-0bc7-42a0-b6e4-89542a982e15","filename":"2012-12-05-how-to-design-a-struct-for-storage-or-networking.markdown","slug":"how-to-design-a-struct-for-storage-or-networking","excerpt":"One of the most common ways of \"persisting\" or communicating data in an embedded device is to just dump it into persistent storage or onto the wire: rather than generating XML, JSON or some other format which would later have to be parsed and which takes a lot of resources both ways, both in terms of CPU time to generate and parse and in terms of storage overhead, dumping binary data into storage or onto the wire has only the -- inevitable -- overhead of accessing storage/the wire itself. There are, however, several caveats to this, some of which I run into on a more-or-less regular basis when trying to decipher some of that data, so in stead of just being frustrated with hard-to-decipher data, I choose to describe how it should be done in stead.\n\nNote that I am by no means advocating anything more than a few simple rules to follow when dumping data. Particularly, I am _not_ going to advocate using XML, JSON or any other intermediary form: each of those has their place, but they neither should be considered to solve the problems faced when trying to access binary data, nor can they replace binary data.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/12/05/how-to-design-a-struct-for-storage-or-networking","locallink":"/blog/2012/12/05/how-to-design-a-struct-for-storage-or-networking","published":true},{"author":"rlc","categories":["Software Development","Embedded Systems","Error Handling","Exception Handling","Bug Fixing"],"comments":true,"date":"2012-11-08T00:00:00.000Z","layout":"post","tags":["error handling (0.9)","exceptions (0.9)","embedded devices (0.8)","robust code (0.7)","performance (0.6)","bug report (0.6)","device start-up (0.5)","file systems (0.5)","connection management (0.5)","peer connection (0.4)","software development (0.4)"],"title":"Exceptions and Embedded Devices","wordpress_id":1938,"uuid":"dae1a28f-64cf-4905-be74-7e2c3a78e297","filename":"2012-11-08-exceptions-and-embedded-devices.markdown","slug":"exceptions-and-embedded-devices","excerpt":"Lately, I've had a number of discussions on this subject, in which the same questions cropped up again and again:\n\n1. should exceptions be used in embedded devices?\n\n2. should exceptions occur in \"normal operation\" (i.e. is every exception a bug)?\n\nMy answer to these two questions are yes and yes (no) resp.: exceptions can and should be used (appropriately) in embedded devices and exceptions may occur during normal operation (i.e. not every exception that occurs is a bug).\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/11/08/exceptions-and-embedded-devices","locallink":"/blog/2012/11/08/exceptions-and-embedded-devices","published":true},{"author":"rlc","categories":["Telecommunications","Networking","Technology"],"comments":true,"date":"2012-10-18T00:00:00.000Z","layout":"post","tags":["ComSoc webinar (0.9)","Synchronization (0.8)","Next-Generation Telecom Networks (0.7)","Clock synchronization (0.6)","Synchronous Ethernet (0.7)","IEEE-1588 PTP (0.7)","NTP (0.6)","Ethernet (0.5)","Networks (0.4)","Carrier (0.4)","Heterogeneous network (0.5)"],"title":"Quick Summary: Synchronization in Next-Generation Telecom Networks","wordpress_id":1932,"uuid":"04521588-5b5a-48ab-9669-18c49c9cbdad","filename":"2012-10-18-quick-summary-synchronization-in-next-generation-telecom-networks.markdown","slug":"quick-summary-synchronization-in-next-generation-telecom-networks","excerpt":"This is a quick summary of the [ComSoc webinar on Synchronization in Next-Generation Telecom Networks](https://web.archive.org/web/20160620200541/http://webcast.you-niversity.com/youtools/companies/viewarchives.asp?account=395247&affiliateId=99&routing=b2d50ec7&stm=PDKIKX0D)\n\nOver the last few years, communications networks have changed radically: their use has gone from predominantly voice to predominantly data and they have themselves gone from predominantly synchronous networks to predominantly packet networks.\n\nTime synchronization requirements, in terms of quality of time, have only gotten stricter, so new methods for clock synchronization are now required - i.e. NTP can't do the job to the level of accuracy that's needed.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/10/18/quick-summary-synchronization-in-next-generation-telecom-networks","locallink":"/blog/2012/10/18/quick-summary-synchronization-in-next-generation-telecom-networks","published":true},{"author":"rlc","categories":["Software Development","Hardware","Debugging","Technical Specifications","Device Communication","Driver Development"],"comments":true,"date":"2012-08-27T00:00:00.000Z","layout":"post","tags":["debugging (1.0)","technical specifications (1.0)","driver (1.0)","registers (1.0)","hardware (1.0)","confusion (1.0)","mapping (1.0)","polling (1.0)","masking (1.0)","AND operator (1.0)","XOR operator (1.0)","schematics (1.0)","errors (1.0)"],"title":"On the importance of clear technical specifications","wordpress_id":1906,"uuid":"795e3bb8-69b5-4e6d-980b-fe94862883d1","filename":"2012-08-27-on-the-importance-of-clear-technical-specifications.markdown","slug":"on-the-importance-of-clear-technical-specifications","excerpt":"Even when the code is working like a charm, technical specifications -- and their different interpretations by different people -- can lead to confusion and hours-long debugging sessions.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/08/27/on-the-importance-of-clear-technical-specifications","locallink":"/blog/2012/08/27/on-the-importance-of-clear-technical-specifications","published":true},{"author":"rlc","categories":["Technology","Programming","Education"],"comments":true,"date":"2012-08-16T00:00:00.000Z","layout":"post","published":true,"tags":["coding (0.9)","explanation (0.8)","C (0.7)","C++ (0.7)","rewrites (0.6)","educational purposes (0.6)","techniques (0.5)","programmers (0.5)","class template (0.4)","code (0.4)"],"title":"Hidden complexity","wordpress_id":1916,"uuid":"6960a4d4-4f3f-4fa6-8acd-1e65bc77dc71","filename":"2012-08-16-hidden-complexity.markdown","slug":"hidden-complexity","excerpt":"It really surprises me sometimes how much you can have to explain about simple things.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/08/16/hidden-complexity","locallink":"/blog/2012/08/16/hidden-complexity"},{"author":"rlc","categories":["Programming"],"comments":true,"date":"2012-08-02T00:00:00.000Z","layout":"post","tags":["discussion (1.0)","signal anomaly (1.0)","SIGSEGV (1.0)","Access Violation (1.0)","bug (1.0)","programmer laziness (1.0)","null pointer (1.0)","comp.lang.c (1.0)","C standard (1.0)","signals in C (1.0)","POSIX (1.0)","code structure (1.0)","DOM (1.0)","MSXML (1.0)","broken code (1.0)","HPET (1.0)","chipsets (1.0)","Access Violation (1.0)"],"title":"Plain and clear cases of \"don't do that - fix your code in stead\"","wordpress_id":1913,"uuid":"40ca0bcb-59ce-403d-9cf9-92e24e7e8dc1","filename":"2012-08-02-plain-and-clear-cases-of-dont-do-that-fix-your-code-in-stead.markdown","slug":"plain-and-clear-cases-of-dont-do-that-fix-your-code-in-stead","excerpt":"For the last few days, a [discussion](https://groups.google.com/forum/m/?fromgroups#!topic/comp.lang.c/YAuFFz7SmVc) (that has become heated from time to time) has been going on on the comp.lang.c usenet group. The subject is a \"signal anomaly\": the OP wants to catch SIGSEGV and carry on along its merry way.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/08/02/plain-and-clear-cases-of-dont-do-that-fix-your-code-in-stead","locallink":"/blog/2012/08/02/plain-and-clear-cases-of-dont-do-that-fix-your-code-in-stead","published":true},{"author":"rlc","categories":["Technology","Electronics","Signal Processing","Hardware Design","Firmware Development"],"comments":true,"date":"2012-07-19T00:00:00.000Z","layout":"post","tags":["oscilloscope (1.0)","signal processing (0.9)","timing (0.7)","GPIO (0.8)","optical coupler (0.6)","FPGA (0.9)","RS-485 (0.5)","printed circuit board (0.8)"],"title":"When hardware foils software -- and then helps it out!","wordpress_id":1895,"uuid":"e2e5b65c-0759-447f-a976-d080398f8362","filename":"2012-07-19-when-hardware-foils-software-and-then-helps-it-out.markdown","slug":"when-hardware-foils-software-and-then-helps-it-out","excerpt":"Sometimes, an oscilloscope can come in very handy.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/07/19/when-hardware-foils-software-and-then-helps-it-out","locallink":"/blog/2012/07/19/when-hardware-foils-software-and-then-helps-it-out","published":true},{"author":"rlc","categories":["Customer Service","Software Development","Time Management"],"comments":true,"date":"2012-07-09T00:00:00.000Z","layout":"post","tags":["Time Management (0.9)","Software Development (0.8)","Client Communication (0.7)","Efficiency (0.6)","Code Compilation (0.5)","Problem Solving (0.4)","Support Plans (0.3)","Debugging (0.2)","Source Code (0.1)"],"title":"Please use my time wisely","wordpress_id":1889,"uuid":"700697a2-4f64-4e64-b48d-e6a0ed7ab887","filename":"2012-07-09-please-use-my-time-wisely.markdown","slug":"please-use-my-time-wisely","excerpt":"Just because I charge by the hour, that doesn't mean you should be wasting my time...\n\nThis morning, in the wee hours of the morning (time differences can keep you up at night, as can young children), I spent more than an hour and a half doing makework. Most of that work, probably all of it, could have been avoided if I'd been given a working setup rather than a huge chunk of source code and a recipe to make it work. Granted, the recipe did work, but it was still a huge waste of time.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/07/09/please-use-my-time-wisely","locallink":"/blog/2012/07/09/please-use-my-time-wisely","published":true},{"author":"rlc","categories":["Education","Computer Science","Language Learning","Child Development","Problem Solving","Software Engineering"],"comments":true,"date":"2012-07-02T00:00:00.000Z","layout":"post","tags":["computer science (1.0)","high school curriculum (0.9)","coding (0.8)","programming languages (0.7)","education system (0.6)","software engineering (0.5)","problem solving (0.5)","teaching (0.4)","children (0.4)","learning (0.3)"],"title":"Why CS shouldn't be taught before high school (and coding for kids is a bad idea)","wordpress_id":1891,"uuid":"1c9012ab-a8a4-4469-9bfd-1cd070656c4e","filename":"2012-07-02-why-cs-shouldnt-be-taught-before-high-school-and-coding-for-kids-is-a-bad-idea.markdown","slug":"why-cs-shouldnt-be-taught-before-high-school-and-coding-for-kids-is-a-bad-idea","excerpt":"An introduction to computer science was part of my high school curriculum. I was about 16 years old at the time and had been coding in Basic and Pascal for a few years already - I was just getting started with C. This part of the curriculum was a complete waste of time. Not because I had books that taught me better than my teacher ever could, but because, in order to make it easier for us, the programming language we had to use was a version of Pascal ... translated to Dutch.","permalink":"https://rlc.vlinder.ca/blog/2012/07/02/why-cs-shouldnt-be-taught-before-high-school-and-coding-for-kids-is-a-bad-idea","locallink":"/blog/2012/07/02/why-cs-shouldnt-be-taught-before-high-school-and-coding-for-kids-is-a-bad-idea","published":true},{"author":"rlc","categories":["Technology","Software Development","Hardware","Innovation","Research","Engineering"],"comments":true,"date":"2012-06-29T00:00:00.000Z","layout":"post","tags":["blogging (1.0)","use-cases (1.0)","hardware (0.8)","requirements (0.7)","future-proofing (0.6)","configuration (0.6)","system design (0.5)","innovation (0.5)","memristor (0.4)","long-term planning (0.4)"],"title":"Sometimes, use-cases just aren't what you need","wordpress_id":1878,"uuid":"d4a71e36-09ae-472a-8a21-89a67e39138d","filename":"2012-06-29-sometimes-use-cases-just-arent-what-you-need.markdown","slug":"sometimes-use-cases-just-arent-what-you-need","excerpt":"I've written about use-cases on this blog before (parts [one](/blog/2010/02/use-cases-part-1-introduction-ingredients/), [two](/blog/2010/02/use-cases-part-2-what-use-cases-are-for-the-history-present-and-future-of-use-cases/) and [three](/blog/2010/03/use-cases-part-3-what-a-use-case-really-is/) of the sidebar on use-cases in my podcast come to mind) but I haven't really talked about when to avoid them.\n\nWhen you get a new piece of hardware and a vague set of requirements, what do you do?\n\n1. try to get the most out of the hardware you possible can\n2. design to meet the need, using use-cases to guide you\n3. a bit of **a**, a bit of **b**\n4. other... (leave a comment)\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/06/29/sometimes-use-cases-just-arent-what-you-need","locallink":"/blog/2012/06/29/sometimes-use-cases-just-arent-what-you-need","published":true},{"author":"rlc","categories":["Economics","Engineering","Risk Management","Quality Assurance","Software Development"],"comments":true,"date":"2012-06-02T00:00:00.000Z","layout":"post","tags":["global economy (0.9)","robustness analysis (0.9)","Canada (0.8)","economy (0.8)","24/7 embedded system (0.7)","fundamentals (0.7)","development processes (0.6)","code review (0.6)","error-prevention techniques (0.6)","static analysis tools (0.6)"],"title":"Robustness analysis: the fundamentals","wordpress_id":1840,"uuid":"dd0573a0-738f-46b2-9f48-ce73e590accb","filename":"2012-06-02-robustness-analysis-the-fundamentals.markdown","slug":"robustness-analysis-the-fundamentals","excerpt":"Up until 2008, the global economy was humming along on what seemed like smooth sailing, doing a nice twenty knots on clear waters, with only an occasional radio message saying there were icebergs up ahead. Surely none of that was anything to be worried about: this new economy was well-designed, after all. Redundant and unnecessary checks had been removed but, in order for the economy to be robust, the engineers of the economy had made sure that at least two whole compartments could be flooded before anything really nasty would happen.\n\nSound familiar?\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/06/02/robustness-analysis-the-fundamentals","locallink":"/blog/2012/06/02/robustness-analysis-the-fundamentals","published":true},{"author":"rlc","categories":["Software Development","System Analysis","Robustness Analysis","Error Handling","Resource Management","Concurrency","Security"],"comments":true,"date":"2012-03-25T00:00:00.000Z","layout":"post","tags":["large project (0.9)","system implementation (0.8)","robustness analysis (0.9)","fault finding (0.7)","weakness types (0.6)","single point of failure (0.8)","error handling (0.9)","error recovery (0.7)","error reporting (0.8)","resource management (0.9)","concurrency (0.8)","security (0.8)","language artifacts (0.7)","design phase (0.7)","verification (0.8)","robustness assessment (0.8)"],"title":"Robustness analysis: finding fault(s)","wordpress_id":1823,"uuid":"9599fff9-c5e9-485b-97db-f70ea12ebb5f","filename":"2012-03-25-robustness-analysis-finding-faults.markdown","slug":"robustness-analysis-finding-faults","excerpt":"When working on a large project, implementing a system that has to run 24/7 and handle significant peak loads of communication, at some point, you have to ask yourself how robust your solution really is. You have to ascertain that it meets the goals you have set out and will consistently do so. There are diverse ways of doing this. Some are more efficient than others. In this article, I will discuss some of the methods I have found useful in the past.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/03/25/robustness-analysis-finding-faults","locallink":"/blog/2012/03/25/robustness-analysis-finding-faults","published":true},{"author":"rlc","categories":["Parenting","Blogging","Podcasting","Sleep deprivation","Time management"],"comments":true,"date":"2012-03-04T00:00:00.000Z","layout":"post","tags":["parenting (0.8)","podcast (0.7)","sleep (0.9)","blogging (0.6)","schedule (0.5)","patience (0.7)"],"title":"I'll be back (soon)","wordpress_id":1820,"uuid":"bfef7c94-1d09-47f0-897f-70a242316997","filename":"2012-03-04-ill-be-back-soon.markdown","slug":"ill-be-back-soon","excerpt":"Those of you who have been following this blog or the podcast may be wondering why I've been silent lately. The answer to that is simple: lack of sleep. My baby boy is starting to sleep nights, though, and some time should hopefully clear in my schedule to pick up the podcast where I left it, and to write some more posts on this blog. In the mean time: patience is a virtue -- and sleep an under-rated commodity.","permalink":"https://rlc.vlinder.ca/blog/2012/03/04/ill-be-back-soon","locallink":"/blog/2012/03/04/ill-be-back-soon","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2012-01-12T00:00:00.000Z","layout":"post","tags":["Windows systems programming (1.0)","WaitForSingleObject (0.8)","WaitForMultipleObjects (1.0)","thread management (0.9)","API design (0.7)","Microsoft (0.6)","Windows Embedded Compact (0.8)","thread synchronization (0.8)","software development (0.7)"],"title":"Changing an API in subtle, unpredictable ways","wordpress_id":1785,"uuid":"e7412282-abcf-4473-8a87-b84170c9e420","filename":"2012-01-12-changing-an-api-in-subtle-unpredictable-ways.markdown","slug":"changing-an-api-in-subtle-unpredictable-ways","excerpt":"Many seasoned Windows systems programmers will know that you can wait for the death of a thread with `WaitForSingleObject` and for the deaths of multiple threads with its bigger brother, `WaitForMultipleObjects`. Big brother changes its behavior on some platforms, though -- as I just found out myself, the hard way.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/01/12/changing-an-api-in-subtle-unpredictable-ways","locallink":"/blog/2012/01/12/changing-an-api-in-subtle-unpredictable-ways","published":true},{"author":"rlc","categories":["Customer Service","Bug Reporting","Software Development","Feedback Collection"],"comments":true,"date":"2012-01-11T00:00:00.000Z","layout":"post","tags":["Microsoft (0.9)","Bug report (0.8)","TCP/IP stack (0.7)","Windows Embedded Compact 7 (0.7)","Customer service (0.8)","Bug fixing (0.7)","Software feedback (0.6)","Bug reporting process (0.7)","Microsoft Gold partner (0.6)","User experience (0.8)"],"title":"Opening a support ticket with Microsoft (or: how not to support your customers)","wordpress_id":1779,"uuid":"8800d545-be8e-446a-a673-07f53109c77c","filename":"2012-01-11-opening-a-support-ticket-with-microsoft-or-how-not-to-support-your-customers.markdown","slug":"opening-a-support-ticket-with-microsoft-or-how-not-to-support-your-customers","excerpt":"I had to open a support ticket with Microsoft today: I found a bug in the TCP/IP stack of Windows Embedded Compact 7 that I wanted them to know about (and to fix). I also wanted to know when it would be _fixed_ -- after all, the bug is critical and the company I work for is a Microsoft Gold partner, so I had a reasonably high expectation of service.\n\nSuffice it to say I was disappointed.\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/01/11/opening-a-support-ticket-with-microsoft-or-how-not-to-support-your-customers","locallink":"/blog/2012/01/11/opening-a-support-ticket-with-microsoft-or-how-not-to-support-your-customers","published":true},{"author":"rlc","categories":["Blogging","Seasonal themes","Wallpaper images"],"comments":true,"date":"2012-01-01T00:00:00.000Z","layout":"post","tags":["Seasonal change (0.9)","Custom theme (0.8)","Wallpaper images (0.7)","Winter theme (0.6)","Wide wallpaper (0.5)","4x3 wallpaper (0.4)"],"title":"Winter wallpapers","uuid":"6a33b25a-72db-4cf8-9180-f382e3fda52b","filename":"2012-01-01-winter-wallpapers.markdown","slug":"winter-wallpapers","excerpt":"As has become my custom (at least since this summer) I've changed the theme a few days go, at the start of the season. Here are the associated wallpaper images...\n\n","permalink":"https://rlc.vlinder.ca/blog/2012/01/01/winter-wallpapers","locallink":"/blog/2012/01/01/winter-wallpapers","published":true},{"author":"rlc","categories":["Programming","Education","Parenting"],"comments":true,"date":"2011-12-01T00:00:00.000Z","layout":"post","tags":["C++ (0.8)","self-taught (0.7)","parental leave (0.6)","podcast (0.5)","blog (0.5)","installment (0.4)"],"title":"Sleep(...)","wordpress_id":1720,"uuid":"a39e44d5-1847-4969-9366-9f76789e51be","filename":"2011-12-01-sleep.markdown","slug":"sleep","excerpt":"For those of you waiting for the next installment of \"C++ for the self-taught\": I'm on parental leave at the moment. The podcast (and the rest of the blog) will be back in a few weeks.","permalink":"https://rlc.vlinder.ca/blog/2011/12/01/sleep","locallink":"/blog/2011/12/01/sleep","published":true},{"author":"rlc","categories":["Sorting Algorithms","Radix Sort","Education","Parenting"],"comments":true,"date":"2011-11-08T00:00:00.000Z","layout":"post","tags":["Radix Sort (1.0)","Sorting Algorithm (0.8)","MSD Radix Sort (0.7)","Numerical Values (0.6)","Implementation (0.6)","Explanation (0.5)","Algorithm (0.5)","Eight-Year-Old (0.4)","Natural Approach (0.4)","Stability (0.4)"],"title":"Radix Sort","wordpress_id":1714,"uuid":"54a6a05e-c152-48d7-a713-674f039f192b","filename":"2011-11-08-radix-sort.markdown","slug":"radix-sort","excerpt":"![image](/assets/2011/11/wpid-IMG_20111107_191330.jpg)\n\nThe Radix Sort algorithm is a stable sorting algorithm that allows you to sort a series of numerical values in linear time. What amazed me, however, is that it is also a natural approach to sorting: this is a picture of my daughter applying a radix sort to her homework (without knowing it's a radix sort, of course, but after explaining the algorithm perfectly)!\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/11/08/radix-sort","locallink":"/blog/2011/11/08/radix-sort","published":true},{"author":"rlc","categories":["Computer Science","Programming Languages","Operating Systems","Software Development","Technology Innovation"],"comments":true,"date":"2011-10-17T00:00:00.000Z","layout":"post","tags":["C programming language (0.9)","Dennis Ritchie (0.8)","UNIX kernel (0.7)","Operating systems (0.6)","Programming languages (0.6)","Legacy (0.5)","Inventor (0.5)","Data structuring (0.4)","Hardware control (0.4)","Programming language design (0.4)"],"title":"The underestimated legacy of Dennis Ritchie","wordpress_id":1708,"uuid":"5c11efb2-f18d-4d02-bf13-f9848f9d5265","filename":"2011-10-17-the-underestimated-legacy-of-dennis-ritchie.markdown","slug":"the-underestimated-legacy-of-dennis-ritchie","excerpt":"Dennis Ritchie is the inventor of the C programming language, which is the ancestor of a whole family of programming languages that includes C++, Java and C# -- probably the three most popular programming languages today -- as well as D and Objective-C, which are less popular but significant nonetheless.","permalink":"https://rlc.vlinder.ca/blog/2011/10/17/the-underestimated-legacy-of-dennis-ritchie","locallink":"/blog/2011/10/17/the-underestimated-legacy-of-dennis-ritchie","published":true},{"author":"rlc","categories":["Copyright Infringement","Internet Law","Digital Rights","Legislation","Intellectual Property"],"comments":true,"date":"2011-10-09T00:00:00.000Z","layout":"post","tags":["Copyright Act (0.9)","Bill C-11 (0.8)","Online copyright infringement (0.7)","Enabling infringement (0.6)","Internet communications (0.5)","Peer-to-peer networks (0.4)","BitTorrent (0.4)","Copyright holder (0.3)","Public domain (0.3)","Middle-man liability (0.2)"],"title":"Making the enabling of online copyright infringement itself an infringement of copyright","wordpress_id":1697,"uuid":"d83f05fa-a5f3-4c1c-81e9-adc3e2df6863","filename":"2011-10-09-making-the-enabling-of-online-copyright-infringement-itself-an-infringement-of-copyright.markdown","slug":"making-the-enabling-of-online-copyright-infringement-itself-an-infringement-of-copyright","excerpt":"[Bill C-11](https://web.archive.org/web/20111221034832/http://www.parl.gc.ca/LegisInfo/BillDetails.aspx?billId=5134851&Language=E&Mode=1) amends the Copyright Act in several different ways. One of the states purposes of those amendments is to \"make the enabling of online copyright infringement itself an infringement of copyright\". While I can understand that this adds significant new protections to copyrighted materials, I think this may quickly become either unenforceable, or introduce serious new restrictions on how communications over the Internet can legally take place. It all hinges on the definition of \"enabling\", however.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/10/09/making-the-enabling-of-online-copyright-infringement-itself-an-infringement-of-copyright","locallink":"/blog/2011/10/09/making-the-enabling-of-online-copyright-infringement-itself-an-infringement-of-copyright","published":true},{"author":"rlc","categories":["Politics","Legislation","Copyright","News"],"comments":true,"date":"2011-09-29T00:00:00.000Z","layout":"post","tags":["Vancouver Sun (1.0)","bill C-32 (1.0)","re-introduced (0.9)","modification (0.8)","conservative majority (0.7)","Parliament (0.6)","Copyright Modernization Act (1.0)","C-11 (1.0)","update (0.9)","Oct 8, 2008 (0.8)"],"title":"Harper government reintroduces toughened online copyright law","wordpress_id":1692,"uuid":"e6315de7-9b2a-4972-8e4e-1d9efd1b7b96","filename":"2011-09-29-harper-government-reintroduces-toughened-online-copyright-law.markdown","slug":"harper-government-reintroduces-toughened-online-copyright-law","excerpt":"In the Vancouver Sun: bill C-32 from last session has been re-introduced (probably with some modification -- I haven't had a chance to read the bill yet) and is far more likely to pass, now that there's a conservative majority in Parliament.\n\n**Update Oct 8, 2008:** the re-introduced Copyright Modernization Act is numbered C-11, and is available [here](https://web.archive.org/web/20111221034832/http://www.parl.gc.ca/LegisInfo/BillDetails.aspx?billId=5134851&Language=E&Mode=1).","permalink":"https://rlc.vlinder.ca/blog/2011/09/29/harper-government-reintroduces-toughened-online-copyright-law","locallink":"/blog/2011/09/29/harper-government-reintroduces-toughened-online-copyright-law","published":true},{"author":"rlc","categories":["Seasons","Time management","Desktop wallpapers","Canada Day"],"comments":true,"date":"2011-09-29T00:00:00.000Z","layout":"post","tags":["autumn (0.8)","banner (0.7)","time management (0.6)","Canada Day (0.9)","desktop wallpapers (0.8)"],"title":"Autumn is here - and so is the autumn banner","wordpress_id":1689,"uuid":"b6088b55-78d8-4094-b693-6b1931dfc1f5","filename":"2011-09-29-autumn-is-here-and-so-is-the-autumn-banner.markdown","slug":"autumn-is-here-and-so-is-the-autumn-banner","excerpt":"OK, autumn has been here for about a week already, and the banner was ready two months ago, but I only now had both the time and the inclination to put it up...\n\nYou might remember that the corresponding desktop wallpapers are in the [Canada Day post](http://rlc.vlinder.ca/blog/2011/07/happy-canada-day/).","permalink":"https://rlc.vlinder.ca/blog/2011/09/29/autumn-is-here-and-so-is-the-autumn-banner","locallink":"/blog/2011/09/29/autumn-is-here-and-so-is-the-autumn-banner","published":true},{"author":"rlc","categories":["Open source","Version control","Issue tracking"],"comments":true,"date":"2011-08-12T00:00:00.000Z","layout":"post","tags":["open source projects (1.0)","GitHub (1.0)","gradual process (0.7)","old projects (0.6)","defunct projects (0.5)","Git-based options (0.8)","features (0.9)","ticket tracking (0.8)","Request Tracker (0.7)","Traq (0.7)","Internet connection (0.6)","Gitorious (0.8)","issue tracker (0.9)","front-end (0.6)","updates (0.7)"],"title":"Moving to GitHub","wordpress_id":1635,"uuid":"6d35b3e4-e7e7-4191-90aa-e6104d38bbe3","filename":"2011-08-12-moving-to-github.markdown","slug":"moving-to-github","excerpt":"I will be moving my open source projects (yes, all of them) to GitHub.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/08/12/moving-to-github","locallink":"/blog/2011/08/12/moving-to-github","published":true},{"author":"rlc","categories":["Software Development","Integrated Development Environments (IDEs)","Software Architecture","Version Control","Software Maintenance","Software Design","Software Evolution"],"comments":true,"date":"2011-07-28T00:00:00.000Z","layout":"post","tags":["software development (0.9)","Eclipse IDE (0.8)","software architecture (0.7)","EGit (0.6)","Git integration (0.5)","IDE design (0.8)","software projects (0.7)","complete rewrites (0.6)","API compatibility (0.5)","system scalability (0.4)","maintenance patches (0.4)","plugin architecture (0.6)","software installation (0.5)"],"title":"Eclipse: kudos","wordpress_id":1597,"uuid":"d4536745-f668-4af3-ab6e-17aa07830ca7","filename":"2011-07-28-eclipse-kudos.markdown","slug":"eclipse-kudos","excerpt":"One of the things I like about Eclipse is the way it is designed. I'm not talking about the GUI when I say that - although the GUI is arguably well-designed as well: I mean the way hundreds of pieces fit together to make Eclipse an IDE for Java, C, C++, PHP, Python, ..., etc.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/07/28/eclipse-kudos","locallink":"/blog/2011/07/28/eclipse-kudos","published":true},{"author":"rlc","categories":["Website Analytics","User Demographics","Language Preferences","Browser Usage","Visitor Behavior","Operating System Preferences","Search Engine Optimization","Content Preferences","Geographic Diversity","User Engagement"],"comments":true,"date":"2011-07-22T00:00:00.000Z","layout":"post","tags":["Google Analytics (1.0)","Site Visitors (0.8)","User Demographics (0.7)","Geographical Diversity (0.6)","Language Preferences (0.6)","Page Views (0.8)","Bounce Rate (0.5)","Time on Site (0.7)","Open Source Software (0.9)","Search Keywords (0.8)","Referral Traffic (0.5)","Operating Systems (0.7)","Content Preferences (0.8)","Weekday Traffic (0.6)","Language Diversity (0.6)","Content Engagement (0.7)"],"title":"You, according to Google Analytics","wordpress_id":1590,"uuid":"6d980edd-76f2-4136-8e1b-6a8ef1f83f1a","filename":"2011-07-22-you-according-to-google-analytics.markdown","slug":"you-according-to-google-analytics","excerpt":"This blog uses Google Analytics, which provides a treasure-trove of information about the site's visitors. To use that information to improve the site, it has to be parsed.\n\nHere's a sketch of what a typical user may look like - and what that tells me about what I should do with the site.","permalink":"https://rlc.vlinder.ca/blog/2011/07/22/you-according-to-google-analytics","locallink":"/blog/2011/07/22/you-according-to-google-analytics","published":true},{"author":"rlc","categories":["Software Development","Open Source","Linux","Security","Programming"],"comments":true,"date":"2011-07-21T00:00:00.000Z","layout":"post","tags":["restricted shell (1.0)","shell server (0.8)","firewall (0.6)","GNU General Public License (0.9)","commands (0.7)","syslog (0.5)","Ubuntu Natty (0.4)","package (0.6)","ZIP (0.4)","DEB (0.3)","sources (0.7)"],"title":"shtrict: a very restricted shell for *nix","wordpress_id":1571,"uuid":"bdb1dac8-9a0e-4909-be43-c4a9fbc9ca3c","filename":"2011-07-21-shtrict-a-very-restricted-shell-for-nix.markdown","slug":"shtrict-a-very-restricted-shell-for-nix","excerpt":"I needed a restricted shell for my shell server - the one that's available from outside my firewall, so I wrote one. You can download it under the terms of the GNU General Public License, version 3.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/07/21/shtrict-a-very-restricted-shell-for-nix","locallink":"/blog/2011/07/21/shtrict-a-very-restricted-shell-for-nix","published":true},{"author":"rlc","categories":["Technology","Security"],"comments":true,"date":"2011-07-21T00:00:00.000Z","layout":"post","tags":[".deb packages (1.0)","GnuPG key (1.0)","verification (0.9)","public key (0.8)","download (0.7)","software analyst (0.6)","Ronald Landheer-Cieslak (0.5)","keyID (0.4)","Fingerprint (0.3)","SKS 1.1.1 (0.2)"],"title":"New GnuPG key","wordpress_id":1573,"uuid":"385d8618-61a0-437f-adb5-1af3dd03d328","filename":"2011-07-21-new-gnupg-key.markdown","slug":"new-gnupg-key","excerpt":"For those who want to be able to verify .deb packages I make: I have a new GnuPG key.\n\n    Type bits/keyID     Date       User ID\n    pub  2048R/6D3CD07B 2011-07-20 Ronald Landheer-Cieslak (Software Analyst) <rlc@vlinder.ca>\n    \t Hash=E0C9DE42CFF88A35CACE3EB488A1783E\n    \t Fingerprint=9DAC FA3D D7A5 001F A0B2  DA59 5E0C 4AF1 6D3C D07B\n\nYou can download it from keys.gnupg.net\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/07/21/new-gnupg-key","locallink":"/blog/2011/07/21/new-gnupg-key","published":true},{"author":"rlc","categories":["Social Media","Journalism","Politics"],"comments":true,"date":"2011-07-13T00:00:00.000Z","layout":"post","tags":["Twitter (0.9)","updates (0.7)","non-tech person (0.6)","politics journalist (0.8)","CBC (0.9)","Kady O'Malley (0.9)","liveblogging (0.7)","NotW scandal (0.8)","CRTC (0.6)","Usage-Based Billing (0.6)","CBC Radio (0.8)","journalism (0.8)","News International (0.7)","hacking (0.6)","voicemail (0.5)"],"title":"From #NotW in the GMT morning to #UBB in the EDT afternoon -- an example of devoted journalism","wordpress_id":1570,"uuid":"c0c3b633-025a-4e1e-a226-0759f4df7c99","filename":"2011-07-13-from-notw-in-the-gmt-morning-to-ubb-in-the-edt-afternoon-an-example-of-devoted-journalism.markdown","slug":"from-notw-in-the-gmt-morning-to-ubb-in-the-edt-afternoon-an-example-of-devoted-journalism","excerpt":"I've just been catching up on my Twitter account's updates for today, where possibly the only non-tech person I follow, a politics journalist from the CBC called Kady O'Malley (@kady and @anotherkady) is still tweeting after 15 hours.\n\nShe started liveblogging the #NotW scandal in the UK this morning at 6 am and continued on the CRTC Usage-Based Billing hearings when those started.\n\nThis is the same Kady O'Malley that answers the questions sent to CBC Radio's The House in the \"That's a good question\" section.\n\nI already knew CBC Radio provides well-informed, balanced journalism (I don't watch TV so I don't know about CBC TV) but now I know how they do it: this is one example the people at News International should follow -- rather than hacking into people's voicemail and giving journalism a bad name.","permalink":"https://rlc.vlinder.ca/blog/2011/07/13/from-notw-in-the-gmt-morning-to-ubb-in-the-edt-afternoon-an-example-of-devoted-journalism","locallink":"/blog/2011/07/13/from-notw-in-the-gmt-morning-to-ubb-in-the-edt-afternoon-an-example-of-devoted-journalism","published":true},{"author":"rlc","categories":["Programming","Problem-solving","Innovation","Collaboration","Reflection"],"comments":true,"date":"2011-07-10T00:00:00.000Z","layout":"post","tags":["problem solving (0.9)","programming (0.8)","real-time embedded programming (0.7)","innovation (0.6)","collaboration (0.5)","epiphany (0.4)","hindsight (0.3)"],"title":"\"Changer son fusil d'épaule\"","wordpress_id":1565,"uuid":"2ef7aff3-4466-4982-862e-2a92cd15d76b","filename":"2011-07-10-changer-son-fusil-depaule.markdown","slug":"changer-son-fusil-depaule","excerpt":"Sometimes, when all else fails, you have to change your tack.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/07/10/changer-son-fusil-depaule","locallink":"/blog/2011/07/10/changer-son-fusil-depaule","published":true},{"author":"rlc","categories":["Holidays","Wallpapers","Canada","Autumn"],"comments":true,"date":"2011-07-01T00:00:00.000Z","layout":"post","tags":["Canada Day (0.8)","autumn wallpapers (0.9)","Canada-themed (0.8)","celebration (0.6)","images (0.5)"],"title":"Happy Canada Day","wordpress_id":1553,"uuid":"a8e9ae85-f539-4f38-a10e-2fd794a40a67","filename":"2011-07-01-happy-canada-day.markdown","slug":"happy-canada-day","excerpt":"On the occasion of Canada day, I thought I'd put up the Canada-themed autumn wallpapers I'd prepared.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/07/01/happy-canada-day","locallink":"/blog/2011/07/01/happy-canada-day","published":true},{"author":"rlc","categories":["Software Development","Embedded Systems","Hardware Design","Debugging","Real-time Systems"],"comments":true,"date":"2011-06-27T00:00:00.000Z","layout":"post","tags":["embedded software development (0.9)","device driver debugging (0.8)","real-time system (0.7)","output signal (0.6)","GPIO (0.8)","hardware design (0.7)","soldering iron (0.5)","resistor (0.6)","firmware debugging (0.7)"],"title":"Hardware designers, please, think of us!","wordpress_id":1551,"uuid":"1423d9d6-a392-4487-a3e2-fa70dcb44e55","filename":"2011-06-27-hardware-designers-please-think-of-us.markdown","slug":"hardware-designers-please-think-of-us","excerpt":"One of the most time-consuming tasks in embedded software development can be device driver debugging. Especially if that debugging has to be done in a real-time system without disturbing its real-time characteristics. This usually amounts to producing an output signal on a pin of the CPU and probing the output to see what's going on. In order to be able to do that, the people who design the hardware have to keep in mind that the people who design the software will have some debugging to do on the final hardware -- even if it's just to make sure everything is working OK.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/06/27/hardware-designers-please-think-of-us","locallink":"/blog/2011/06/27/hardware-designers-please-think-of-us","published":true},{"author":"rlc","categories":["Labor Dispute","Government","Union","Canada Post","Constitutional Implications","Arbitration","Monopoly","Collective Bargaining","Individual Bargaining","Economy"],"comments":true,"date":"2011-06-27T00:00:00.000Z","layout":"post","tags":["Canada Post (0.9)","labor dispute (0.8)","back-to-work bill (0.7)","constitutional implications (0.6)","litigation (0.8)","arbitration process (0.6)","double monopoly (0.9)","postal service (0.7)","CUPW union (0.8)","Harper (0.7)","collective bargaining (0.8)","monopoly on mail delivery (0.7)","FedEx (0.6)","UPS (0.6)"],"title":"Canada Post Labor Dispute -- Resolved?","wordpress_id":1549,"uuid":"b8b88c3c-e87f-4e55-8f72-b1ced6442e17","filename":"2011-06-27-canada-post-labor-dispute-resolved.markdown","slug":"canada-post-labor-dispute-resolved","excerpt":"I've been watching the Canada Post labor dispute from afar over Twitter and saw the back-to-work bill pass on third reading. Does that mean the dispute is over? I don't think so...","permalink":"https://rlc.vlinder.ca/blog/2011/06/27/canada-post-labor-dispute-resolved","locallink":"/blog/2011/06/27/canada-post-labor-dispute-resolved","published":true},{"author":"rlc","categories":["Travel","Tourism","Vacation destinations"],"comments":true,"date":"2011-06-25T00:00:00.000Z","layout":"post","tags":["Lonely Planet (0.9)","travel destinations (0.8)","Syria (0.9)","civil unrest (0.7)","Japan (0.9)","nuclear accident (0.8)","vacation (0.8)","world news (0.6)","Italy (0.8)","tourism (0.7)","United States (0.7)","Canada (0.7)","Europe (0.7)","frugal travel (0.6)"],"title":"Lonely Planet's Travel Top Ten","wordpress_id":1547,"uuid":"d6369f18-7e66-43dd-963a-62f4b57b8546","filename":"2011-06-25-lonely-planets-travel-top-ten.markdown","slug":"lonely-planets-travel-top-ten","excerpt":"Lonely Planet came out with a book on their top-ten places to visit recently. In light of recent events, some of their choices merit revision and as I don't have anything better to do right now, I thought I'd do a bit of revision on my iPod...\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/06/25/lonely-planets-travel-top-ten","locallink":"/blog/2011/06/25/lonely-planets-travel-top-ten","published":true},{"author":"rlc","categories":["Technology","History","Computers","Programming"],"comments":true,"date":"2011-06-21T00:00:00.000Z","layout":"post","tags":["programmable computer (0.9)","memory (0.8)","Manchester Baby (0.7)","B. Jack Copeland (0.6)","University of Canterbury (0.5)","history (0.4)","technology (0.3)","anniversary (0.2)","modern (0.1)"],"title":"The Manchester Baby is 63 years old today","wordpress_id":1533,"uuid":"1b489fde-c915-44a1-b14f-d7c31a8e473a","filename":"2011-06-21-the-manchester-baby-is-63-years-old-today.markdown","slug":"the-manchester-baby-is-63-years-old-today","excerpt":"The first \"modern\" programmable computer with 32 words of memory, is 63 years old today.\n\n[![Manchester's Baby](http://farm3.static.flickr.com/2767/4250382213_21f3d837c5_z.jpg?zz=1)](http://www.flickr.com/photos/lff10/4250382213/)\n\nA revised history of the Manchester Baby, in two parts, by B. Jack Copeland from the University of Canterbury in Christchurch, New Zealand, is available [here](http://doi.ieeecomputersociety.org/10.1109/MAHC.2010.1) and [here](http://doi.ieeecomputersociety.org/10.1109/MAHC.2010.2) -- a really\ninteresting read.","permalink":"https://rlc.vlinder.ca/blog/2011/06/21/the-manchester-baby-is-63-years-old-today","locallink":"/blog/2011/06/21/the-manchester-baby-is-63-years-old-today","published":true},{"author":"rlc","categories":["Seasonal content","Website design","Wallpaper","Lily flower","Canadian province flag","Image download","Architecture ideas"],"comments":true,"date":"2011-06-17T00:00:00.000Z","layout":"post","tags":["Summer (0.9)","Desktop backgrounds (0.8)","Site headers (0.7)","Wallpaper (0.9)","Vlinder logo (0.6)","Lily flower (0.8)","Canadian province (0.7)","Download (0.8)","Image sizes (0.6)","Architecture ideas (0.7)"],"title":"Summer is here","wordpress_id":1505,"uuid":"cfc8b89c-48d8-4857-b867-dca401498dfc","filename":"2011-06-17-summer-is-here.markdown","slug":"summer-is-here","excerpt":"[Summer is here](http://en.wikipedia.org/wiki/Summer#Timing), so it's time to update desktop backgrounds and site headers with something a bit more summery.\n\nThis wallpaper of course has the Vlinder logo and the url of this website but, more prominently, it has a lily flower - which also figures prominently (but stylized) on the flag of the Canadian province I live in.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/06/17/summer-is-here","locallink":"/blog/2011/06/17/summer-is-here","published":true},{"author":"rlc","categories":["Programming","Functional Programming","Meta-programming","Compile-time Programming","SFINAE"],"comments":true,"date":"2011-06-04T00:00:00.000Z","layout":"post","tags":["functional programming (1.0)","lambda expressions (1.0)","compile-time (1.0)","meta-functions (1.0)","functors (1.0)","Fibonacci sequence (1.0)","SFINAE (1.0)","C++ (1.0)","meta-programming (1.0)","template (1.0)","overloading (1.0)","compile-time constant (1.0)","recursive specialization (1.0)","substitution failure (1.0)","function call (1.0)","compile-time error (1.0)","candidate function (1.0)","compile-time optimization (1.0)","variadic function (1.0)","member type (1.0)","nested typedef (1.0)","on-line IDE (1.0)"],"title":"Functional Programming at Compile-Time","wordpress_id":1503,"uuid":"9e9c1f71-872c-4649-854b-905c73ff7160","filename":"2011-06-04-functional-programming-at-compile-time-cpp4theselftaught.markdown","slug":"functional-programming-at-compile-time-cpp4theselftaught","excerpt":"In the [previous installment](/blog/2011/05/using-ranges-and-functional-programming-in-c-cpp4theselftaught/) I talked about functional programming a bit, introducing the idea of _functors_ and _lambda expressions_. This time, we will look at another type of functional programming: a type that is done at compile-time.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/06/04/functional-programming-at-compile-time-cpp4theselftaught","locallink":"/blog/2011/06/04/functional-programming-at-compile-time-cpp4theselftaught","published":true},{"author":"rlc","categories":["Copyright","Webcomics"],"comments":true,"date":"2011-05-24T00:00:00.000Z","layout":"post","tags":["Copyright (1.0)","XKCD (0.8)","Webcomic (0.7)","Humor (0.5)","Image (0.4)"],"title":"From XKCD.com: Copyright","wordpress_id":1493,"uuid":"9e2b25d8-6bfa-4c04-bb73-d8ddc483fd29","filename":"2011-05-24-from-xkcd-com-copyright.markdown","slug":"from-xkcd-com-copyright","excerpt":"[![Copyright](http://imgs.xkcd.com/comics/copyright.jpg)](http://xkcd.com/14/)","permalink":"https://rlc.vlinder.ca/blog/2011/05/24/from-xkcd-com-copyright","locallink":"/blog/2011/05/24/from-xkcd-com-copyright","published":true},{"author":"rlc","categories":["Programming","Functional Programming","Object-Oriented Programming","Meta-Programming"],"comments":true,"date":"2011-05-20T00:00:00.000Z","layout":"post","tags":["C++ (1.0)","versatile language (0.9)","generic meta-programming (0.8)","functional programming (1.0)","procedural programming (0.7)","object-oriented programming (0.8)","C++03 (0.9)","C++0x (0.9)","closure (0.8)","ranges (0.9)","STL containers (0.8)","STL algorithms (0.8)","generic template meta-programming (0.9)","lambda expressions (0.9)","functor (0.8)","function object (0.8)","compile-time (0.8)"],"title":"Using Ranges and Functional Programming in C++","wordpress_id":1399,"uuid":"53c83c4e-9f58-4d64-8522-473be40a5086","filename":"2011-05-20-using-ranges-and-functional-programming-in-c-cpp4theselftaught.markdown","slug":"using-ranges-and-functional-programming-in-c-cpp4theselftaught","excerpt":"C++ is a very versatile language. Among other things, you can do generic meta-programming and functional programming in C++, as well as the better-known facilities for procedural and object-oriented programming. In this installment, we will look at the functional programming facilities in the now-current C++ standard (C++03) as well as the upcoming C++0x standard. We will look at what a _closure_ is and how to apply one to a range, but we will first look at some simpler uses of ranges -- to warm up.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/05/20/using-ranges-and-functional-programming-in-c-cpp4theselftaught","locallink":"/blog/2011/05/20/using-ranges-and-functional-programming-in-c-cpp4theselftaught","published":true},{"author":"rlc","categories":["Programming","Technology","Online tools","Coding languages"],"comments":true,"date":"2011-05-08T00:00:00.000Z","layout":"post","tags":["Python (0.9)","StackOverflow (0.8)","IDE (0.7)","Programming (0.6)","Syntax (0.5)","Indentation (0.4)","Comments (0.3)","Learning (0.2)","Code (0.1)"],"title":"Starting Python - 99 bottles of beer","wordpress_id":1384,"uuid":"b911ff7a-3507-45ed-8f9c-e854686c45d9","filename":"2011-05-08-starting-python-99-bottles-of-beer.markdown","slug":"starting-python-99-bottles-of-beer","excerpt":"After a brief discussion on the subject on StackOverflow chat, I've decided to try my hand at Python, using the on-line IDE at [Ideone.com](http://ideone.com).\n[Here](https://ideone.com/ummB0) is my rendering of \"99 bottles of beer\" in Python...\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/05/08/starting-python-99-bottles-of-beer","locallink":"/blog/2011/05/08/starting-python-99-bottles-of-beer","published":true},{"author":"rlc","categories":["Programming Language","Esoteric Language","Turing Machine"],"comments":true,"date":"2011-05-05T00:00:00.000Z","layout":"post","tags":["programming-language (1.0)","Turing-complete (0.8)","BrainFuck (1.0)","esoteric (0.7)","Turing-machine (0.6)","universal-computer (0.5)","algorithm (0.4)","BrainF*** (0.8)","Turing-Machine (0.6)","ASCII (0.3)","I/O (0.3)","QuickSort (0.4)","newbie-programmers (0.5)","veterans (0.5)"],"title":"Why I Recommend BrainF--- (and what I recommend it for)","wordpress_id":1368,"uuid":"4537b8f5-6959-4ee4-8b30-bb43274d2ec2","filename":"2011-05-05-why-i-recommend-brainf-and-what-i-recommend-it-for.markdown","slug":"why-i-recommend-brainf-and-what-i-recommend-it-for","excerpt":"BrainFuck is an esoteric Turing-complete programming language that consists of only the bare minimum commands for Turing-completeness. It is exactly this bare-minimum-ness that makes it an interesting language - although at first a bit awkward to wrap your head around.\n\n    >>++++[<+++++>-]<+++[<+++++>-]<-.------.---------.>>++++++++[<++++\n    ++++>-]<.[-]++++[<+++++>-]<-.----------.---.+++++.----------.+.+++\n    ++++++++++.>>+++++++[<+++++++>-]<---.[-]+++[<----->-]<.--.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/05/05/why-i-recommend-brainf-and-what-i-recommend-it-for","locallink":"/blog/2011/05/05/why-i-recommend-brainf-and-what-i-recommend-it-for","published":true},{"author":"rlc","categories":["Software Testing"],"comments":true,"date":"2011-04-14T00:00:00.000Z","layout":"post","tags":["code coverage (0.9)","bugs (0.8)","testing (0.7)","unit tests (0.7)","acceptance tests (0.7)","black box tests (0.6)","functional tests (0.6)","smoke tests (0.5)","white box tests (0.5)","regression tests (0.5)"],"title":"Shining light on bugs: testing","wordpress_id":1357,"uuid":"be7275d4-c9cb-43bb-8526-3e55e4a42956","filename":"2011-04-14-shining-light-on-bugs-testing.markdown","slug":"shining-light-on-bugs-testing","excerpt":"Bugs like to hide in the darker corners of the code: the parts that are least exercised, less well-structured. They don't react to light very well. tests are like a spotlight that you shine upon specific pieces of the code. The first time you do that -- especially if the code has been around a while -- the bugs will come crawling out of the woodworks.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/04/14/shining-light-on-bugs-testing","locallink":"/blog/2011/04/14/shining-light-on-bugs-testing","published":true},{"author":"rlc","categories":["Technology","Programming","Software Development","C++ Language","ISO Standards"],"comments":true,"date":"2011-03-26T00:00:00.000Z","layout":"post","tags":["C++ (1.0)","Standard Committee (0.8)","Madrid (0.5)","C++0x (1.0)","ISO (0.7)","Threads (0.6)","Ranges (0.4)","Lambda Expressions (0.9)","Automatic Type Deduction (0.8)","Rvalue References (0.7)","Functional Programming (0.6)","GCC (0.5)"],"title":"C++0b","wordpress_id":1355,"uuid":"fe68f71a-4251-41fc-88de-eeb9195bfb4c","filename":"2011-03-26-c0b.markdown","slug":"c0b","excerpt":"The C++ standard committee has been meeting in Madrid and has, according to the latest news, approved the new C++ standard. [As Michael Wong said on his C/C++ Cafe Blog](https://web.archive.org/web/20160611151934/https://www.ibm.com/developerworks/mydeveloperworks/blogs/5894415f-be62-4bc0-81c5-3956e82276f3/entry/the_c_0x_standard_has_been_approved_to_ship23?lang=en), C++0x is now C++0b -- though it might be C++0c by the time ISO gets done with it.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/03/26/c0b","locallink":"/blog/2011/03/26/c0b","published":true},{"author":"rlc","categories":["Iterators","Ranges","Containers","Standard Algorithms"],"comments":true,"date":"2011-03-17T00:00:00.000Z","layout":"post","tags":["STL (1.0)","Iterators (1.0)","Ranges (1.0)","Containers (1.0)","Standard Algorithms (1.0)","Design (0.8)","C++ Programming Language (0.8)","Tutorial (0.7)","Presentation (0.7)","Input Iterators (1.0)","Output Iterators (1.0)","Forward Iterators (1.0)","Bidirectional Iterators (1.0)","Random-Access Iterators (1.0)","Traversal Categories (1.0)","Value Access Categories (1.9)","Classification of Containers (1.0)","Classification of Algorithms (1.0)"],"title":"Ranges","wordpress_id":1303,"uuid":"b2b1fb15-53c8-4785-a2df-1b9e84d7e411","filename":"2011-03-17-ranges.markdown","slug":"ranges","excerpt":"","permalink":"https://rlc.vlinder.ca/blog/2011/03/17/ranges","locallink":"/blog/2011/03/17/ranges","published":true},{"author":"rlc","categories":["History","Technology","Engineering","Gender Studies"],"comments":true,"date":"2011-03-08T00:00:00.000Z","layout":"post","tags":["Geek mythology (1.0)","Charles Babbage (0.8)","Analytical Engine (0.9)","hardware engineering (1.0)","Ada Lovelace (0.8)","software engineering (1.0)","women in software development (0.9)","project management (0.7)","agile software development (0.9)","International Women's Day (1.0)"],"title":"Geek Mythology: Women and the Start of Software Engineering","wordpress_id":1280,"uuid":"61ed126e-2916-4842-a381-0dc455a65ff5","filename":"2011-03-08-geek-mythology-women-and-the-start-of-software-engineering.markdown","slug":"geek-mythology-women-and-the-start-of-software-engineering","excerpt":"According to Geek mythology, when Charles Babbage had invented the Analytical Engine, he sat back and said: \"Behold! I have created the first pocket calculator!\". Of course, he hadn't actually built the thing yet, and lacket the practical skill to do so. When it finally was built, there wasn't a pocket large enough on Earth to put it in. Thus was the inception of the hardware engineering discipline.\n\nWhile hardware had gotten off to a good start, software took a more practical approach: when Ada Lovelace heard of the Analytical Engine, she said to herself: \"Forsooth, such a mighty machine needeth a _touche feminine_ if ever it is to serve a purpose\" and proceeded to write the first computer program. It took several decades for the hardware engineering discipline to catch up with the software engineering discipline and for the two to come together and actually do something useful.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/03/08/geek-mythology-women-and-the-start-of-software-engineering","locallink":"/blog/2011/03/08/geek-mythology-women-and-the-start-of-software-engineering","published":true},{"author":"rlc","categories":["Software Verification","Towards Reliable Software","Quality in Agile","The Introduction of Agile","Conclusion"],"comments":true,"date":"2011-03-06T00:00:00.000Z","layout":"post","tags":["software development (1.0)","bug-free software (0.9)","software verification (0.8)","formal proof (0.7)","static verification tools (0.6)","software engineering (0.6)","agile development (0.8)","continuous integration (0.7)","unit testing (0.6)","quality assurance (0.8)","test automation (0.7)","software testing (0.7)"],"title":"The Evolution of the Software Engineering Practice Faced With The Knowledge That \"Bugs Must Exist\"","wordpress_id":1281,"uuid":"08815654-6e51-4009-9ee4-95ad31bd69b5","filename":"2011-03-06-the-evolution-of-the-software-engineering-practice-faced-with-the-knowledge-that-bugs-must-exist.markdown","slug":"the-evolution-of-the-software-engineering-practice-faced-with-the-knowledge-that-bugs-must-exist","excerpt":"Though laudable, the quest for bug-free software is doomed to failure. This should be news to no-one as the argument for this is as old as I am.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/03/06/the-evolution-of-the-software-engineering-practice-faced-with-the-knowledge-that-bugs-must-exist","locallink":"/blog/2011/03/06/the-evolution-of-the-software-engineering-practice-faced-with-the-knowledge-that-bugs-must-exist","published":true},{"author":"rlc","categories":["Software Development","Bug Hunting","Blogging","Wallpapers","Theme Song"],"comments":true,"date":"2011-03-02T00:00:00.000Z","layout":"post","tags":["bugs (0.9)","butterflies (0.8)","software errors (0.7)","bug-hunting (0.8)","theme song (0.6)","wallpapers (0.5)","debugging (0.7)"],"title":"A bulldog approach to bugs","wordpress_id":1276,"uuid":"a95439aa-4f15-4f23-9027-41cef717d7b9","filename":"2011-03-02-a-bulldog-approach-to-bugs.markdown","slug":"a-bulldog-approach-to-bugs","excerpt":"The only bugs I like are butterflies - and even then, only a specific blue butterfly that happens to be a drawing. Aside from those, I spend a lot of time rooting them out.\n\nI advocate what you might call a bulldog approach to bugs: track them, hunt them down, kill them. Don't let go until you're sure they're dead. This might seem overly agressive, but remember we're talking about software errors here - not actual living beings.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/03/02/a-bulldog-approach-to-bugs","locallink":"/blog/2011/03/02/a-bulldog-approach-to-bugs","published":true},{"author":"rlc","categories":["Programming"],"comments":true,"date":"2011-02-20T00:00:00.000Z","layout":"post","tags":["coding (0.9)","programming (0.8)","debugging (0.7)","domain-specific languages (0.8)","expressive code (0.7)","serialization (0.9)","Barton-Nackman idiom (0.9)","operator overloading (0.8)"],"title":"Applying the Barton-Nackman idiom","wordpress_id":1264,"uuid":"b8d22aac-680e-493c-aa48-c70659377e27","filename":"2011-02-20-applying-the-barton-nackman-idiom.markdown","slug":"applying-the-barton-nackman-idiom","excerpt":"It is amazing how much code you can cram into a single line, and how much magic happens behind the scenes when you do.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/02/20/applying-the-barton-nackman-idiom","locallink":"/blog/2011/02/20/applying-the-barton-nackman-idiom","published":true},{"author":"rlc","categories":["Software Development","Project Management","Technology","Entrepreneurship"],"comments":true,"date":"2011-02-17T00:00:00.000Z","layout":"post","tags":["App Development (0.9)","Project Management (0.8)","Requirements Management (0.7)","Risk Management (0.6)","Workflow (0.5)","Billing (0.4)","Bug Tracking (0.8)","Issue Tracking (0.7)","Code Repositories (0.6)","Embedded Systems (0.4)","Distributed Development (0.5)","Software Development (0.6)"],"title":"A \"brilliant\" idea (?)","wordpress_id":1210,"uuid":"a328245a-2656-49d1-bf82-95f7f8087dc4","filename":"2011-02-17-a-brilliant-idea.markdown","slug":"a-brilliant-idea","excerpt":"For a few days now, I've been carrying an idea around for a new app I could really use for my projects: something that integrates requirements management, risk management, workflow, billing, bug/issue tracking, action items, etc. with the code repositories. Wouldn't that be fun?\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/02/17/a-brilliant-idea","locallink":"/blog/2011/02/17/a-brilliant-idea","published":true},{"author":"rlc","categories":["Risk Management","Project Management","Software Development","Agile Methodologies","Communication","Risk Identification","Risk Analysis","Risk Planning","Risk Tracking","Risk Control","Risk Life-Cycle","Risk Severity Calculation","Risk Dependencies","Risk Dependency Management","Risk Dependency Tracking","Risk Dependency Graph","Risk Dependency Assessment","Risk Severity Analysis","Risk Severity Metrics","Risk Severity Calculation Methods","Risk Severity Prioritization","Risk Severity Impact","Risk Severity Probability","Risk Severity Evaluation","Risk Severity Planning","Risk Severity Enhancement","Risk Severity Quantification","Risk Severity Methodology","Risk Severity Improvement","Risk Severity Conclusion"],"comments":true,"date":"2011-02-09T00:00:00.000Z","layout":"post","tags":["risk-management (1.0)","agile-methodologies (0.9)","project-management (0.8)","software-development (0.7)","risk-identification (0.6)","risk-analysis (0.6)","risk-dependencies (1.0)","severity-metrics (0.9)","risk-life-cycle (0.8)","iso-31000 (0.7)","communication (0.6)","risk-severity (1.0)"],"wordpress_id":1206,"uuid":"48e3b263-507d-428c-b61f-59872cd22023","filename":"2011-02-09-the-art-and-science-of-risk-management.markdown","slug":"the-art-and-science-of-risk-management","excerpt":"I like to take a rational approach to risk management: identify risks and opportunities, their probability and their impact, maximize the impact and probability of opportunities and minimize those of risks. In this article, I explain a bit of my approach, I expound upon risk dependencies, based on a recent article by Tak Wah Kwan and Hareton K.N. Leung, and I offer some practical advice.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/02/09/the-art-and-science-of-risk-management","locallink":"/blog/2011/02/09/the-art-and-science-of-risk-management","published":true},{"author":"rlc","categories":["Programming","Software Development","Computer Science","Design Patterns","C++"],"comments":true,"date":"2011-02-06T00:00:00.000Z","layout":"post","tags":["C++ (1.0)","Observer pattern (1.0)","Proxy (0.7)","SOCKS server (0.7)","Code re-use (0.6)","Functional clarity (0.6)","Subject (0.6)","Server class (0.6)","Application class (0.6)","Interface (0.6)","Event handling (0.5)","Implementation (0.5)","Architecture (0.5)","Directed acyclic graph (0.5)","Single-threaded (0.5)","IPv6 readiness (0.5)","Thread synchronization (0.5)","Polymorphic (0.5)","Pointer (0.5)","Iterator (0.5)","No fail guarantee (0.5)"],"title":"The Observer Pattern","wordpress_id":1167,"uuid":"0a466c07-4d20-48f4-a129-094853317c17","filename":"2011-02-06-the-observer-pattern-cpp4theselftaught.markdown","slug":"the-observer-pattern-cpp4theselftaught","excerpt":"In this installment of C++ for the self-taught, we will be looking at the Observer pattern: we will be starting the implementation of the proxy-part of our SOCKS server by accepting connections and servicing them.","permalink":"https://rlc.vlinder.ca/blog/2011/02/06/the-observer-pattern-cpp4theselftaught","locallink":"/blog/2011/02/06/the-observer-pattern-cpp4theselftaught","published":true},{"author":"rlc","categories":["Technology","Website Management","Software Installation","Website Address Change","Website Design","Website Maintenance","Link Management"],"comments":true,"date":"2011-02-02T00:00:00.000Z","layout":"post","tags":["software installation (0.9)","website address change (0.8)","website update (0.7)","link redirection (0.6)","technical difficulties (0.5)","website maintenance (0.4)","permalink (0.3)","static pages (0.2)","blog (0.1)"],"title":"A new look and a new address","wordpress_id":1152,"uuid":"9e3b91ca-ce17-42bd-aa60-befe5ce08768","filename":"2011-02-02-a-new-look-and-a-new-address.markdown","slug":"a-new-look-and-a-new-address","excerpt":"Due to some technical difficulties I was having with the previous installation of the software running this site, I decided to re-install the software from scratch and, while at it, change the address from landheer-cieslak.com to rlc.vlinder.ca. The look has been updated a bit and some further improvements will take place over the next few weeks.","permalink":"https://rlc.vlinder.ca/blog/2011/02/02/a-new-look-and-a-new-address","locallink":"/blog/2011/02/02/a-new-look-and-a-new-address","published":true},{"author":"rlc","categories":["Cybersecurity","Technology","National Security","Software Development","Embedded Systems","Network Security","Denial of Service Attacks","Critical Infrastructure","Programming Languages","Systems Programming","Industry Standards","Awareness Campaigns","Public Policy","Regulation"],"comments":true,"date":"2011-01-10T00:00:00.000Z","layout":"post","tags":["interview (0.9)","embedded systems (0.9)","security issue (0.8)","rootkits (0.7)","BIOS attacks (0.7)","access control (0.6)","distributed denial of service (DDOS) (0.8)","critical civilian infrastructure (0.8)","web security (0.7)","application layer (0.6)","presentation layer (0.6)","Singularity project (0.8)","embedded software (0.8)","systems software (0.7)","C# (0.7)","Java (0.6)","C++ (0.7)","programming languages (0.6)","systems programming (0.7)","radical change (0.8)","industry productivity (0.7)","security awareness (0.8)","policy makers (0.7)"],"title":"Security Awareness and Embedded Software","wordpress_id":1148,"uuid":"e6ba1da9-b325-4ea5-8bd2-78435e90ab15","filename":"2011-01-10-security-awareness-and-embedded-software.markdown","slug":"security-awareness-and-embedded-software","excerpt":"In a recent interview with Ivan Arce of Core Security Technologies by Gary McGraw of Cigital, Arce made the point that embedded systems are becoming a security issue. At about the same time, US Army General Keith B. Alexander, director of the US National Security Agency, said that a separate secure network needs to be created for critical civilian infrastructure. They are probably both right.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/01/10/security-awareness-and-embedded-software","locallink":"/blog/2011/01/10/security-awareness-and-embedded-software","published":true},{"author":"rlc","categories":["Cybersecurity","Software Development","Error Handling","Encryption","Information Security"],"comments":true,"date":"2011-01-07T00:00:00.000Z","layout":"post","tags":["error messages (0.9)","ASP.NET (0.8)","vulnerability (0.7)","hackers (0.6)","deciphering encrypted data (0.5)","Advanced Encryption Standard (0.4)","Triple Data Encryption Standard (0.4)","Microsoft (0.4)","security researchers (0.3)","malicious users (0.3)","feedback (0.3)","custom error codes (0.3)","decryption (0.3)","passwords (0.3)","sensitive information (0.3)","programming (0.2)","Windows (0.2)","incorrect parameter (0.2)","experience (0.2)"],"title":"How error messages can backfire","wordpress_id":1144,"uuid":"249062a9-2936-453e-a15d-b42ddd018b64","filename":"2011-01-07-how-error-messages-can-backfire.markdown","slug":"how-error-messages-can-backfire","excerpt":"Error messages should provide enough information for the user to correct their error, but they shouldn't provide any more than that, or malicious users could abuse them - as shown recently with the ASP.NET server.\n\n","permalink":"https://rlc.vlinder.ca/blog/2011/01/07/how-error-messages-can-backfire","locallink":"/blog/2011/01/07/how-error-messages-can-backfire","published":true},{"author":"rlc","categories":["Software Development","Computer Programming","Testing","Algorithms","Distributed Systems"],"comments":true,"date":"2010-12-10T00:00:00.000Z","layout":"post","tags":["software development (0.9)","testing (0.8)","algorithm (0.7)","logging mechanism (0.6)","lock-free queues (0.5)","Relacy (0.4)","error detection (0.4)","formal proof (0.3)","bug-free software (0.2)"],"title":"Testing Lock-Free Software","wordpress_id":1142,"uuid":"10593f2d-c9b8-4bc6-9830-fde317f383e1","filename":"2010-12-10-testing-lock-free-software.markdown","slug":"testing-lock-free-software","excerpt":"When a test has been running non-stop for over six months, beating the heck out of an algorithm, can we be confident the algorithm is OK?\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/12/10/testing-lock-free-software","locallink":"/blog/2010/12/10/testing-lock-free-software","published":true},{"author":"rlc","categories":["Networking","Event-driven software design","Socket programming","C programming","C++ programming","Synchronous multiplexing","Observer pattern"],"comments":true,"date":"2010-12-03T00:00:00.000Z","layout":"post","tags":["networking (1.0)","event-driven software design (1.0)","select function (1.0)","synchronous multiplexing (0.8)","socket file descriptors (0.8)","event handling (0.8)","socket creation (0.8)","address family (0.8)","socket type (0.8)","protocol (0.8)","bind (0.8)","listen (0.8)","connect (0.8)","server socket (0.8)","client socket (0.8)","event-driven loop (0.8)","observer pattern (0.8)"],"title":"Event-driven software, step 1: select","wordpress_id":1137,"uuid":"061012f7-ac73-4460-ab26-88be4b23bfc1","filename":"2010-12-03-event-driven-software-step-1-select.markdown","slug":"event-driven-software-step-1-select","excerpt":"In this installment, we will look at the basic networking functions and start looking at event-driven software design. Starring in this installment will be the `select` function.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/12/03/event-driven-software-step-1-select","locallink":"/blog/2010/12/03/event-driven-software-step-1-select","published":true},{"author":"rlc","categories":["Quality Assurance"],"comments":true,"date":"2010-11-19T00:00:00.000Z","layout":"post","tags":["Quality (5.0)","ISO (4.0)","Requirements (3.5)","Excellence (3.0)","Prevention (2.5)","Software (2.0)","Hardware (1.5)","Integration (1.0)","Testing (4.0)","Stability (3.5)","Design (3.0)","Implementation (2.5)","Failure (2.0)","Root Cause (4.0)"],"title":"More than the absence of problems","wordpress_id":1133,"uuid":"c4bc2528-7927-45d7-a06b-471db8417447","filename":"2010-11-19-more-than-the-absence-of-problems.markdown","slug":"more-than-the-absence-of-problems","excerpt":"Quality can be defined in many ways: ISO defines quality relative to requirements as a measure of how well the object's characteristics meet those requirements. Those requirements can be specified (documented) or implied (customary). This has the advantage of making quality more or less measurable, but it has the disadvantage of making it harder to justify improving the product if the (minimum) requirements are met.\n\nIn my view, quality is a measure of excellence: it is more than the absence of problems and aims towards the prevention of problems.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/11/19/more-than-the-absence-of-problems","locallink":"/blog/2010/11/19/more-than-the-absence-of-problems","published":true},{"author":"rlc","categories":["Work-life balance","Time management","Podcasting","Programming (C++)"],"comments":true,"date":"2010-11-18T00:00:00.000Z","layout":"post","tags":["Workload (0.8)","Time management (0.7)","Trust (0.6)","Podcast (0.5)","C++ (0.4)","Self-taught (0.3)","Schedule (0.3)"],"title":"When the cup is full, carry it level","wordpress_id":1131,"uuid":"b4f0f535-106a-4a96-afe9-255f4ac65e41","filename":"2010-11-18-cpp4theselftaught-when-the-cup-is-full-carry-it-level.markdown","slug":"cpp4theselftaught-when-the-cup-is-full-carry-it-level","excerpt":"It is both a problem and a privilege to have too much work. It is a problem because, at some point, things don't get done and it is a privilege because it means, among other things, that people are trusting you with things to do.\n\nThe C++ for the self-taught podcast, however, is one of the things I am not getting done this time. I will, therefore, have to revert to the original, monthly, schedule for the time being, while I get all the work I have, done.","permalink":"https://rlc.vlinder.ca/blog/2010/11/18/cpp4theselftaught-when-the-cup-is-full-carry-it-level","locallink":"/blog/2010/11/18/cpp4theselftaught-when-the-cup-is-full-carry-it-level","published":true},{"author":"rlc","categories":["Cybersecurity"],"comments":true,"date":"2010-10-30T00:00:00.000Z","layout":"post","tags":["website hosting (0.9)","security breach (0.8)","FTP server (0.7)","professional hosting service (0.6)","cyber security (0.5)","defacing websites (0.4)","internet reliability (0.3)","power outages (0.2)","annoying hackers (0.1)"],"title":"Annoying Script Kiddies","wordpress_id":1128,"uuid":"6862f7c5-baa8-4aa1-a779-4edb8e130f73","filename":"2010-10-30-annoying-script-kiddies.markdown","slug":"annoying-script-kiddies","excerpt":"I don't host any of my sites, except for git.vlinder.ca, myself: my Internet connection isn't reliable enough, power outages are too frequent, and it's basically too much of a hassle. So, my sites are hosted by a professional hosting service and that service is responsible for the security of those sites. How annoying is it, then, when three of those sites get cracked through the FTP server?\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/10/30/annoying-script-kiddies","locallink":"/blog/2010/10/30/annoying-script-kiddies","published":true},{"author":"rlc","categories":["Technology","Business Analysis","Service-Oriented Architecture (SOA)"],"comments":true,"date":"2010-10-27T00:00:00.000Z","layout":"post","tags":["Gartner (0.9)","SOA (0.9)","Event-driven interactions (0.8)","EPCGlobal (0.7)","Auto-ID lab (0.6)","EPCIS (0.8)","Service-oriented architecture (0.8)","Query Control Interface (0.7)","Capturing Interface (0.6)","XML-over-HTTP (0.6)","IBM (0.7)","SAP (0.7)","Business analysis tools (0.6)"],"title":"Events in SOA","wordpress_id":1103,"uuid":"c4a1b288-ad18-43b7-82af-c4c8a9baa775","filename":"2010-10-27-events-in-soa.markdown","slug":"events-in-soa","excerpt":"In a recent article [on ZDNet](https://web.archive.org/web/20201205153641/https://www.zdnet.com/article/gartner-soas-next-step-is-managing-events/), Joe McKendrick writes that Roy Schulte, the Gartner analyst who helped define the SOA space more than a decade ago, says as SOA becomes embedded into the digital enterprise realm, organizations are moving services to support event-driven interactions, versus request/reply interactions.\n\nThis, of course, is old news...\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/10/27/events-in-soa","locallink":"/blog/2010/10/27/events-in-soa","published":true},{"author":"rlc","categories":["Technology","Internet","Networking","Security","Government","Economy"],"comments":true,"date":"2010-10-23T00:00:00.000Z","layout":"post","tags":["Internet Growth (0.9)","IPv4 Addresses (0.8)","IPv6 Adoption (0.9)","Obama Administration (0.7)","Smart Grid (0.8)","Cloud Computing (0.8)","IPv6 Features (0.9)","Robustness (0.8)","Auto-configuration (0.7)","Mobility (0.7)","Speed (0.8)","Streaming (0.8)","Security (0.9)"],"title":"Why IPv6 Matters","wordpress_id":1082,"uuid":"b378e6c6-ede0-4276-b231-80a94da956b3","filename":"2010-10-23-why-ipv6-matters.markdown","slug":"why-ipv6-matters","excerpt":"Given the rapid growth of the Internet, and the number of Internet-enabled devices, we are running out of IPv4 addresses - fast. This is a problem mostly for ISPs and large businesses who allocate their own public IP addresses from pools of addresses and sell or sub-let those addresses to .. us. When _they_ run out of addresses, as with any finite resource, the _haves_ will once again be pitted against the _have-nots_ and the Internet will become less egalitarian. But that is not the only reason why you should be interested in IPv6: more important than the 340 trillion, trillion, trillion addresses that the 128-bit address space of IPv6 allows (as opposed to the \"mere\" four billion of IPv4) are IPv6's _other_ features.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/10/23/why-ipv6-matters","locallink":"/blog/2010/10/23/why-ipv6-matters","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2010-10-17T00:00:00.000Z","layout":"post","tags":["refactoring (1.0)","exceptions (1.0)","clean break (0.9)","compiler errors (0.8)","Exception class (1.0)","error handling (0.9)","re-entrant (0.8)","no-fail guarantee (0.9)","mutable keyword (0.8)"],"title":"Refactoring Exceptions","wordpress_id":982,"uuid":"5681e6a4-5958-46d1-9483-a2816413aaa9","filename":"2010-10-17-cpp4theselftaught-refactoring-exceptions.markdown","slug":"cpp4theselftaught-refactoring-exceptions","excerpt":"As I mentioned in the [previous installment](/blog/2010/10/negotiation-first-steps), our current way of handling exceptions leaves a few things to be desired. In this installment, we will fix that problem.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/10/17/cpp4theselftaught-refactoring-exceptions","locallink":"/blog/2010/10/17/cpp4theselftaught-refactoring-exceptions","published":true},{"author":"rlc","categories":["Programming","Software Development","Exception Handling","Security","Authentication","Negotiation","SSPI","Mechanism"],"comments":true,"date":"2010-10-03T00:00:00.000Z","layout":"post","tags":["programming (1.0)","exceptions (1.0)","encapsulation (1.0)","negotiation (1.0)","SSPI (1.0)","context (1.0)","credentials (1.0)","mechanism (1.0)","authentication (1.0)","error handling (1.0)"],"title":"Negotiation: first steps","wordpress_id":970,"uuid":"2ce99b6a-172c-472e-93a7-3042767b6b54","filename":"2010-10-03-negotiation-first-steps.markdown","slug":"negotiation-first-steps","excerpt":"As discussed [last month](/blog/2010/09/opacity-encapsulation-at-its-best-and-worst), the requirement for encapsulation pushes us towards allowing the user to know that there's a negotiation between the two peers, and does not alleviate the requirement that the user understand the errors. So in this installment, we will start using the new implementation of exceptions we worked out in the previous installment, and start on the negotiation mechanism from two installments ago.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/10/03/negotiation-first-steps","locallink":"/blog/2010/10/03/negotiation-first-steps","published":true},{"author":"rlc","categories":["Technology","Health","Research","Science","Safety"],"comments":true,"date":"2010-09-29T00:00:00.000Z","layout":"post","tags":["technology (5.0)","health (4.0)","research (3.0)","medical profession (2.0)","mobile phones (1.0)","email (1.0)","safety (1.0)","security (1.0)","physicians (1.0)","myopia (1.0)"],"title":"Is technology making us sick?","wordpress_id":952,"uuid":"1d906edc-21f8-4d1d-a62d-cc7e647bc4d8","filename":"2010-09-29-is-technology-making-us-sick.markdown","slug":"is-technology-making-us-sick","excerpt":"In my view, technology should make our lives easier - that's what I try to work for, that's what this blog is about and that, in general, is what at least fundamental research is aimed at. But are we going about it the wrong way? Is technology really making our lives harder, rather than easier?\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/09/29/is-technology-making-us-sick","locallink":"/blog/2010/09/29/is-technology-making-us-sick","published":true},{"author":"rlc","categories":["This blog"],"comments":true,"date":"2010-09-21T00:00:00.000Z","layout":"post","tags":["site feature (0.8)","permalinks (0.9)","error page (0.6)","inconvenience (0.7)","blogging engine (0.5)","bugs (0.4)","broken link (0.8)","convenience (0.7)"],"title":"Updated: Not-so-permanent permalinks (all permalinks changed)","wordpress_id":948,"uuid":"585423f7-7595-4052-aa32-8607e3cc34df","filename":"2010-09-21-not-so-permanent-permalinks-all-permalinks-changed.markdown","slug":"not-so-permanent-permalinks-all-permalinks-changed","excerpt":"Due to the addition of an important feature on the site, all permalinks for all posts have changed. Following the old links will send you to an error page where the the proposed options should include the page you're looking for.\n\nSorry for the inconvenience.\n\n**2010-09-28**: to make sure everything continues to work, I'll be using less pretty, but more effective permalinks as per the default of the blogging engine, from now on. Only one additional permalink is broken with this change, but it does actually fix a few bugs, so I guess I'll live with the one broken link.\n\nAgain, sorry for the inconvenience, but if all goes well, things will get _more_ convenient from here on.","permalink":"https://rlc.vlinder.ca/blog/2010/09/21/not-so-permanent-permalinks-all-permalinks-changed","locallink":"/blog/2010/09/21/not-so-permanent-permalinks-all-permalinks-changed","published":true},{"author":"rlc","categories":["Programming","Object-Oriented Programming","Error Handling","Exception Handling","Contract Theory","Resource Management","C++ Language"],"comments":true,"date":"2010-09-17T00:00:00.000Z","layout":"post","tags":["error handling (1.0)","C++","object-oriented language (1.0)","constructor (1.0)","special methods (1.0)","contractual basis (1.0)","exception-safety (1.0)","Boost (1.0)","contract theory (1.0)","pre-conditions (1.0)","post-conditions (1.0)","invariants (1.0)","exceptions (1.0)","run-time errors (1.0)","logic errors (1.0)","resource management (1.0)","RAII (1.0)","advantages (1.0)","value-type classes (1.0)","inadequacies (1.0)","C-style error handling (1.0)","Conclusion (1.0)"],"title":"Error handling in C++","wordpress_id":939,"uuid":"d468355d-b162-459a-84e4-259929bc8b9e","filename":"2010-09-17-error-handling-in-cpp.markdown","slug":"error-handling-in-cpp","excerpt":"As far as error handling is concerned, C++ has all of the features and capabilities of C, but they are wholly inadequate in an object-oriented language. One very evident way in which C-style error handling is inadequate in an object-oriented language is in the implementation of a constructor of any non-trivial class, but this only becomes evident when we've analyzed two things: the guarantees that any method (including special methods such as constructors and destructors) can give, and the _minimal_ guarantees that each of these special methods _must_ give.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/09/17/error-handling-in-cpp","locallink":"/blog/2010/09/17/error-handling-in-cpp","published":true},{"author":"rlc","categories":["Copyright","Intellectual Property","Ethics","Technology","Law & Legislation"],"comments":true,"date":"2010-09-14T00:00:00.000Z","layout":"post","tags":["copyright (5.0)","contract (4.0)","bill C-32 (4.0)","public domain (4.0)","TPM (5.0)","FLOSS (4.0)","ethics (4.0)","privacy (4.0)","software engineering (3.0)","trust (3.0)"],"title":"Bill #c32 seems to be getting less controversial","wordpress_id":912,"uuid":"317a33d4-6845-492a-bd02-872b7db3ef2b","filename":"2010-09-14-bill-c32-seems-uncontroversial.markdown","slug":"bill-c32-seems-uncontroversial","excerpt":"Copyright is an important part of my work: every time I sign a work-related contract, I have to make sure that I don't sign away the rights of previous works to which I retain the rights, nor the rights to work that I do outside the scope of the contract I am signing at that point. I spend a significant amount of time and energy creating copyrighted material and some of that material has to remain mine. Like any copyright bill would, bill C-32 provides a framework to fall back on when cases aren't covered by contract and now, it looks like it's on its way to be passed.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/09/14/bill-c32-seems-uncontroversial","locallink":"/blog/2010/09/14/bill-c32-seems-uncontroversial","published":true},{"author":"rlc","categories":["Technology","Innovation","Security","Roaming"],"comments":true,"date":"2010-09-04T00:00:00.000Z","layout":"post","tags":["technology (0.9)","searching (0.8)","RFID (0.8)","EPCIS (0.7)","inventory (0.7)","security (0.7)","localization (0.6)","network (0.6)","roaming (0.6)","solution (0.5)"],"title":"Home Search, Where Art Thou?","wordpress_id":892,"uuid":"bf2285c9-4fb7-4b70-91ae-6721b67a1a32","filename":"2010-09-04-home-search-where-art-thou.markdown","slug":"home-search-where-art-thou","excerpt":"In my day to day life, there are few things I truly dislike doing: I'm a pretty happy person. There is one thing, though, that I really don't like - at all - and that strikes me as a truly pointless exercise in futility: searching. Shouldn't we have a solution for that by now?\n\nIt strikes me we already have all of the necessary technology to come up with a viable solution: I've worked with most of them! Let's have a look what this might look like.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/09/04/home-search-where-art-thou","locallink":"/blog/2010/09/04/home-search-where-art-thou","published":true},{"author":"rlc","categories":["Science Books"],"comments":true,"date":"2010-09-04T00:00:00.000Z","layout":"post","tags":["Stephen Hawking (1.0)","New book (0.8)","Hype (0.9)","CNN (0.7)","Science Books (0.8)","Wishlist (0.6)","Gravity (0.9)","Debate (0.7)","Metaphysics (0.8)","Philosophy (0.7)","Kant (0.6)","Cause and effect (0.8)","Universe (0.7)","Eleven dimensions (0.8)"],"title":"\"Given the existence of A, B will create itself, therefore, C had nothing to do with it\"","wordpress_id":908,"uuid":"83f2c4f0-99a4-42fe-bedb-0663e8081efc","filename":"2010-09-04-given-the-existence-of-a-b-will-create-itself-therefore-c-had-nothing-to-do-with-it.markdown","slug":"given-the-existence-of-a-b-will-create-itself-therefore-c-had-nothing-to-do-with-it","excerpt":"Stephen Hawking's new book promises a lot of hype. CNN Already published two separate articles about it on their site even though no-one has read it yet. I've added it to my [Amazon Science Books Wishlist](http://amzn.com/w/2NIU712R6L9YF), and will buy it when I come round to it unless some generous soul wants to offer it to me first. About the hype, though:\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/09/04/given-the-existence-of-a-b-will-create-itself-therefore-c-had-nothing-to-do-with-it","locallink":"/blog/2010/09/04/given-the-existence-of-a-b-will-create-itself-therefore-c-had-nothing-to-do-with-it","published":true},{"author":"rlc","categories":["Software Design","Encapsulation","Object-Oriented Design","Error Handling","Trade-offs","Security Context","Negotiation Process","Context Class","Credentials Class","Mechanism Class","Opaque Design","Maintainability","Distributed Architectures"],"comments":true,"date":"2010-09-01T00:00:00.000Z","layout":"post","tags":["design (1.0)","abstract factory (0.9)","encapsulation (1.0)","opacity (1.0)","advantages (0.8)","disadvantages (0.8)","mechanism (0.9)","credentials (0.9)","security context (0.8)","negotiation (0.9)","trade-offs (0.9)","user control (0.8)","error handling (0.8)"],"title":"Opacity: Encapsulation at its best (and worst)","wordpress_id":891,"uuid":"b716c171-d579-4ab1-8cdb-c4e57311ea51","filename":"2010-09-01-opacity-encapsulation-at-its-best-and-worst.markdown","slug":"opacity-encapsulation-at-its-best-and-worst","excerpt":"One thing you may have noticed when looking at the code of our abstract factory, is that the base classes (interfaces) of each of our abstract objects don't have much to tell their users: there are hardly any accessors or mutators to be found. This is an attribute of encapsulation called _opacity_ and in this installment, we'll explore its advantages and disadvantages.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/09/01/opacity-encapsulation-at-its-best-and-worst","locallink":"/blog/2010/09/01/opacity-encapsulation-at-its-best-and-worst","published":true},{"author":"rlc","categories":["Diversity","Gender Equality","Technology","Workplace Culture"],"comments":true,"date":"2010-08-13T00:00:00.000Z","layout":"post","tags":["Diversity (0.9)","Gender equality (0.8)","Women in computing (0.9)","Minorities in tech (0.7)","Inclusivity (0.8)","History of computing (0.7)","Ada Lovelace (0.6)","Grace Hopper (0.6)","Hedy Lamarr (0.6)","Mary Allen Wilkes (0.6)","Adele Goldberg (0.6)","Sally Floyd (0.6)","Object-oriented programming (0.7)","Quality assurance (0.6)","Firmware (0.6)","Gender stereotypes (0.7)"],"title":"Women in computing","wordpress_id":872,"uuid":"0e9aca5c-c488-4f2e-ad90-ed1d2610bdfb","filename":"2010-08-13-women-in-computing.markdown","slug":"women-in-computing","excerpt":"When I ran a team of R&D; programmers, a while ago, at one point, we had one person from a visible minority, one person with a slight handicap, two women, two immigrants (one of which was one of the two women, the other was me) and at least one phytopathologist (me). We beat most of the statistics with that team, because there were about ten of us at the time. One of the members of my team remarked that it was the first time he'd worked in a team with two women in it - and he had worked in larger teams before.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/08/13/women-in-computing","locallink":"/blog/2010/08/13/women-in-computing","published":true},{"author":"rlc","categories":["Technology","Mathematics","Communication","Error Detection"],"comments":true,"date":"2010-08-06T00:00:00.000Z","layout":"post","tags":["communication protocols (1.0)","error detection (1.0)","bit flipping (1.0)","serial protocols (1.0)","parity bits (1.0)","CRC checking (1.0)","reducing errors (1.0)"],"title":"Tell me twice","wordpress_id":865,"uuid":"1f40dffe-69d4-45b6-af79-20e48eccb84d","filename":"2010-08-06-tell-me-twice.markdown","slug":"tell-me-twice","excerpt":"A few days ago, I explained to a colleague why certain communications protocols have a \"tell me twice\" policy - i.e. to allow for any command to have any effect, the same command - or a command to the same effect - has to be received twice (from the same master). In human parlance, this would be the equivalent of Jean-Luc Picard saying \"ensign, I'm about to tell you to lower the shields\" ... \"ensign, shields down!\" in which the ensign (Wesley Crusher?) wouldn't be allowed to obey the second command unless he had heard, understood and acknowledged (HUA!) the first. Now for the math..\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/08/06/tell-me-twice","locallink":"/blog/2010/08/06/tell-me-twice","published":true},{"author":"rlc","categories":["Software Development","Contracting","Client Relations","Project Management","Embedded Systems","Firmware Development"],"comments":true,"date":"2010-08-03T00:00:00.000Z","layout":"post","tags":["software development (1.0)","contracts (0.9)","end-user applications (0.8)","embedded software (0.7)","firmware (0.6)","server software (0.5)","web services (0.4)","code quality (0.8)","client communication (0.7)","project management (0.6)","stakeholder involvement (0.5)"],"title":"Once burned, twice shy","wordpress_id":863,"uuid":"00c9ac5d-a3c8-4c14-8d4e-30f81a3c6b36","filename":"2010-08-03-once-burned-twice-shy.markdown","slug":"once-burned-twice-shy","excerpt":"\"[Is Good Code Possible?](http://raptureinvenice.com/?p=63)\" John Blanco asks on his blog. He goes on to tell a harrowing story on how he had to develop an iPhone app for a big retailer (\"Gorilla Mart\") in less than two weeks. Why he even accepted the contract is beyond me but then, he may not have had a choice.\n\nIn the scenario he described, there's really little chance of creating quality code, unless...\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/08/03/once-burned-twice-shy","locallink":"/blog/2010/08/03/once-burned-twice-shy","published":true},{"author":"rlc","categories":["Software Development","Computer Programming","Data Encapsulation","RAII (Resource Acquisition Is Initialization)"],"comments":true,"date":"2010-08-01T00:00:00.000Z","layout":"post","tags":["GSSAPI/SSPI (1.0)","Windows (1.0)","credentials (1.0)","data encapsulation (1.0)","abstract factory (1.0)","SSPI (1.0)","GSSAPI (1.0)","Mechanism (1.0)","RAII (1.0)","security (1.0)","headers (1.0)","MechanismFactory (1.0)","unit test (1.0)","auto_ptr (1.0)","Credentials (1.0)"],"title":"Socks 5: Credentials on Windows","wordpress_id":847,"uuid":"77bafb54-87e8-4acb-8177-cb1d2474022d","filename":"2010-08-01-socks-5-credentials-on-windows.markdown","slug":"socks-5-credentials-on-windows","excerpt":"In this installment, we will continue our implementation of GSSAPI/SSPI, this time on Windows, where we'll try to get some credentials.\n\nWe will look at two topics this time: first, we'll look at data encapsulation, after which we'll look at when RAII is a bit too much, and how to handle that.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/08/01/socks-5-credentials-on-windows","locallink":"/blog/2010/08/01/socks-5-credentials-on-windows","published":true},{"author":"rlc","categories":["Software Development","Testing","Code Coverage","Unit Testing"],"comments":true,"date":"2010-07-21T00:00:00.000Z","layout":"post","tags":["Coverage Profiling (1.0)","Unit Testing (0.9)","Code Coverage (0.9)","Debugging (0.8)","Software Testing (0.7)","Test Coverage (0.7)","ADT (0.6)","Bug Detection (0.6)","Path Tracing (0.5)","Code Analysis (0.5)"],"title":"On the Importance of Coverage Profiling","wordpress_id":844,"uuid":"d252977f-5f9a-4c81-ab4e-0f96ba551329","filename":"2010-07-21-on-the-importance-of-coverage-profiling.markdown","slug":"on-the-importance-of-coverage-profiling","excerpt":"Coverage profiling allows you to see which parts of the code have been run and are especially useful when unit-testing. Here's an anecdote to show just how important they can be.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/07/21/on-the-importance-of-coverage-profiling","locallink":"/blog/2010/07/21/on-the-importance-of-coverage-profiling","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2010-07-02T00:00:00.000Z","layout":"post","tags":["SSPI (1.0)","MechanismFactory (1.0)","Unicode (0.9)","ANSI (0.8)","RAII (0.7)","Overloading (0.6)","Windows (0.6)","Caching (0.6)","Testing (0.5)","Debugging (0.5)"],"title":"Socks 5: Expanding the factory","wordpress_id":810,"uuid":"382f86b4-23ce-4ffb-adb3-000ecff96e18","filename":"2010-07-02-expanding-the-factory.markdown","slug":"expanding-the-factory","excerpt":"In this installment, we will expand the `MechanismFactory` class for SSPI. We will take a slightly closer look at the SSPI call than we would normally do, and we will also take a look at the Unicode/\"ANSI\" differences on Windows. Because of this, we will _not_ have time to take a look at the GSS-API side of things, which we will therefore look into next time around.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/07/02/expanding-the-factory","locallink":"/blog/2010/07/02/expanding-the-factory","published":true},{"author":"rlc","categories":["Copyright Law"],"comments":true,"date":"2010-06-27T00:00:00.000Z","layout":"post","tags":["copyright (0.9)","TPM (0.8)","software (0.7)","digital rights (0.6)","TPM circumvention (0.8)","copyright owner (0.7)","technology protection measure (0.8)","software piracy (0.5)"],"title":"TPM on your content under #c32 - handing away your rights?","wordpress_id":799,"uuid":"c5280195-c434-4610-8f17-d5a0faeeab36","filename":"2010-06-27-tpm-on-your-content-under-c32-handing-away-your-rights.markdown","slug":"tpm-on-your-content-under-c32-handing-away-your-rights","excerpt":"Under bill C-32 it would be illegal to remove TPM under by far most circumstances. Does that mean that, if you decide to publish software you create with TPM, you're handing away the rights of your software to the TPM manufacturer? No, it doesn't.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/06/27/tpm-on-your-content-under-c32-handing-away-your-rights","locallink":"/blog/2010/06/27/tpm-on-your-content-under-c32-handing-away-your-rights","published":true},{"author":"rlc","categories":["Copyright Law"],"comments":true,"date":"2010-06-26T00:00:00.000Z","layout":"post","tags":["Appropriation Art Coalition (1.0)","TPM (1.0)","Public Domain (1.0)","Bill C-32 (1.0)","Copyright (0.8)","Digital Lock (0.7)","Legislation (0.6)","Copyright Holder (0.5)","Technological Protection Measure (0.5)"],"title":"TPM and the Public Domain (#c32)","wordpress_id":801,"uuid":"38976d53-d26b-4d2b-89a3-0705ccf9df7a","filename":"2010-06-26-tpm-and-the-public-domain-c32.markdown","slug":"tpm-and-the-public-domain-c32","excerpt":"Accroding to [The Appropriation Art Coalition](http://web.archive.org/web/20100120083653/http://www.appropriationart.ca/) applying TPM to public domain content effectively removes that content from the public domain. Is that really true? I don't think so, and here's why.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/06/26/tpm-and-the-public-domain-c32","locallink":"/blog/2010/06/26/tpm-and-the-public-domain-c32","published":true},{"author":"rlc","categories":["Software Development","Open Source Software","Copyright Law","Interoperability","Digital Rights Management (DRM)","Reverse Engineering"],"comments":true,"date":"2010-06-25T00:00:00.000Z","layout":"post","tags":["Free/Libre Open Source Software (1.0)","TPM (0.8)","Bill C-32 (0.8)","Copyright (0.7)","Interoperability (0.9)","Reverse-engineering (0.7)","DRM (0.8)","Media player (0.6)","Open source software (0.9)","Industry (0.6)"],"title":"Is TPM bad for Open Source? (#c32)","wordpress_id":795,"uuid":"76f4dc05-9484-410f-8b27-67c76a54fe3e","filename":"2010-06-25-is-tpm-bad-for-open-source-c32.markdown","slug":"is-tpm-bad-for-open-source-c32","excerpt":"It's been argued that TPM and bill C-32 are bad for Free/Libre Open Source Software development. Is that true? If so, why? If not, why not? Personally, I don't think so, and I'll tell you why.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/06/25/is-tpm-bad-for-open-source-c32","locallink":"/blog/2010/06/25/is-tpm-bad-for-open-source-c32","published":true},{"author":"rlc","categories":["Copyright legislation","Political debate","Digital rights management (DRM)","Technology and copyright","Social media and politics"],"comments":true,"date":"2010-06-24T00:00:00.000Z","layout":"post","tags":["Copyright reform (1.0)","Bill C-32 (0.8)","Conservative MP (0.7)","Canadian Heritage (0.6)","Official Languages (0.5)","James Moore (0.9)","Tony Clement (0.6)","Industry Minister (0.5)","June 2 (0.4)","Parliamentary democracy (0.7)","House of Commons (0.6)","Twitter (0.8)","C32 (0.4)","Digital locks (1.0)","Copyright legislation (0.8)","Michael Geist (0.9)","University of Ottawa (0.6)","Liberal (0.5)","NDP (0.5)","Bloc MPs (0.5)","House committee (0.5)","MPs (0.6)","Amendments (0.7)","DRM (0.9)","Cary Doctorow (0.7)","Digital locks provisions (0.8)","Copyright holders (0.6)","Apple (0.5)","Microsoft (0.5)","Google (0.5)","TiVo (0.5)","Tech companies (0.5)","Digital lock ban (0.6)","Digital lock breaking (0.7)","Media player (0.4)","Software industry (0.4)","Tone of the debate (0.7)","Flame-war (0.6)","Fair use (0.5)","Music industry (0.5)","DRM use (0.5)","Twitter rants (0.6)","Ann Douglas (0.7)"],"title":"Feedback on #C32: Constructive, Destructive or Pointless?","wordpress_id":783,"uuid":"fad7695c-2f64-4d81-a26c-f5d205e43fbb","filename":"2010-06-24-feedback-on-c32-constructive-destructive-or-pointless.markdown","slug":"feedback-on-c32-constructive-destructive-or-pointless","excerpt":"While some of the feed-back on bill C-32 (Copyright reform) seems to be constructive, much of it has become a foray of personal attacks on Conservative MP and Minister of Canadian Heritage and Official Languages, James Moore, who tabled the legislation with Tony Clement, Minister of Industry, on June 2. Of course, his [remarks](http://video.itworldcanada.com?bcpid=7044989001&bctid=101481423001) on the subject weren't very welcome either, calling opponents of the bill \"radical extremists\". So, the debate is on on what should probably be one of the more boring subjects in Ottawa: copyright legislation.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/06/24/feedback-on-c32-constructive-destructive-or-pointless","locallink":"/blog/2010/06/24/feedback-on-c32-constructive-destructive-or-pointless","published":true},{"author":"rlc","categories":["Copyright Law","Digital Rights Management (DRM)","Intellectual Property Rights","Technology and Innovation","Consumer Rights"],"comments":true,"date":"2010-06-23T00:00:00.000Z","layout":"post","tags":["podcast (0.9)","CBC (0.8)","bill C-32 (0.9)","copyright (0.9)","technological protection measures (0.9)","DRM (0.8)","Creative Commons (0.8)","licensing (0.8)","interoperability (0.7)","rights management information (0.8)"],"title":"Bill C-32","wordpress_id":771,"uuid":"b0483c1e-ecc1-4430-a1f1-7f08e2b7ba40","filename":"2010-06-23-bill-c-32.markdown","slug":"bill-c-32","excerpt":"A few days ago, I was listening to the podcast for the CBC program [Spark](http://www.cbc.ca/spark/2010/06/spark-116-june-6-8-2010/), in which they mentioned a new bill, bill C-32. They had a person on the show, whose name I do not remember, who said it was a very \"balanced\" bill. That peaked my interest, so I decided to read the bill myself.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/06/23/bill-c-32","locallink":"/blog/2010/06/23/bill-c-32","published":true},{"author":"rlc","categories":["Software Development","Programming","Design Patterns"],"comments":true,"date":"2010-06-17T00:00:00.000Z","layout":"post","tags":["Abstract Factory Pattern (1.0)","IPv6 (0.8)","GSS-API (0.9)","SSPI (0.9)","Binary Search Algorithm (0.7)","Windows Projects (0.6)","Mechanism Interface (0.8)","Mechanism Factory (0.8)"],"title":"Socks 5: Starting GSS-API - The Factory Pattern","wordpress_id":746,"uuid":"66a32619-3ba7-4904-830e-460d708caaca","filename":"2010-06-17-socks-5-starting-gss-api-the-factory-pattern.markdown","slug":"socks-5-starting-gss-api-the-factory-pattern","excerpt":"In this installment, we'll be doing a final bit of clean-up and starting to implement a GSS-API/SSPI client program, while focusing on the _Abstract Factory Pattern_\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/06/17/socks-5-starting-gss-api-the-factory-pattern","locallink":"/blog/2010/06/17/socks-5-starting-gss-api-the-factory-pattern","published":true},{"author":"rlc","categories":["Technology","Programming","Algorithms","Computational Complexity","Data Structures","Software Development"],"comments":true,"date":"2010-06-04T00:00:00.000Z","layout":"post","tags":["coding(0.9)","binary search(0.8)","algorithm(0.7)","efficiency(0.6)","complexity(0.6)","iterators(0.6)","equivalence(0.5)","equality(0.5)","sorting(0.5)","search space(0.5)"],"wordpress_id":730,"uuid":"747f19ee-f8e0-45ee-9732-50e91384db8f","filename":"2010-06-04-binary-search.markdown","slug":"binary-search","excerpt":"While going through some old code, for another article I'm writing that will come up on the blog, I came across an implementation of binary search in C. While the implementation itself was certainly OK, it wasn't exactly a general-purpose implementation, so I thought I'd write one and put it on the C++ for the self-taught side of my blog. While I was at it, I also analyzed\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/06/04/binary-search","locallink":"/blog/2010/06/04/binary-search","published":true},{"author":"rlc","categories":["Programming","Software Development","Concurrency","Testing","Open Source License"],"comments":true,"date":"2010-06-01T00:00:00.000Z","layout":"post","tags":["C/C++ (1.0)","Lock-poor stack (1.0)","Relacy (1.0)","Atomic operations (1.0)","Memory management (1.0)","GNU General Public License (1.0)","Thread safety (1.0)","Stack implementation (1.0)","Lock-free (1.0)","Reference management (1.0)","Testing (1.0)","Multithreading (1.0)"],"title":"Lock-Poor Stack","wordpress_id":713,"uuid":"396353f1-1faf-4533-b9d3-9de72b9239aa","filename":"2010-06-01-lock-poor-stack.markdown","slug":"lock-poor-stack","excerpt":"The following is the complete code of a lock-poor stack in C/C++: it's mostly C but it uses Relacy for testing, so the atomics are implemented in C++. With a little work, you can turn this into a complete C implementation without depending on relacy. I wrote in while writing an article that will soon appear on this blog.\n\nThe stack is not completely lock-free because it needs a lock to make sure it doesn't need any memory management solution for its reference to the top node during popping or reading the top node.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/06/01/lock-poor-stack","locallink":"/blog/2010/06/01/lock-poor-stack","published":true},{"author":"rlc","categories":["Physics","Technology","Science","Quantum Teleportation","TCP/IP","Networking"],"comments":true,"date":"2010-05-26T00:00:00.000Z","layout":"post","tags":["Physics (1.0)","Quantum teleportation (1.0)","China (1.0)","TCP/IP (1.0)","Heisenberg uncertainty principle (1.0)","Quantum state (1.0)","Probability (1.0)","TCP packet (1.0)","Destination (1.0)","Accuracy (1.0)"],"title":"Quantum teleportation achieved over 16 km","wordpress_id":661,"uuid":"ed69bcec-7950-48cc-8924-07caa712780c","filename":"2010-05-26-quantum-teleportation-achieved-over-16-km.markdown","slug":"quantum-teleportation-achieved-over-16-km","excerpt":"Recently, in [this report](http://www.physorg.com/news193551675.html), it's been reported that a physics laboratory in China achieved a new distance record in quantum teleportation: 16 km. That's quite a feat, considering that up until now, the max. distance had been a few hundred meters.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/05/26/quantum-teleportation-achieved-over-16-km","locallink":"/blog/2010/05/26/quantum-teleportation-achieved-over-16-km","published":true},{"author":"rlc","categories":["Education","Technology","Journalism","Economics","Politics"],"comments":true,"date":"2010-05-24T00:00:00.000Z","layout":"post","tags":["Albion College (0.9)","faculty reduction (0.8)","elimination of courses (0.7)","Computer Science (0.9)","Journalism (0.9)","career options (0.7)","formal training (0.6)","out-sourcing (0.8)","North American market (0.7)","specialized CS jobs (0.8)","financial motivation (0.6)","marketing problem (0.7)","Journalism importance (0.9)","globalization (0.7)","democracy (0.6)","insolvency (0.5)","irrelevance (0.5)"],"title":"Albion College decides to scrap Computer Science and Journalism majors","wordpress_id":657,"uuid":"f3906cca-a28d-4310-adc5-c9b0aa02bb64","filename":"2010-05-24-albion-college-decides-to-scrap-computer-science-and-journalism-majors.markdown","slug":"albion-college-decides-to-scrap-computer-science-and-journalism-majors","excerpt":"I came across this article while surfing the web this afternoon","permalink":"https://rlc.vlinder.ca/blog/2010/05/24/albion-college-decides-to-scrap-computer-science-and-journalism-majors","locallink":"/blog/2010/05/24/albion-college-decides-to-scrap-computer-science-and-journalism-majors","published":true},{"author":"rlc","categories":["Science","Biology","Genetics","Biotechnology","Computer Science","Ethics","Research","Medicine","Industry","Evolution","Creation","Genetic Engineering","Recombinant DNA","Ethical Implications","Human Genome"],"comments":true,"date":"2010-05-22T00:00:00.000Z","layout":"post","tags":["biology (0.9)","genetics (0.8)","DNA (0.8)","genome (0.8)","synthetic biology (0.7)","biotechnology (0.6)","genetic engineering (0.6)","microbiology (0.5)","computer science (0.4)","FPGA (0.4)","VHDL (0.4)","bacteria (0.4)","research (0.3)","technology (0.3)","ethics (0.3)","evolution (0.3)","creation (0.3)","science (0.2)","engineering (0.2)","genome sequencing (0.2)","transplantation (0.2)"],"title":"Creation of a Bacterial Cell Controlled by a Chemically Synthesized Genome","wordpress_id":648,"uuid":"f9f2746a-672c-4abd-af6e-ca3d1a33f6c3","filename":"2010-05-22-creation-of-a-bacterial-cell-controlled-by-a-chemically-synthesized-genome.markdown","slug":"creation-of-a-bacterial-cell-controlled-by-a-chemically-synthesized-genome","excerpt":"D.G. Gibson _et al._ [reported](http://www.sciencemag.org/cgi/content/abstract/science.1190719), in Science Magazine, the \"Creation of a Bacterial Cell Controlled by a Chemically Synthesized Genome\". Now, I used to be a biologist and have studied this particular type of biology for a number of years before leaving the field, mostly for financial reasons, for a career in computer science. I'm also a certifiable geek, as I think most of the readers of this blog are, so I thought I'd explain what this means, in geek terms.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/05/22/creation-of-a-bacterial-cell-controlled-by-a-chemically-synthesized-genome","locallink":"/blog/2010/05/22/creation-of-a-bacterial-cell-controlled-by-a-chemically-synthesized-genome","published":true},{"author":"rlc","categories":["Software Development","Programming","Code Implementation","Server Communication","Client Communication","Code Optimization","Code Refactoring","Error Handling","Race Conditions","Object Oriented Programming"],"comments":true,"date":"2010-05-16T00:00:00.000Z","layout":"post","tags":["implementation (0.9)","token (0.8)","client (0.7)","server (0.7)","code (0.6)","test (0.6)","sleep (0.5)","diff (0.5)","question (0.5)","race condition (0.5)","copy constructor (0.5)"],"title":"Socks 5: Finishing sending a token","wordpress_id":625,"uuid":"6e2f94cf-48f1-4862-8468-aaaee427f0eb","filename":"2010-05-16-socks-5-finishing-sending-a-token.markdown","slug":"socks-5-finishing-sending-a-token","excerpt":"In this installment, we will finish the implementation for sending a token from the client to the server. We will answer the remaining open questions and, in doing so, improve the code a bit more. When we're done, we will have a client that sends a token to the server, and a server that reads the token and parses its envelope - which is a pretty good foundation to build on. We will later make that foundation a bit more solid by removing the classes involved from the test code and moving them to their final locations. First, however, let's take a look at those questions and the answers.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/05/16/socks-5-finishing-sending-a-token","locallink":"/blog/2010/05/16/socks-5-finishing-sending-a-token","published":true},{"author":"rlc","categories":["Project Management"],"comments":true,"date":"2010-05-07T00:00:00.000Z","layout":"post","tags":["project management (0.9)","software productivity (0.8)","waste reduction (0.7)","time management (0.6)","software development (0.6)","tools optimization (0.5)","resource allocation (0.5)","bug fixing (0.5)","unit testing (0.8)","code review (0.7)","functional testing (0.8)","test prioritization (0.6)","smoke testing (0.6)","deep testing (0.6)","exhaustive testing (0.5)","developer productivity (0.7)","quality assurance (0.6)","management decisions (0.5)","team productivity (0.5)","developer selection (0.5)"],"title":"Software development productivity","wordpress_id":621,"uuid":"dc70cb11-0774-4f6e-82cc-c4e239eaee4f","filename":"2010-05-07-software-development-productivity.markdown","slug":"software-development-productivity","excerpt":"In the latest installment of my podcast, I asserted that \"all software productivity problems are project management problems\". In this post, I will explain why I believe that to be the case and how I think those problems can be resolved.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/05/07/software-development-productivity","locallink":"/blog/2010/05/07/software-development-productivity","published":true},{"author":"rlc","categories":["Language and Linguistics","Coding Standards","Cultural Differences","National Identity","Corporate Policies","Quebec Language Laws"],"comments":true,"date":"2010-05-04T00:00:00.000Z","layout":"post","tags":["language diversity (0.9)","coding standards (0.8)","francophone (0.7)","anglophone (0.7)","ASCII encoding (0.6)","franglais (0.6)","Quebec (0.5)","corporate policies (0.5)","language laws (0.5)","cultural differences (0.4)","multilingualism (0.4)","national identity (0.4)","Spock (0.3)","Star Trek (0.3)"],"title":"Speaking different languages","wordpress_id":590,"uuid":"e67e1fd3-91dc-40c4-850f-6b2cb2318f3c","filename":"2010-05-04-speaking-different-languages.markdown","slug":"speaking-different-languages","excerpt":"As a dutchman living in Quebec, Canada - one of those parts of the world where francophones (french-speaking people) are surrounded by anglophones (english-speaking people) and yet thrive speaking french almost exclusively - I sometimes run into the \"corner cases\" of language related coding standards - e.g. the language comments are supposed to be written in.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/05/04/speaking-different-languages","locallink":"/blog/2010/05/04/speaking-different-languages","published":true},{"author":"rlc","categories":["Software Development","Project Management","Productivity"],"comments":true,"date":"2010-05-01T00:00:00.000Z","layout":"post","tags":["Podcast (1.0)","Programmer (0.8)","Header files (0.9)","Forward declarations (1.0)","Preprocessor (0.7)","Compile times (0.9)","Development team (0.8)","Project management (1.0)","Productivity (0.9)","Software projects (0.8)"],"title":"Socks 5: Continuing Sending a Token - Anecdote","wordpress_id":584,"uuid":"712e1877-922a-4d7c-b281-cb3885aa9399","filename":"2010-05-01-socks-5-continuing-sending-a-token-anecdote.markdown","slug":"socks-5-continuing-sending-a-token-anecdote","excerpt":"Recording the latest episode of the podcast reminded me of a story that I'd like to tell you: a few years ago, I started working as a programmer on a project in which there was a policy to include the definitions of the classes used in a header - by including the headers that defined those classes - rather than what I recommended in the podcast: to use forward declarations. They also had a policy to use only the name of the file to include rather than the complete path (e.g. `#include \"MyClass.h\"` rather than `#include \"path/to/MyClass.h\"`). The reason for this was convenience: the preprocessor, when told where to look, would find the proper files and including them in the class' header meant you didn't have to use dynamic allocation (of which there was still a lot going on in the project) but you could use the objects directly, rather than references and pointers.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/05/01/socks-5-continuing-sending-a-token-anecdote","locallink":"/blog/2010/05/01/socks-5-continuing-sending-a-token-anecdote","published":true},{"author":"rlc","categories":["Podcasts","Coding","Audience engagement"],"comments":true,"date":"2010-04-20T00:00:00.000Z","layout":"post","tags":["Podcast (0.9)","Downloads (0.8)","Audience (0.7)","Thankful (0.6)","Coding (0.5)","Server (0.4)","Audience growth (0.3)","Appreciation (0.2)","Podcasting (0.1)"],"title":"Did I say 5000? Make that 14000(!)","wordpress_id":563,"uuid":"11b45b92-c72d-4b69-b5a8-889dc00a9a0e","filename":"2010-04-20-did-i-say-5000-make-that-14000.markdown","slug":"did-i-say-5000-make-that-14000","excerpt":"","permalink":"https://rlc.vlinder.ca/blog/2010/04/20/did-i-say-5000-make-that-14000","locallink":"/blog/2010/04/20/did-i-say-5000-make-that-14000","published":true},{"author":"rlc","categories":["Software Development","Networking","Programming","Namespace","RAII","State Machine","Serialization","Deserialization","BSD Sockets","TCP Protocol","Multithreading","Code Review","Error Handling","Porting to Windows"],"comments":true,"date":"2010-04-16T00:00:00.000Z","layout":"post","tags":["programming (9.0)","implementation (8.5)","RFC 1961 (8.0)","GSS API (7.5)","namespaces (7.0)","Token class (6.5)","serialization (6.0)","deserialization (5.5)","network programming (5.0)","RAII (4.5)","BSD sockets (4.0)","state machine (3.5)","functor (3.0)","multithreading (2.5)","C++ (2.0)","code review (1.5)","porting (1.0)"],"title":"SOCKS 5 Step 2: exchanging a token","wordpress_id":534,"uuid":"b3809bff-5b10-4235-8d87-60d89f689dd6","filename":"2010-04-16-socks-5-step-2-exchanging-a-token.markdown","slug":"socks-5-step-2-exchanging-a-token","excerpt":"With a few minor adjustments to the existing `Token` class, we can finish the first part of our implementation of RFC 1961 for now - we will hook it into an implementation of the GSS API later.","permalink":"https://rlc.vlinder.ca/blog/2010/04/16/socks-5-step-2-exchanging-a-token","locallink":"/blog/2010/04/16/socks-5-step-2-exchanging-a-token","published":true},{"author":"rlc","categories":["Podcasts","Statistics","Downloads","Popularity","Feedback"],"comments":true,"date":"2010-03-27T00:00:00.000Z","layout":"post","tags":["podcast (0.9)","statistics (0.8)","downloads (0.8)","popularity (0.7)","feedback (0.6)","improvement (0.6)","blog (0.5)","comments (0.5)","listener (0.4)","reply (0.3)"],"title":"Thanks for listening - 5000+ downloads","wordpress_id":526,"uuid":"a9092da5-1a4d-463e-bb2a-6c2da81e243f","filename":"2010-03-27-thanks-for-listening-5000-downloads.markdown","slug":"thanks-for-listening-5000-downloads","excerpt":"","permalink":"https://rlc.vlinder.ca/blog/2010/03/27/thanks-for-listening-5000-downloads","locallink":"/blog/2010/03/27/thanks-for-listening-5000-downloads","published":true},{"author":"rlc","categories":["Software Development","Programming","Operating Systems","Version Control","Integrated Development Environments"],"comments":true,"date":"2010-03-16T00:00:00.000Z","layout":"post","tags":["software (1.0)","compiling (1.0)","Windows (0.8)","Linux (0.8)","Debian (0.7)","Git (0.9)","version control (0.8)","IDE (0.7)","Microsoft Visual Studio (0.7)","Eclipse (0.7)","MinGW (0.8)","Cygwin (0.7)","prerequisites (0.9)","SDK (0.8)","free software (0.8)","portable (0.7)","compiler (0.7)","libraries (0.7)"],"title":"Preprequisites for the project","wordpress_id":481,"uuid":"2c44579a-4a40-412c-9d81-3c02a73854f2","filename":"2010-03-16-preprequisites-for-the-project.markdown","slug":"preprequisites-for-the-project","excerpt":"In this installment, we'll get you set up to compile everything that needs compiling in our project. We'll try to keep it short and sweet and you'll be able to download most of what you need just by following the links on this page.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/03/16/preprequisites-for-the-project","locallink":"/blog/2010/03/16/preprequisites-for-the-project","published":true},{"author":"rlc","categories":["Software Development","Requirements Engineering","Use Cases","Functional Requirements"],"comments":true,"date":"2010-03-01T00:00:00.000Z","layout":"post","tags":["use-cases (1.0)","functional requirements (0.9)","project (0.8)","writing (0.7)","user requirements (0.7)","UML (0.6)","stakeholders (0.6)","error handling (0.6)","design (0.5)","actors (0.5)","goals (0.5)","requirements engineering (0.5)","guarantees (0.5)","user stories (0.5)","modeling (0.4)"],"title":"Use-Cases Part 3: What A Use-Case Really Is & Writing Use-Cases","wordpress_id":391,"uuid":"1412bd06-7eb7-4621-b2a4-72a87219ba99","filename":"2010-03-01-use-cases-part-3-what-a-use-case-really-is.markdown","slug":"use-cases-part-3-what-a-use-case-really-is","excerpt":"Before we start using use-cases in the description of the functional requirements we want to meet in our project, we need to understand what a use-case really is and how to go about writing one. In this installment I will attempt to answer both those questions. However, this series is called \"C++ for the self-taught\" for a reason: I will include references for all of the material I have cited in this installment, and I hope you will take it upon yourself to go out and look a bit yourself as well.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/03/01/use-cases-part-3-what-a-use-case-really-is","locallink":"/blog/2010/03/01/use-cases-part-3-what-a-use-case-really-is","published":true},{"author":"rlc","categories":["Software Development Models","Object-Oriented Programming","Agile Development Methods","Use-Cases","Software Engineering Education","Constructivism"],"comments":true,"date":"2010-02-16T00:00:00.000Z","layout":"post","tags":["Software Development (1.0)","Waterfall Model (0.8)","Object-Oriented Programming (0.7)","C++ (0.5)","Agile Programming (0.9)","User Requirements (0.8)","Use-Cases (1.0)","UML (0.6)","Agile Manifesto (0.7)","Self-Managed Teams (0.6)","Functional Decomposition (0.5)","Constructivism (0.8)"],"title":"Use-Cases Part 2: What Use-Cases Are For (The history, present and future of use-cases)","wordpress_id":388,"uuid":"3aaea408-029a-4e60-8922-3d06a1565638","filename":"2010-02-16-use-cases-part-2-what-use-cases-are-for-the-history-present-and-future-of-use-cases.markdown","slug":"use-cases-part-2-what-use-cases-are-for-the-history-present-and-future-of-use-cases","excerpt":"In the late 1980s and early 1990s, the \"waterfall\" software development model, which had been around (with that name) since the 1970s (see, for example, Boehm, B.W. Software engineering. IEEE 7~ans Comput. C-25, (1976), 1226-1241) was starting to be progressively \"refined\". When that happens, it usually means that there are problems with the model that need to be addressed - or the model will crumble and fall. Object-oriented programming was becoming more or less main-stream and early versions of C++ were cropping up. \"Good practice\" documents for programming on non-OO languages started to stress the use of OO-like APIs and soon enough, object-oriented programming would no longer be a mere buzzword.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/02/16/use-cases-part-2-what-use-cases-are-for-the-history-present-and-future-of-use-cases","locallink":"/blog/2010/02/16/use-cases-part-2-what-use-cases-are-for-the-history-present-and-future-of-use-cases","published":true},{"author":"rlc","categories":["Programming","Computer Science","Software Development","C++ Language","Coding Standards"],"comments":true,"date":"2010-02-05T00:00:00.000Z","layout":"post","tags":["programming (0.9)","C++ (0.8)","bugs (0.7)","constructors (0.7)","initialization (0.7)","variables (0.6)","classes (0.6)","pointers (0.5)","compiler (0.5)","coding habits (0.4)"],"title":"The answer to the quiz in episode 7 of C++ for the self-taught","wordpress_id":463,"uuid":"6b15b4fb-d802-4482-b704-3413adce29cd","filename":"2010-02-05-the-answer-to-the-quiz-in-episode-7-of-c-for-the-self-taught.markdown","slug":"the-answer-to-the-quiz-in-episode-7-of-c-for-the-self-taught","excerpt":"I know you must have been aching for the response to the quiz from three weeks ago. If you haven't thought of your own answer yet, go back to the code and have another look. Try running it through a compiler with all the warnings turned on - it might tell you what the bug is (more or less), but probably not how to solve it.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/02/05/the-answer-to-the-quiz-in-episode-7-of-c-for-the-self-taught","locallink":"/blog/2010/02/05/the-answer-to-the-quiz-in-episode-7-of-c-for-the-self-taught","published":true},{"author":"rlc","categories":["Software Development","Programming","Agile Development","User Stories","Use Cases","UML Diagrams"],"comments":true,"date":"2010-02-01T00:00:00.000Z","layout":"post","tags":["C++ (0.8)","self-taught (0.7)","project (0.9)","use-case (1.0)","UML (0.6)","stakeholders (0.8)","user stories (0.9)","agile development (0.7)","actors (0.6)","cryptography (0.5)","malicious users (0.6)","communication (0.8)","design (0.8)","solution (0.8)"],"title":"Use-Cases Part 1: Introduction & Ingredients","wordpress_id":383,"uuid":"3433a18d-1975-4557-98f6-3650ccace786","filename":"2010-02-01-use-cases-part-1-introduction-ingredients.markdown","slug":"use-cases-part-1-introduction-ingredients","excerpt":"In the \"C++ for the self-taught\" series, we're about to embark on a new project. In order to describe that project and in order to figure out what we want the result of that project will be, we will be using a tool called the use-case. So, I think an intermezzo on use-cases is in order.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/02/01/use-cases-part-1-introduction-ingredients","locallink":"/blog/2010/02/01/use-cases-part-1-introduction-ingredients","published":true},{"author":"rlc","categories":["Programming","Software development","Compiler errors"],"comments":true,"date":"2010-01-19T00:00:00.000Z","layout":"post","tags":["compiler (0.9)","confusion (0.8)","error (0.9)","macro (0.7)","warning (0.8)","parameters (0.8)","function (0.8)"],"title":"Confusing the compiler","wordpress_id":454,"uuid":"64c14163-1a55-4518-8368-3dfcc751f4a2","filename":"2010-01-19-confusing-the-compiler.markdown","slug":"confusing-the-compiler","excerpt":"Sometimes it's real fun to see how easily you can confuse the compiler. In the error below, `function` is a macro that takes three parameters:\n\n    filename.c(453) : error C2220: warning treated as error - no 'object' file generated\n    filename.c(453) : warning C4013: 'function' undefined; assuming extern returning int\n    filename.c(466) : error C2064: term does not evaluate to a function taking 279509856 arguments\n\nI don't know where it got the idea that I typed **279,509,856** parameters, but I sure didn't take the time to do that! ;)","permalink":"https://rlc.vlinder.ca/blog/2010/01/19/confusing-the-compiler","locallink":"/blog/2010/01/19/confusing-the-compiler","published":true},{"author":"rlc","categories":["Programming","Error Handling","Software Development","C++","C","Exception Handling","State Machines","C Libraries","Debugging","Resource Management","Exception Handling in C"],"comments":true,"date":"2010-01-16T00:00:00.000Z","layout":"post","tags":["programming (0.9)","C++ (0.8)","error handling (0.9)","exceptions (0.8)","C (0.7)","RTTI (0.6)","return values (0.7)","state machine (0.8)","OpenSSL (0.7)","setjmp (0.6)","longjmp (0.6)"],"title":"Error handling in C","wordpress_id":441,"uuid":"28c38263-73ba-4922-8f67-e5119084e4d2","filename":"2010-01-16-error-handling-in-c.markdown","slug":"error-handling-in-c","excerpt":"One of the things I do as a analyst-programmer is write software - that would be the \"programmer\" part. I usually do that in C++ but, sometimes, when the facilities of C++ aren't available (e.g. no exception handling and no RTTI) C becomes a more obvious choice. When that happens, RTTI is not the thing I miss the most - you can get around that using magic numbers if you need to. Exceptions, on the other hand, become a very painful absence when you're used to using them.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/01/16/error-handling-in-c","locallink":"/blog/2010/01/16/error-handling-in-c","published":true},{"author":"rlc","categories":["Object-Oriented Programming","C++","Inheritance","Polymorphism","Virtual Keyword"],"comments":true,"date":"2010-01-16T00:00:00.000Z","layout":"post","tags":["development project (1.0)","C++ type system (0.9)","object-oriented programming (0.8)","virtual keyword (0.7)","class inheritance (0.6)","UML diagram (0.5)","Run-Time Type Information (0.5)","cast operators (0.4)","virtual keyword (0.7)","polymorphism (0.9)","graphical user interface (0.6)"],"title":"7- Polymorphism","wordpress_id":365,"uuid":"9a7442e8-a3d8-4ef4-9f50-57b2f966d4ef","filename":"2010-01-16-7-polymorphism.markdown","slug":"7-polymorphism","excerpt":"In this last installment before we start our development project (and yes, there is a development project coming) we will talk a bit about the C++ type system, how to use it, how it ties in with object-oriented programming and how it ties in with what we've discussed earlier. We will see what the `virtual` keyword is all about, and how \"a duck is a bird, is an animal\" and \"a table and a chair are both pieces of furniture\" comes into play, and is expressed in C++. Once we've gone through that, you'll be sufficiently equipped for object-oriented programming in C++.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/01/16/7-polymorphism","locallink":"/blog/2010/01/16/7-polymorphism","published":true},{"author":"rlc","categories":["Software Development","Source Code Management","Version Control Systems","Distributed Versioning Tools","Documentation Management","Integrated Development Environments","Hardware Management"],"comments":true,"date":"2010-01-08T00:00:00.000Z","layout":"post","tags":["software development (1.0)","source code (0.9)","documentation (0.8)","integrated development environment (IDE) (0.7)","hardware (0.6)","intellectual property (0.5)","version management system (0.5)","distributed versioning tool (0.5)","security (0.4)","distributed software development (0.4)","binary files (0.3)","game development (0.3)","version control system (0.3)","Wiki (0.3)","Mediawiki (0.3)","SharePoint (0.3)","collaboration (0.3)","Visual Studio (0.3)","Eclipse (0.3)","C++ (0.3)","Java (0.3)","hardware manipulation (0.2)","custom hardware (0.2)","remote work (0.2)","software tools (0.2)","team collaboration (0.2)"],"title":"Distributed Software Development Part 3: Tools Of The Trade","wordpress_id":439,"uuid":"ff7961d4-d8cd-478e-8a26-f1821a0afef8","filename":"2010-01-08-distributed-software-development-part-3-tools-of-the-trade.markdown","slug":"distributed-software-development-part-3-tools-of-the-trade","excerpt":"For software development, there are a few things we need on a daily basis: our source code, our documentation, our integrated development environment (IDE) and our hardware. Without any one of these, a software developer is as useless as... well... something very useless.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/01/08/distributed-software-development-part-3-tools-of-the-trade","locallink":"/blog/2010/01/08/distributed-software-development-part-3-tools-of-the-trade","published":true},{"author":"rlc","categories":["Programming","Software Development","C++","Memory Management","Resource Allocation","Resource Deallocation","Pointers","Smart Pointers","Constructor","Destructor","RAII (Resource Acquisition Is Initialization)"],"comments":true,"date":"2010-01-01T00:00:00.000Z","layout":"post","tags":["C++ (1.0)","Garbage Collector (0.8)","Resource Allocation (0.9)","Resource Deallocation (0.9)","New Keyword (0.7)","Delete Keyword (0.7)","Pointers (0.9)","Smart Pointers (0.9)","Constructor (0.9)","Destructor (0.9)","RAII (0.9)","Debugging (0.8)","Pass by Value (0.7)","Pass by Reference (0.7)","Auto_ptr (0.8)","Ownership (0.8)","Memory Leak (0.8)","Valgrind (0.8)"],"title":"6- Resource Allocation and RAII","wordpress_id":303,"uuid":"03f52f19-19a1-4c87-a42a-88e084aa69ab","filename":"2010-01-01-3-resource-allocation-and-raii.markdown","slug":"3-resource-allocation-and-raii","excerpt":"In standard C++, there is no garbage collector: there is no built-in mechanism that will magically clean up after you if you make a mess. You do, however, have the possibility to allocate resources, such as memory or files, and work with them. You should, therefore, be able to manage them consistently so you don't \"leak\" them.\n\n","permalink":"https://rlc.vlinder.ca/blog/2010/01/01/3-resource-allocation-and-raii","locallink":"/blog/2010/01/01/3-resource-allocation-and-raii","published":true},{"author":"rlc","categories":["Technology","Economics","Business","Software Development","Globalization","Communication"],"comments":true,"date":"2009-12-24T00:00:00.000Z","layout":"post","tags":["Peak oil (0.9)","Climate change (0.8)","Economic realities (0.7)","Computing industry (0.6)","Distributed software development (0.9)","Outsourcing (0.8)","Linux kernel (0.5)","Open-source projects (0.6)","Profit (0.7)","Economical aspects (0.6)","Software development (0.6)","Business (0.7)","Hardware (0.6)","Software (0.6)","Communication (0.8)","Digital communication (0.7)","Technology (0.6)","Telepresence (0.7)","Scientific knowledge (0.6)","Technological know-how (0.6)","Quality of life (0.7)","Profit margin (0.6)"],"title":"Distributed Software Development Part 1: The Safe Boom","wordpress_id":431,"uuid":"f23b85b7-0c5b-4e39-a602-ca3ad375075d","filename":"2009-12-24-distributed-software-development-the-safe-boom.markdown","slug":"distributed-software-development-the-safe-boom","excerpt":"As I said in [a previous post](/blog/2009/12/staring-into-the-depths-of-the-yet-unwritten), the new economic realities that come with peak oil and climate change will change the way we work and the way the computing industry is run. One of those changes will be limiting unnecessary costs related to moving people around - something we already do for goods.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/12/24/distributed-software-development-the-safe-boom","locallink":"/blog/2009/12/24/distributed-software-development-the-safe-boom","published":true},{"author":"rlc","categories":["Business Management","Human Resources","Agile Development","Performance-based Pay","Remote Work","Project Management"],"comments":true,"date":"2009-12-24T00:00:00.000Z","layout":"post","tags":["Management (0.9)","Cost reduction (0.8)","Time-to-market (0.8)","Human resources (0.7)","Performance evaluation (0.6)","Promotion (0.6)","Agile development (0.7)","Team dynamics (0.6)","Remote work (0.8)","Goal setting (0.6)","Deadline management (0.7)","Workplace flexibility (0.7)","Project management tools (0.6)"],"title":"Distributed Software Development Part 2: Management Challenges","wordpress_id":434,"uuid":"95aa9e86-704a-44c8-9bac-ee205025000c","filename":"2009-12-24-distributed-software-development-part-2.markdown","slug":"distributed-software-development-part-2","excerpt":"Business is largely about management which, in turn, is largely about reducing costs and reducing time-to-market. However, today's management models for human resources are largely based on two things: physical presence in the office and seniority. Performance is often only part of the equation when it comes to promotion - people tend to get promoted upto their level of incompetence - and bonuses. In the software industry, however, management models are changing towards a more participatory model in which managers have less and less to say on the \"how\", the \"who\" and the \"when\" of the development process but, in return, get more say in the \"what\" - the customer gets to say \"why\". In some forms of agile development, team members can even be \"voted off the island\", which can be very disconcerting indeed for the manager.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/12/24/distributed-software-development-part-2","locallink":"/blog/2009/12/24/distributed-software-development-part-2","published":true},{"author":"rlc","categories":["Programming Concepts"],"comments":true,"date":"2009-12-16T00:00:00.000Z","layout":"post","tags":["pointers (0.9)","references (0.9)","confusion (0.8)","stack (0.7)","heap (0.7)","objects (0.7)","constructors (0.7)","destructors (0.7)","NULL (0.6)","ownership (0.6)","special value (0.6)","memory (0.5)","validation (0.5)","legacy code (0.5)","dereferencing (0.5)","construct (0.5)","destroy (0.5)","initialize (0.5)","allocation (0.5)","smart (0.5)","understand (0.5)","copy (0.5)","pass objects (0.5)"],"title":"5- Objects, References and Pointers","wordpress_id":326,"uuid":"2a453c52-9372-4aab-af49-e86bbb34f7b7","filename":"2009-12-16-3-objects-references-and-pointers.markdown","slug":"3-objects-references-and-pointers","excerpt":"The difference between references and pointers, what they are w.r.t. pointers and how to handle each has often been the source of confusion, sometimes even for seasoned programmers and often for formally trained, inexperienced programmers. Very often, especially in legacy code, I find one if the ugliest constructs imaginable: a function that returns a reference that is the result of dereferencing a pointer, if which the address is subsequently taken to validate its value. Ugh!\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/12/16/3-objects-references-and-pointers","locallink":"/blog/2009/12/16/3-objects-references-and-pointers","published":true},{"author":"rlc","categories":["Environment","Technology","Economics","Communication","Work trends"],"comments":true,"date":"2009-12-06T00:00:00.000Z","layout":"post","tags":["environmental impact (0.9)","peak oil (0.8)","polar bears (0.7)","smart grid (0.6)","electric cars (0.6)","communication technology (0.6)","work from home (0.6)","cost of living (0.5)","local consumption (0.5)","employee productivity (0.5)","home office (0.5)","communication tools (0.5)","virtual meetings (0.5)","redundant communication (0.5)","remote work (0.5)"],"title":"Staring into the depths of the yet unwritten","wordpress_id":422,"uuid":"4c215902-641b-4db1-8539-6c78849c7a56","filename":"2009-12-06-staring-into-the-depths-of-the-yet-unwritten.markdown","slug":"staring-into-the-depths-of-the-yet-unwritten","excerpt":"By the end of the next decade, there will be no oil left for consumers such as myself and we'll have reached peak oil.\nBy the end of the decade after that, the last wild polar bear will have drowned because there will be [no polar ice left for it to walk on](https://web.archive.org/web/20091202152216/http://arctic.atmos.uiuc.edu/cryosphere/), it will have been shot by some-one up North as it entered a home looking for food, or it will have died of starvation after eating the last of its cubs.\nBy the end of my expected natural life-span, there will be no edible fish left in the ocean.\n\nThese statements, which are corroborated by leading economist and, for the one about the polar ice cap, meteorologists rather than environmentalists, have a profound impact on the way we work and on the computing industry in general.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/12/06/staring-into-the-depths-of-the-yet-unwritten","locallink":"/blog/2009/12/06/staring-into-the-depths-of-the-yet-unwritten","published":true},{"author":"rlc","categories":["Object-Oriented Programming","Data Structures","Pointers","References","Objects","RAII"],"comments":true,"date":"2009-12-01T00:00:00.000Z","layout":"post","tags":["object-oriented programming (1.0)","class (1.0)","data structures (0.8)","pointers (0.8)","references (0.8)","objects (0.8)","RAII (0.8)","functions (0.7)","inheritance (0.9)","polymorphism (0.8)","abstract (0.7)","base class (0.7)","constructor (0.7)","member functions (0.7)","getters (0.7)","setters (0.7)","minimalism (0.8)","Furniture (0.7)","C++ (0.6)"],"title":"4- Classes","wordpress_id":351,"uuid":"72585e9b-a850-4308-b57d-65783ea237ae","filename":"2009-12-01-4-classes.markdown","slug":"4-classes","excerpt":"In any language that supports object-oriented programming, the class is a, if not the, basic building block. In this post, we'll take a closer look at what a class is, and how that ties in with what we've seen in the previous post, data structures, and in the two next posts: pointers, references, objects and RAII.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/12/01/4-classes","locallink":"/blog/2009/12/01/4-classes","published":true},{"author":"rlc","categories":["Software Development","Version Control Systems","Project Management","Productivity","Technology"],"comments":true,"date":"2009-11-21T00:00:00.000Z","layout":"post","tags":["Microsoft (0.9)","Team Foundation Server (TFS) (0.9)","Multi-tasking (0.7)","Productivity (0.6)","Version Control (0.8)","Git (0.8)","Centralized System (0.6)","User Interface (0.7)","Development Team (0.6)","Efficiency (0.7)"],"title":"Microsoft Team Foundation Server vs Git","uuid":"b13cd839-deb1-41b7-b01f-0430f7a036c2","filename":"2009-11-21-microsoft-team-foundation-server-vs-git.markdown","slug":"microsoft-team-foundation-server-vs-git","excerpt":"For the last few weeks, and in the coming months, I've had to (and will have to) work with Microsoft's Team Foundation Server (TFS).\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/11/21/microsoft-team-foundation-server-vs-git","locallink":"/blog/2009/11/21/microsoft-team-foundation-server-vs-git","published":true},{"author":"rlc","categories":["Business","Technology","Communication"],"comments":true,"date":"2009-11-17T00:00:00.000Z","layout":"post","tags":["implicit knowledge (0.9)","RFID technology (0.8)","line-of-sight machine-readable codes (0.8)","barcodes (0.7)","Data Matrix codes (0.6)","UPC-12 codes (0.6)","biometric data (0.7)","travel documents (0.7)","requirements specifications (0.9)","mis-communication (0.8)","explicit requirements (0.8)","verification and validation (0.8)"],"title":"Implicit, Contextual Requirements","wordpress_id":379,"uuid":"e3eb27eb-ad8d-4780-a733-e1842a53028d","filename":"2009-11-17-implicit-contextual-requirements.markdown","slug":"implicit-contextual-requirements","excerpt":"We tend to forget what we know implicitly: if we've been working in the same domain for long enough, we tend to forget that not everybody knows the same things and has the same experience we do. For example, some-one who has been working in distribution for a long time may think it's obvious that, even if you do switch to RFID, you will still need line-of-sight machine-readable codes (because RFID might fail and because the technology for using line-of-sight machine-readable codes is much mire ubiquitous than RFID is) and when they think of line-of-sight machine-readable codes, they think of barcodes and, depending on what and where they distribute, they might think of Data Matrix codes, UPC-12 codes, or any number of other barcodes.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/11/17/implicit-contextual-requirements","locallink":"/blog/2009/11/17/implicit-contextual-requirements","published":true},{"author":"rlc","categories":["Programming","Software Development","Work-Life Balance","Parenting","Podcasting","Blogging"],"comments":true,"date":"2009-11-17T00:00:00.000Z","layout":"post","tags":["CBC Radio (1.0)","typical day (0.8)","non-developers (0.7)","aspiring developers (0.6)","analyst-programmer (0.9)","functional requirements (0.8)","software design (0.7)","teamwork (0.9)","project management (0.7)","peer reviews (0.6)","scrum (0.8)","work-life balance (0.7)","podcasts (0.8)","programming (0.9)","analyst (0.7)"],"title":"A Day In The Life Of A C++ Analyst/Programmer","wordpress_id":375,"uuid":"f27c21fe-5273-4b28-abbc-de079d1006f2","filename":"2009-11-17-a-day-in-the-life-of-a-c-analystprogrammer.markdown","slug":"a-day-in-the-life-of-a-c-analystprogrammer","excerpt":"While listening to Spark, on CBC Radio, I had the idea it might be nice for non-developers (and aspiring developers) to know what a typical day might look like.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/11/17/a-day-in-the-life-of-a-c-analystprogrammer","locallink":"/blog/2009/11/17/a-day-in-the-life-of-a-c-analystprogrammer","published":true},{"author":"rlc","categories":["Programming","Object-oriented programming","Data structures","C++ programming language","Structures","Functions"],"comments":true,"date":"2009-11-16T00:00:00.000Z","layout":"post","tags":["object-oriented programming (1.0)","data (0.8)","programming languages (0.7)","C++ (0.6)","struct (0.9)","structure (0.8)","Plain Old Data (0.7)","variable (0.6)","class (0.5)","function overloading (0.9)"],"title":"3- Data Structures","wordpress_id":340,"uuid":"db4fe553-d414-4357-acbd-bbfc48edca7c","filename":"2009-11-16-x-data-structures.markdown","slug":"x-data-structures","excerpt":"Before we delve into the realm of object-oriented programming (which we will get into in the next post), there is a notion that is so basic, and so important to any type of programming, that we have to treat it in order to make the whole notion of object-oriented-programming comprehensible.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/11/16/x-data-structures","locallink":"/blog/2009/11/16/x-data-structures","published":true},{"author":"rlc","categories":["Software Engineering","Quality Assurance","Testing","Programming Languages","Operating Systems","Embedded Systems","Legacy Systems","Human Factors","Software Development Tools"],"comments":true,"date":"2009-11-11T00:00:00.000Z","layout":"post","tags":["software engineering (1.0)","high-quality software (0.9)","tools (0.8)","systems (0.7)","procedures (0.6)","processes (0.6)","software quality (0.9)","testing (0.8)","IEEE Transactions on Software Engineering (0.7)","hardware architectures (0.6)","Intel's IA-32 (x86) architecture (0.5)","Windows (0.5)","Linux (0.5)","embedded systems (0.6)","legacy code (0.6)","C and C++ (0.7)","Java (0.5)","C# (0.5)","cell phones (0.6)","hand-held devices (0.6)","software bugs (0.8)","human endeavor (0.7)","human intellect (0.7)","experimentation (0.6)","human-centric approach (0.7)","bug-free software (0.8)"],"title":"The Quest For Bug-Free Software","wordpress_id":370,"uuid":"2e27da43-1823-4782-87ba-ff25ccc19fd1","filename":"2009-11-11-the-quest-for-bug-free-software.markdown","slug":"the-quest-for-bug-free-software","excerpt":"In recent literature from the scientific side of software engineering, there've been a lot of publications on producing and maintaining high-quality software. A lot of focus is being put on tools, systems, procedures and processes that aim to reduce the price-tag of quality and avoid the price-tag of failure.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/11/11/the-quest-for-bug-free-software","locallink":"/blog/2009/11/11/the-quest-for-bug-free-software","published":true},{"author":"rlc","categories":["Control Structures"],"comments":true,"date":"2009-11-01T00:00:00.000Z","layout":"post","tags":["control structures (1.0)","C++ (0.8)","goto (0.7)","switch-case (0.7)","if-else (0.7)","while (0.7)","do-while (0.7)","for (0.7)","return (0.7)","programming (0.5)","code (0.5)","semantics (0.5)","enumerators (0.5)","RAII (0.5)"],"title":"2-Control Structures","wordpress_id":294,"uuid":"ada10f81-2d40-47d5-bf44-b1d8ed3ce30e","filename":"2009-11-01-2-control-structures.markdown","slug":"2-control-structures","excerpt":"In this post, we'll take a look at a few _control structures_ in C++. There are only a few of them, so we'll start by listing them all and giving you some examples of each, but we'll first take a look at what we mean by control structures.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/11/01/2-control-structures","locallink":"/blog/2009/11/01/2-control-structures","published":true},{"author":"rlc","categories":["Intellectual Property","Copyrights","Free Software","Legal Agreements"],"comments":true,"date":"2009-10-26T00:00:00.000Z","layout":"post","tags":["intellectual property (3.0)","copyrights (2.5)","software (2.0)","open source (1.5)","free software (1.5)","author rights (1.0)","legal protection (1.0)","agreements (1.0)","ownership (1.0)","copyright infringements (1.0)"],"title":"Protect what's yours","wordpress_id":322,"uuid":"5a4fa3da-7780-49e0-ba14-e5e62dd7f5b3","filename":"2009-10-26-protect-whats-yours.markdown","slug":"protect-whats-yours","excerpt":"I've drawn up a list of my intellectual property yesterday. It's about four pages long and contains libraries, applications, web apps, training material, etc. Only one thing that I've ever created and published is in the public domain - the rest has copyrights attached to it. That doesn't necessarily mean that you can't use it, or even that you have to pay me to be allowed to use it: it just means that it's mine and that I decide what kind of rights you have over it.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/10/26/protect-whats-yours","locallink":"/blog/2009/10/26/protect-whats-yours","published":true},{"author":"rlc","categories":["Software Development","Bug Fixing","Memory Management","Code Maintenance","Programming Best Practices"],"comments":true,"date":"2009-10-26T00:00:00.000Z","layout":"post","tags":["semantics (0.9)","maintenance (0.8)","bugs (0.7)","memory leak (0.8)","raw pointers (0.6)","ownership (0.7)","error code (0.6)","RAII (0.9)","smart pointer (0.8)","C++ (0.7)"],"title":"Badly defined semantics","wordpress_id":324,"uuid":"3bd6bf4c-d978-42ff-8a65-0f19711c2ba4","filename":"2009-10-26-badly-defined-semantics.markdown","slug":"badly-defined-semantics","excerpt":"There is probably nothing worse than badly defined semantics: functions that might (or might not) take ownership of the object you pass to them can be a serious maintenance headache.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/10/26/badly-defined-semantics","locallink":"/blog/2009/10/26/badly-defined-semantics","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2009-10-14T00:00:00.000Z","layout":"post","tags":["C++ (0.9)","Web app (0.8)","Agile methodology (0.7)","Scrum (0.7)","Kanban (0.6)","PHP (0.8)","GUI development (0.6)","Symfony (0.8)","Object-relational mapping (0.7)","Database schema (0.6)"],"title":"Rapid application development in PHP","wordpress_id":264,"uuid":"f295c1fd-867c-4a3f-9b41-0a137ac2ff59","filename":"2009-10-14-rapid-application-development-in-php.markdown","slug":"rapid-application-development-in-php","excerpt":"For the last few days, I've been out of my usual C++ cocoon and working, in stead, on a web app to help me better organize my projects and - more especially - help me better track them.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/10/14/rapid-application-development-in-php","locallink":"/blog/2009/10/14/rapid-application-development-in-php","published":true},{"author":"rlc","categories":["Programming","C++","Education","Software Development","Podcasting","Email Communication"],"comments":true,"date":"2009-10-14T00:00:00.000Z","layout":"post","tags":["C++ (1.0)","Programming (0.8)","Learning (0.7)","Cygwin (0.6)","Linux (0.5)","Free software (0.7)","Podcast (0.4)","Object-oriented design (0.8)","RAII (0.6)","Secure programming (0.7)","Templates (0.6)","Design patterns (0.7)","Networking (0.6)","Syntax (0.7)","Grammar (0.5)","Hello, world! (0.5)"],"title":"C++ for the self-taught: Introduction","wordpress_id":268,"uuid":"4f72188b-cf70-4b9b-b4d6-45c08441ccb8","filename":"2009-10-14-c-for-the-self-taught-introduction.markdown","slug":"c-for-the-self-taught-introduction","excerpt":"I've decided to take a little time to make use of those 20000+ hours of C++ I have under my belt and make life a bit easier on those of you that are learning C++. In order to do that, I have created a new category called \"C++ for the self-taught\" that will basically show you how to program in C++.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/10/14/c-for-the-self-taught-introduction","locallink":"/blog/2009/10/14/c-for-the-self-taught-introduction","published":true},{"author":"rlc","categories":["Programming","C++"],"comments":true,"date":"2009-10-14T00:00:00.000Z","layout":"post","tags":["C++ (1.0)","compiler (0.8)","interpreted languages (0.6)","preprocessor (0.9)","operator overloading (0.8)","namespaces (0.9)","function (0.7)","GNU Make (0.7)","G++ (0.7)","translation unit (0.8)","#include directive (0.9)","header files (0.7)","source files (0.7)","Namespaces (0.8)","main function (0.9)","implementation (0.7)","cout (0.8)","overloading (0.8)"],"title":"1- \"Hello, world!\"","wordpress_id":273,"uuid":"3cab0410-08ac-47d0-94b7-1ac31c311a5a","filename":"2009-10-14-1-hello-world.markdown","slug":"1-hello-world","excerpt":"This is the first post in the \"C++ for the self-taught\" series - the second if you count the introduction. We will take a look at how to create your first C++ application.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/10/14/1-hello-world","locallink":"/blog/2009/10/14/1-hello-world","published":true},{"author":"rlc","categories":["Meaningful work","Motivation","Business perspective","Personal perspective"],"comments":true,"date":"2009-10-01T00:00:00.000Z","layout":"post","tags":["Meaningful work (1.0)","Malcolm Gladwell (0.8)","Outliers (0.7)","Motivation (0.9)","Productivity (0.6)","Job satisfaction (0.8)","Personal growth (0.7)","Financial stability (0.5)","Career change (0.6)","Work-life balance (0.6)"],"title":"The importance of meaningful work","wordpress_id":109,"uuid":"99c51c5e-35a0-4766-a31e-c3f3950b4aa2","filename":"2009-10-01-the-importance-of-meaningful-work.markdown","slug":"the-importance-of-meaningful-work","excerpt":"","permalink":"https://rlc.vlinder.ca/blog/2009/10/01/the-importance-of-meaningful-work","locallink":"/blog/2009/10/01/the-importance-of-meaningful-work","published":true},{"author":"rlc","categories":["Software Development","Coding Standards","Testing","Developer Guidelines","Enterprise Coding Conventions","API Design","Maintainability","Stability","Scalability","Quality Assurance"],"comments":true,"date":"2009-09-30T00:00:00.000Z","layout":"post","tags":["software development (1.0)","quality software (0.9)","good design (0.8)","good implementation (0.7)","good testing (0.6)","unit tests (0.9)","functional tests (0.8)","regression tests (0.7)","pre-production testing (0.6)","developer's guidelines (1.0)","coding conventions (0.9)","enterprise-wide standards (0.8)","API design (0.7)","maintainability (0.9)","stability (0.8)","scalability (0.7)","guideline quality (1.0)","presentation (0.9)","structure (0.8)","enforcement (0.7)"],"title":"Developer's Guidelines & High-Quality Software","wordpress_id":247,"uuid":"8a3f5108-5ae2-4acc-b27d-264f95f5db1e","filename":"2009-09-30-developers-guidelines-high-quality-software.markdown","slug":"developers-guidelines-high-quality-software","excerpt":"Yesterday, I was asked what I saw as the most important factors to ensure the development of quality software. What I cited was good design, good implementation following good standards, and good testing.","permalink":"https://rlc.vlinder.ca/blog/2009/09/30/developers-guidelines-high-quality-software","locallink":"/blog/2009/09/30/developers-guidelines-high-quality-software","published":true},{"author":"rlc","categories":["Software Development","Cybersecurity","Design Patterns","Implementation Patterns"],"comments":true,"date":"2009-09-29T00:00:00.000Z","layout":"post","tags":["security (1.0)","design-time concern (0.9)","application life-cycle (0.8)","defects (0.7)","agile practices (0.6)","Architectural-level patterns (0.9)","Distrustful Decomposition (0.8)","PrivSep (Privilege Separation) (0.8)","Defer to Kernel (0.8)","Design-level patterns (0.9)","Secure State Machine (0.8)","Secure Visitor (0.8)","Implementation-level patterns (0.9)","Secure Directory (0.8)","Pathname Canonicalization (0.8)","Input Validation (0.8)","Runtime Acquisition Is Initialization (0.8)","Proxy pattern (0.7)","authorization (0.7)","RAII (0.7)"],"title":"Security at the Design Phase - Examples & Review","wordpress_id":240,"uuid":"3b036709-0a01-45ff-a6df-a8df02fe7f4b","filename":"2009-09-29-security-at-the-design-phase-examples-review.markdown","slug":"security-at-the-design-phase-examples-review","excerpt":"A [recent report from the SEI](http://www.sei.cmu.edu/library/abstracts/reports/09tr010.cfm) confirms once more what I have been saying for a few years now: security is a design-time concern as much as it is a concern at any other time during the application life-cycle. The very architecture of the application should take security into account from the outset, and that concern should be followed through down to implementation and deployment.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/09/29/security-at-the-design-phase-examples-review","locallink":"/blog/2009/09/29/security-at-the-design-phase-examples-review","published":true},{"author":"rlc","categories":["Software Development","Agile Methodologies","Project Management","Quality Assurance","Configuration Management","Documentation","Process Improvement"],"comments":true,"date":"2009-09-29T00:00:00.000Z","layout":"post","tags":["Software Engineering Institute (1.0)","SCRUM (0.9)","CMMi (1.0)","Agile (1.0)","Manifesto for Agile Software Development (0.9)","Documentation (0.8)","Contracts (0.7)","Plans (0.8)","CMMI (1.0)","Iterative and Incremental Design (0.9)","Configuration Management (0.8)","Quality Assurance (0.8)"],"title":"Can Agile and CMMI Come Together?","wordpress_id":227,"uuid":"a16b90d7-6cd8-4120-a08e-91eae4c11950","filename":"2009-09-29-can-agile-and-cmmi-come-together.markdown","slug":"can-agile-and-cmmi-come-together","excerpt":"I just finished reading a [report](http://www.sei.cmu.edu/library/abstracts/reports/08tn003.cfm) by the [Software Engineering Institute](http://www.sei.cmu.edu/) that accomplishes something that earlier literature, including \"[SCRUM Meets CMMi - Agility and discipline combined](http://www.ddj.com/cpp/201202684)\" didn't accomplish: it takes a rational step back from both methods, shows where they're from and why they're different, how much of that difference is real and where the perceived differences come from, and how the two can come together. So, the short answer to my title is \"yes\".\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/09/29/can-agile-and-cmmi-come-together","locallink":"/blog/2009/09/29/can-agile-and-cmmi-come-together","published":true},{"author":"rlc","categories":["Technology","Software Development","Linux","Git","CentOS","RPM Package Management"],"comments":true,"date":"2009-09-25T00:00:00.000Z","layout":"post","tags":["CentOS (0.9)","Git (0.9)","RPM (0.8)","Source build (0.7)","Development server (0.6)","Dependencies (0.6)","Installation (0.6)","Home directory (0.5)","Opt (0.5)","Clone (0.5)"],"title":"Installing Git on CentOS 5.2","wordpress_id":216,"uuid":"0e446a34-8454-4f59-be7e-cd077598c189","filename":"2009-09-25-installing-git-on-centos-5-2.markdown","slug":"installing-git-on-centos-5-2","excerpt":"I'm pretty sure that I'm not the first one to run into this, so I thought I'd blog how this works.","permalink":"https://rlc.vlinder.ca/blog/2009/09/25/installing-git-on-centos-5-2","locallink":"/blog/2009/09/25/installing-git-on-centos-5-2","published":true},{"author":"rlc","categories":["Technology","Marketing","Business","Internet"],"comments":true,"date":"2009-09-24T00:00:00.000Z","layout":"post","tags":["techies (0.9)","marketers (0.8)","out-of-touch (0.7)","web (0.9)","software industry (0.6)","business (0.8)","web professionals (0.7)","NGO (0.5)","Internet access (0.6)","developing countries (0.6)","micro-businesses (0.6)"],"title":"Out-of-touch techies, marketing retoric, and nonsense. You do the math.","wordpress_id":213,"uuid":"83a56449-fb3c-4033-bded-0e5aa6730413","filename":"2009-09-24-out-of-touch-techies-marketing-retoric-and-nonsense-you-do-the-math.markdown","slug":"out-of-touch-techies-marketing-retoric-and-nonsense-you-do-the-math","excerpt":"Sometimes, techies and marketers - and especially people who are both - can get very out-of-touch with the real world and start spewing out nonsense","permalink":"https://rlc.vlinder.ca/blog/2009/09/24/out-of-touch-techies-marketing-retoric-and-nonsense-you-do-the-math","locallink":"/blog/2009/09/24/out-of-touch-techies-marketing-retoric-and-nonsense-you-do-the-math","published":true},{"author":"rlc","categories":["This blog"],"comments":true,"date":"2009-09-23T00:00:00.000Z","layout":"post","tags":["blogging (0.9)","website design (0.8)","theme change (0.7)","RSS feed (0.6)","categorization (0.8)","improvements (0.9)","user feedback (0.7)"],"title":"A new theme","wordpress_id":211,"uuid":"db8adf67-9c9d-4c0b-8f21-a4160726be2c","filename":"2009-09-23-a-new-theme.markdown","slug":"a-new-theme","excerpt":"I promised I wouldn't talk about this blog too much on the blog, and I promise I won't do this often, but I thought it might be a good idea to notice that I've made a few minor changes.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/09/23/a-new-theme","locallink":"/blog/2009/09/23/a-new-theme","published":true},{"author":"rlc","categories":["Technology","Operating Systems","Web Development","Linux distributions"],"comments":true,"date":"2009-09-22T00:00:00.000Z","layout":"post","tags":["CentOS (0.9)","Debian (0.9)","web application (0.7)","PHP (0.6)","server setup (0.5)","Linux systems (0.5)","RedHat (0.4)","computer science (0.4)","RPM format (0.4)","apt (0.4)","yum (0.4)","LAMP (0.8)","Linux Standard Base (0.3)","package availability (0.3)","user-friendly interface (0.3)","maintenance (0.3)","development (0.3)"],"title":"Running a LAMP: Debian vs. CentOS","wordpress_id":197,"uuid":"edfd0d26-cb6a-496a-a72a-4e3fe6304bac","filename":"2009-09-22-running-a-lamp-debian-vs-centos.markdown","slug":"running-a-lamp-debian-vs-centos","excerpt":"One of my clients uses CentOS for the production platform of their (web) application (written in PHP). They've asked me to take over the development and maintenance of their web application, so, naturally, I set up a new server with CentOS 5.2, rather than the Debian installation I would normally use.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/09/22/running-a-lamp-debian-vs-centos","locallink":"/blog/2009/09/22/running-a-lamp-debian-vs-centos","published":true},{"author":"rlc","categories":["Problem Solving","Software Development","Project Management","Business Analysis","Concept Development","Requirements Analysis","Testing","Risk Management"],"comments":true,"date":"2009-09-19T00:00:00.000Z","layout":"post","tags":["problem solving (0.9)","abstract concepts (0.8)","proof of concept (1.0)","functional requirements (0.7)","non-functional requirements (0.6)","security requirements (0.5)","MySQL (0.8)","ODBC (0.9)","feasibility (0.8)","hypothesis testing (0.7)","production code (0.8)","fail fast (0.9)","human resources (0.6)","time-to-market (0.8)"],"title":"The Importance of Proof-Of-Concepts","wordpress_id":194,"uuid":"fe70bce2-5c2d-469c-9036-4aedd1bb566e","filename":"2009-09-19-the-importance-of-proof-of-concepts.markdown","slug":"the-importance-of-proof-of-concepts","excerpt":"Any problem is an invitation to find a solution.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/09/19/the-importance-of-proof-of-concepts","locallink":"/blog/2009/09/19/the-importance-of-proof-of-concepts","published":true},{"author":"rlc","categories":["Employment","Job search","Tech test","Programming","Language skills"],"comments":true,"date":"2009-09-19T00:00:00.000Z","layout":"post","tags":["Job search (0.9)","CV (0.7)","Head-hunters (0.6)","Tech test (0.8)","C++ (0.8)","Boost::tokenizer (0.5)","Showing off (0.7)","Immigrant (0.4)","French (0.3)"],"title":"Having fun on a technical test","wordpress_id":196,"uuid":"5c7cb5ab-ff7e-45ab-922d-59674a3c5dc6","filename":"2009-09-19-having-fun-on-a-technical-test.markdown","slug":"having-fun-on-a-technical-test","excerpt":"I guess it's not a secret: I'm looking for a job, either short-term or long-term, so I put my CV on a few websites. I got called by head-hunters twice this week: once for a contract to start on Monday (I'm busy until the end of September/the beginning of October so I told 'em I couldn't start full-time until then) and one to start a bit later.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/09/19/having-fun-on-a-technical-test","locallink":"/blog/2009/09/19/having-fun-on-a-technical-test","published":true},{"author":"rlc","categories":["Database Management","Software Development","Programming","Data Management"],"comments":true,"date":"2009-09-10T00:00:00.000Z","layout":"post","tags":["SQL (0.9)","MySQL (0.8)","Stored Procedures (0.7)","Business Logic (0.6)","Database Design (0.6)","Error Signalling (0.5)","PHP MVC Frameworks (0.5)","Coupling (0.5)","Loosely-Coupled Code (0.5)","Spaghetti Code (0.4)"],"title":"Refreshing SQL","wordpress_id":189,"uuid":"e105e66c-a107-491b-b776-b63fd8cbdbeb","filename":"2009-09-10-refreshing-sql.markdown","slug":"refreshing-sql","excerpt":"I first started working with SQL several years ago: MySQL was still in the 3.x versions, so I didnt use any stored procs, transactions, etc. Most of the business logic around the data was written in Perl. Though it was a fun time in many respects, I dont miss the limitations of MySQL one bit.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/09/10/refreshing-sql","locallink":"/blog/2009/09/10/refreshing-sql","published":true},{"author":"rlc","categories":["Software Development","Compatibility Management","API Compatibility","Binary Compatibility","Versioning","Interface Design","Maintenance Branches"],"comments":true,"date":"2009-09-01T00:00:00.000Z","layout":"post","tags":["library code (1.0)","binary compatibility (1.0)","API compatibility (1.0)","backward compatible (1.0)","forward compatibility (1.0)","ABI (Application Binary Interface) (1.0)","C++ (1.0)","object layout (1.0)","C (1.0)","function prototype (1.0)","name mangling (1.0)","shared libraries (1.0)","dynamic linker (1.0)","dynamic loader (1.0)","compile (1.0)","link (1.0)","executable application (1.0)","memory allocator (1.0)","template functions (1.0)","template classes (1.0)","default parameter values (1.0)","translation units (1.0)","linker (1.0)","virtual machine (1.0)","Incubator (1.0)","versioning (1.0)","interface design (1.0)","built-in equivalents (1.0)","roll your own (1.0)","C API (1.0)","STL (1.0)","Boost (1.0)","Maintenance branches (1.0)"],"title":"Binary Compatibility","wordpress_id":177,"uuid":"67e5f58c-868c-4dbb-b0d5-f204fc74dd4c","filename":"2009-09-01-binary-compatibility.markdown","slug":"binary-compatibility","excerpt":"When writing library code, one of the snares to watch out for is _binary compatibility_. I have already [talked about the dangers](/blog/2009/08/the-danger-of-breaking-changes/) of breaking binary - and API - compatibility but I had neither defined what binary compatibility is, now how to prevent breaking it. In this post, I will do both - and I will explain how, at Vlinder Software, we go about managing incompatible changes.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/09/01/binary-compatibility","locallink":"/blog/2009/09/01/binary-compatibility","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2009-08-24T00:00:00.000Z","layout":"post","tags":["Xerces-C (1.0)","DOM implementation (0.8)","Apache Foundation (0.7)","XML processing (0.6)","Altova XML Spy (0.5)","API compatibility (0.6)","Version numbers (0.5)","Binary compatibility (0.6)","Memory management (0.7)","Forking (0.6)","Software development (0.5)","Xerces-C3 (0.5)","Release management (0.6)","Bug fixes (0.6)","Deprecated API (0.7)"],"title":"The Danger of Breaking Changes","wordpress_id":175,"uuid":"6c4d60d6-7eea-4df2-bb49-0d2b5ab6348f","filename":"2009-08-24-the-danger-of-breaking-changes.markdown","slug":"the-danger-of-breaking-changes","excerpt":"[Xerces-C](http://xerces.apache.org/xerces-c/) is without a doubt one of the most popular DOM implementations in C++ (and its Java sibling undoubtedly the most popular implementation for Java). As with any project that lives under the banner of the [Apache Foundation](http://apache.org/) the project is managed using a meritocracy-style project management scheme and has been, quite successfully, for the last decade.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/08/24/the-danger-of-breaking-changes","locallink":"/blog/2009/08/24/the-danger-of-breaking-changes","published":true},{"author":"rlc","categories":["Education","Technology","Communication"],"comments":true,"date":"2009-08-22T00:00:00.000Z","layout":"post","tags":["analogies (0.9)","diagrams (0.8)","technical terms (0.6)","UML diagrams (0.7)","message pump (0.8)","explanation (0.7)","debugging (0.6)","memory (0.6)","magic number (0.7)","lay person (0.5)"],"title":"The Importance of Patterns","wordpress_id":173,"uuid":"a66733a7-47f6-4b69-9585-5cafef8ece08","filename":"2009-08-22-the-importance-of-patterns.markdown","slug":"the-importance-of-patterns","excerpt":"When explaining the design of some application to some-one, I find the use of analogies is one of the best tools available to me - better than diagrams and much better than technical terms: when using technical terms, the listener often starts \"glazing over\" after only a few seconds - maybe a minute. It really serves no other purpose than showing off how smart you are - and that is usually a pretty stupid (and therefore self-defeating) thing to do.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/08/22/the-importance-of-patterns","locallink":"/blog/2009/08/22/the-importance-of-patterns","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2009-08-18T00:00:00.000Z","layout":"post","tags":["firmware (0.9)","device drivers (0.8)","integer values (0.9)","debugger (0.7)","bit pattern (0.6)","magic number (0.9)","od command (0.7)","documentation (0.8)","programmer (0.7)","technical documentation (0.8)"],"title":"Using Four-Letter Words In Code","wordpress_id":169,"uuid":"6c494e7c-db48-4fb2-8eb8-5f3c3766c5bf","filename":"2009-08-18-using-four-letter-words-in-code.markdown","slug":"using-four-letter-words-in-code","excerpt":"When writing firmware and device drivers, it is useful, sometimes, to have human-readable integer values - i.e. integer values that, when you read them in a debugger, mean something distinctive.","permalink":"https://rlc.vlinder.ca/blog/2009/08/18/using-four-letter-words-in-code","locallink":"/blog/2009/08/18/using-four-letter-words-in-code","published":true},{"author":"rlc","categories":["Programming conventions"],"comments":true,"date":"2009-08-18T00:00:00.000Z","layout":"post","tags":["C++ (1.0)","naming convention (0.9)","underscores (0.8)","global namespace (0.7)","name mangling (0.6)","C (0.5)","scope (0.9)","static class members (0.8)","enumerators (0.7)","compiler (0.9)","standards-compliant (0.8)"],"title":"Naming conventions and name mangling","wordpress_id":171,"uuid":"ff376ae1-e48c-4e64-882e-1549bb7aa42e","filename":"2009-08-18-naming-conventions-and-name-mangling.markdown","slug":"naming-conventions-and-name-mangling","excerpt":"In C++, any name that starts with and underscore followed by an uppercase letter and any name that contains two consecutive underscores is reserved for any use [lib.global.names] and any name that begins with an underscore is reserved in the global namespace.","permalink":"https://rlc.vlinder.ca/blog/2009/08/18/naming-conventions-and-name-mangling","locallink":"/blog/2009/08/18/naming-conventions-and-name-mangling","published":true},{"author":"rlc","categories":["Technology","Web hosting","DNS management","Email services"],"comments":true,"date":"2009-08-15T00:00:00.000Z","layout":"post","tags":["hosting provider (0.8)","DNS provider (0.7)","MX entry (0.6)","mail service (0.8)","website downtime (0.5)","notification (0.6)","Michel (0.4)"],"title":"Mail down - and back up again","wordpress_id":165,"uuid":"6bad15bf-d52d-4e83-ad41-4505d93c5893","filename":"2009-08-15-mail-down-and-back-up-again.markdown","slug":"mail-down-and-back-up-again","excerpt":"I changed my hosting provider a few days ago, which implied changing the DNS provider as well. As a result of this - and my forgetting to set the MX entry correctly, the mail service for landheer-cieslak.com was down. [Michel](http://michelf.ca) was kind enough to notify me of this, so it's been fixed this morning.","permalink":"https://rlc.vlinder.ca/blog/2009/08/15/mail-down-and-back-up-again","locallink":"/blog/2009/08/15/mail-down-and-back-up-again","published":true},{"author":"rlc","categories":["Software Development","Programming Best Practices","Code Quality","Clean Code","Variable Naming","Cross-Site Scripting","Security","Hungarian Notation","Coding Standards","Type Safety","Bug Fixing","Refactoring","Code Fragility"],"comments":true,"date":"2009-08-14T00:00:00.000Z","layout":"post","tags":["programming (0.9)","coding (0.8)","clean code (0.8)","Joel On Software (0.7)","Hungarian notation (0.9)","variable naming (0.7)","cross-site scripting (0.8)","security (0.7)","code readability (0.8)","coding style (0.7)"],"title":"Name For Functionality, Not Type","wordpress_id":158,"uuid":"71a844ce-6a9b-4761-b664-a48f7bfd7b34","filename":"2009-08-14-name-for-functionality-not-type.markdown","slug":"name-for-functionality-not-type","excerpt":"I just read a [blog by Michel Fortin](http://web.archive.org/web/20111208114024/http://michelf.com/weblog/2009/hungarian-notation-the-original/), where he quotes [Joel On Software](http://www.joelonsoftware.com/articles/Wrong.html) regarding [Hungarian notation](http://en.wikipedia.org/wiki/Hungarian_notation), or rather, [Hungarian WartHogs](http://www.ddj.com/cpp/184403804). Naming a variable for its type, or a type for its location or namespace, is a mistake.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/08/14/name-for-functionality-not-type","locallink":"/blog/2009/08/14/name-for-functionality-not-type","published":true},{"author":"rlc","categories":["Programming"],"comments":true,"date":"2009-08-14T00:00:00.000Z","layout":"post","tags":["C++ (1.0)","Programming Language (0.8)","Abstraction (0.7)","Elegant Constructs (0.6)","Recursion (0.8)","Object Construction (0.9)","Cast Operator Overloading (0.9)","Filesystem Monitoring (0.7)","Pseudo-Function (0.6)","Code Readability (0.8)"],"title":"Hiding Complexity in C++","wordpress_id":150,"uuid":"5880b4b1-232f-4a23-a68e-494c1b6c750e","filename":"2009-08-14-hiding-complexity-in-c.markdown","slug":"hiding-complexity-in-c","excerpt":"C++ is a programming language that, aside from staying as close to the machine as possible (but no closer) and as close to C as possible (but no closer), allows the programmer to express abstraction if a few very elegant constructs. That is probably the one thing I like best about C++.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/08/14/hiding-complexity-in-c","locallink":"/blog/2009/08/14/hiding-complexity-in-c","published":true},{"author":"rlc","categories":["Technology","Programming","Crime prevention","Urban development"],"comments":true,"date":"2009-08-10T00:00:00.000Z","layout":"post","tags":["New York City (0.9)","clean-up (0.8)","crime rates (0.7)","discipline (0.6)","code structure (0.9)","readable code (0.8)","comments (0.7)","maintenance nightmare (0.6)"],"title":"Crime, Debugging and the Broken Window Rule","wordpress_id":147,"uuid":"a73e86d9-464c-4e19-9d1b-97e696ada76d","filename":"2009-08-10-crime-debugging-and-the-broken-window-rule.markdown","slug":"crime-debugging-and-the-broken-window-rule","excerpt":"In the late 1980s New York City was cleaned up from under the ground up: from 1984 to 1990, the New York subway was cleaned of its grafiti, then of its non-paying passengers. After that, when the chief of tge New York transit police became the chief of the New York city police, the city was cleaned up in the same way, and crime rates dropped dramatically.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/08/10/crime-debugging-and-the-broken-window-rule","locallink":"/blog/2009/08/10/crime-debugging-and-the-broken-window-rule","published":true},{"author":"rlc","categories":["Software Design"],"comments":true,"date":"2009-08-08T00:00:00.000Z","layout":"post","tags":["software design (1.0)","data transfer (0.9)","spaghetti code (0.8)","GS1 EPCGlobal standards (0.7)","message layer (0.9)","transport layer (0.9)","application layer (0.9)","message-transport binder (0.9)","channels (0.8)","event channel (0.7)","exception channel (0.7)","data channel (0.7)","MTB (0.8)","message format (0.8)","serialization (0.8)","deserialization (0.8)","Transport Layer Security (0.7)","TLS (0.7)","SSL (0.7)","TCP/IP (0.7)","addressing (0.7)","association (0.7)","validation (0.7)"],"title":"How Data Transport Should Work IMNSHO","wordpress_id":146,"uuid":"937df557-a7c0-46ee-a2c6-04769bfd7c38","filename":"2009-08-08-how-data-transport-should-work-imnsho.markdown","slug":"how-data-transport-should-work-imnsho","excerpt":"One of the most ubiquitous problems in software design is to get data from one place to another. When some-one starts coding code that does that, you seem to inevitably end up with spaghetti code that mixes the higher-level code, the content and the transport together in an awful mix that looks like a cheap weeks-old spaghetti that was left half-eaten and abandoned next to a couch somewhere. Now, I have never seen what that actually looks like, but I have a rather vivid imagination - and I'll bet you have too.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/08/08/how-data-transport-should-work-imnsho","locallink":"/blog/2009/08/08/how-data-transport-should-work-imnsho","published":true},{"author":"rlc","categories":["Programming Language","Software Development","Mobile Development","Technology Trends"],"comments":true,"date":"2009-08-07T00:00:00.000Z","layout":"post","tags":["Microsoft (.8)","C# (.7)",".NET (.6)","Visual Basic (.9)","Google (.8)","Python (.5)","Java (.6)","ASP (.4)","Android (.9)","Simple (.9)","Java platform (.7)","Herbert Czymontek (.6)","Sun (.4)","Borland (.3)","Semplice (.7)","Android SDK (.6)","Windows Forms API (.5)","Dr. Dobb's (.4)"],"title":"Google releases new dialect of Basic","wordpress_id":144,"uuid":"c59bc2dc-4386-4fab-9589-6e0ccf1064e4","filename":"2009-08-07-google-releases-new-dialect-of-basic.markdown","slug":"google-releases-new-dialect-of-basic","excerpt":"And here I though Basic was on its way out: Microsoft has been touting the advantages of C# and .NET in general far more than they have the advantages of Visual Basic (I remember when it became \"visual\": it used to be \"quick\" and that never said anything about run time); and Google _seemed_ to be much more interested in Python and Java than they were in the whole Basic scene. In the circles I've frequented for the last several years, Basic was used only in ASP applications and then only if, for some reason, using C# was out of the question. Basic was basically legacy code that hadn't been replaced yet.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/08/07/google-releases-new-dialect-of-basic","locallink":"/blog/2009/08/07/google-releases-new-dialect-of-basic","published":true},{"author":"rlc","categories":["Software Development","Quality Assurance","Bug Testing","Contest"],"comments":true,"date":"2009-08-06T00:00:00.000Z","layout":"post","tags":["Software Development (0.9)","Bug Testing (0.8)","Quality Assurance (0.7)","Funky (0.6)","Interpreter (0.5)","Contest (0.4)","Minor Bug (0.3)","Post-Mortem Review (0.2)","QA Process (0.8)"],"title":"Testing QA","wordpress_id":140,"uuid":"b8b10187-ab86-4ef9-9f1c-aff4304ade47","filename":"2009-08-06-testing-qa-2.markdown","slug":"testing-qa-2","excerpt":"During the development of the next version of Funky, version 1.4.00, I found a bug that hadn't been picked up during the release process for 1.3.00. Though the bug was in a corner of the interpreter that was new to version 1.3.00 and didn't cause anything too nasty - just a case where the interpreter rejects a script as invalid when it's not - it does mean an actual bug got through QA. I hate it when that happens.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/08/06/testing-qa-2","locallink":"/blog/2009/08/06/testing-qa-2","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2009-08-05T00:00:00.000Z","layout":"post","tags":["debugging (1.0)","firmware (0.8)","compiler (0.7)","One Definition Rule (1.0)","C++ (0.6)","pragma pack (1.0)","alignment (0.6)","RTOS (0.5)","Microsoft Visual Studio (0.5)","GNU Compiler Collection (0.5)","union (0.7)","structure (0.6)","class (0.5)","template code (0.5)","static assertion (0.5)","translation unit (0.5)","header file (0.5)","simulation (0.6)","memory-mapped structure (0.6)"],"title":"Fixing mistakes","wordpress_id":116,"uuid":"b7a272be-eb11-43ec-885c-cf46469c6ef1","filename":"2009-08-05-fixing-mistakes.markdown","slug":"fixing-mistakes","excerpt":"I just finished debugging a very, very nasty problem, which took me the better part of two hours to find and, once found, only a few minutes to fix. In this case, I have no one to blame but myself, so I really shouldn't complain too loudly, but I thought it was worth mentioning anyway, to show what can happen if you break the One Definition Rule.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/08/05/fixing-mistakes","locallink":"/blog/2009/08/05/fixing-mistakes","published":true},{"author":"rlc","categories":["Programming Language","Software Development","Functional Programming","Interpreter","Version Control","Grammar","Testing","Optimization","Recursion","Looping"],"comments":true,"date":"2009-07-31T00:00:00.000Z","excerpt":"Like a warm spring breeze\nwriting is to summer's dawn\nas language to dusk\n","layout":"post","tags":["programming language (1.0)","Jail (0.9)","Object-Oriented (0.8)","VM (0.7)","embedded devices (0.6)","threads (0.5)","networking (0.4)","C (0.9)","libmemory (0.8)","SMR (0.7)","libcontain (0.6)","Yacc/Bison (0.5)","GCC (0.4)","Funky (1.0)","functional programming (0.9)","interpreter (0.8)","grammar (0.7)","evaluator (0.6)","testing (0.5)","statement (0.9)","function (0.8)","arguments (0.7)","inline function (0.6)","recursions (0.5)","loops (0.4)","while (0.9)","pred (0.8)","body (0.7)","control (0.6)","ping (0.5)","interpreter (0.9)","stand-alone (0.8)","C++ (0.7)"],"title":"Working on a programming language","wordpress_id":117,"uuid":"b6756a7c-d670-4454-b474-254217680ef0","filename":"2009-07-31-working-on-a-programming-language.markdown","slug":"working-on-a-programming-language","permalink":"https://rlc.vlinder.ca/blog/2009/07/31/working-on-a-programming-language","locallink":"/blog/2009/07/31/working-on-a-programming-language","published":true},{"author":"rlc","categories":["Cultural Dimensions","International Business","Psychology","Sociology","Gender Studies"],"comments":true,"date":"2009-07-31T00:00:00.000Z","excerpt":"When autumn turns hence\nto where winter must come forth\nspring awaits summer\n","layout":"post","tags":["culture (1.0)","Geert Hofstede (0.9)","Power Distance Index (0.8)","Individualism (0.7)","Masculinity (0.6)","Uncertainty Avoidance Index (0.8)","Long Term Orientation (0.7)","Netherlands (0.9)","egalitarian (0.8)","monarchy (0.6)","tolerance (0.7)","risk (0.6)","prime minister (0.6)","Wim Kok (0.7)","business (0.8)","authority (0.7)","equality (0.8)","Quebec (0.7)","WWII (0.6)","North Carolina (0.6)","immigrant (0.8)","expatriate (0.7)","international environment (0.9)","soft skills (0.8)"],"title":"Culture and working internationally","wordpress_id":110,"uuid":"0a601af9-2645-45ba-8d79-56504e371cd8","filename":"2009-07-31-culture-and-working-internationally.markdown","slug":"culture-and-working-internationally","permalink":"https://rlc.vlinder.ca/blog/2009/07/31/culture-and-working-internationally","locallink":"/blog/2009/07/31/culture-and-working-internationally","published":true},{"author":"rlc","categories":["Technology","Pharmaceutical Industry","Barcode Inspection","Data Matrix","Vision Inspection Systems","Research","Privacy Concerns"],"comments":true,"date":"2009-07-29T00:00:00.000Z","layout":"post","tags":["pharmaceutical industry (0.9)","vision inspection systems (0.8)","cameras (0.7)","barcodes (0.9)","datamatrix (0.8)","Optel Vision (0.6)","MIT (0.7)","Bokode (0.8)","RFID (0.6)","positioning (0.7)","privacy concerns (0.8)"],"title":"Storing data in an optical illusion","wordpress_id":90,"uuid":"a7817b88-6534-4f81-a9d5-85cc890e0d0a","filename":"2009-07-29-storing-data-in-an-optical-illusion.markdown","slug":"storing-data-in-an-optical-illusion","excerpt":"For the past five years now, I've worked on vision inspection systems for the pharmaceutical industry. In those years, I have seen many applications in which cameras were used to read data on bottles, cartons, even tablets. Barcodes can be printed almost anywhere and can be of almost any size. One application I've worked on - with a whole bunch of other people, of course - had [Optel Vision](http://www.optelvision.com) systems inspect datamatrix 2D barcodes with ten digits in it (a 12x12 ECC200 datamatrix) printed on only 3x3 mm on the neckband of a vial. The system had to be able to inspect several dozens of these a minute, using VGA resolution cameras - and they were small enough that it was hard to find them if you didn't know where they were.\nLet's just say this was one of the more challenging systems.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/07/29/storing-data-in-an-optical-illusion","locallink":"/blog/2009/07/29/storing-data-in-an-optical-illusion","published":true},{"author":"rlc","categories":["Technology","Operating Systems","Web Browsers"],"comments":true,"date":"2009-07-29T00:00:00.000Z","excerpt":"is this coming spring\nor is't autumn in disguise?\nspring doth promise much!\n","layout":"post","tags":["Google Chrome OS (1.0)","Microsoft (0.8)","Netbooks (0.7)","Web browsing (0.6)","Operating systems (0.9)","Google promises (0.8)","Desktop systems (0.7)","Developers toolkit (0.5)","Xorg (0.4)","Qt (0.4)","GUI (0.6)","Security (0.7)","Java plugin (0.5)"],"title":"Google Chrome OS: Promising - but promising what, exactly?","wordpress_id":106,"uuid":"92c8f5e5-23f2-4b7b-ba22-b536523592e3","filename":"2009-07-29-google-chrome-os-promising-but-promising-what-exactly.markdown","slug":"google-chrome-os-promising-but-promising-what-exactly","permalink":"https://rlc.vlinder.ca/blog/2009/07/29/google-chrome-os-promising-but-promising-what-exactly","locallink":"/blog/2009/07/29/google-chrome-os-promising-but-promising-what-exactly","published":true},{"author":"rlc","categories":["Programming","Software Development","Scripting Languages","Functional Programming"],"comments":true,"date":"2009-07-29T00:00:00.000Z","excerpt":"functional combines\nprogramming summers into\nsheerly fun coding\n","layout":"post","tags":["scriptable simulator (1.0)","firmware (0.8)","Python (0.7)","Boost.Python (0.9)","C++ (0.8)","scripting languages (0.8)","embeddable (0.9)","Funky (1.0)","looping (0.9)","functional programming (0.8)","Lisp (0.7)","Scheme (0.7)","while loop (0.9)","predicate (0.8)","embeddable functional programming language (0.9)","socket (0.8)"],"title":"Funky, functional programming and looping","wordpress_id":103,"uuid":"f8cd39e7-ad34-485f-9e6f-3b85c039de50","filename":"2009-07-29-funky-functional-programming-and-looping.markdown","slug":"funky-functional-programming-and-looping","permalink":"https://rlc.vlinder.ca/blog/2009/07/29/funky-functional-programming-and-looping","locallink":"/blog/2009/07/29/funky-functional-programming-and-looping","published":true},{"author":"rlc","categories":["Software Development"],"comments":true,"date":"2009-07-28T00:00:00.000Z","excerpt":"a glass of water\nmay sometimes have a storm, but\nblizzards there are rare\n","layout":"post","tags":["Critical Section (1.0)","Mutex (1.0)","Microsoft (0.8)","Legacy Code (0.7)","Bug (0.6)","Thread Safety (0.9)","Re-entrant Code (0.8)","Spinlock (0.7)","Data Protection (0.7)","Code Modification (0.6)"],"title":"Critical sections - of what?","wordpress_id":94,"uuid":"979c41be-f488-4fbf-9764-cc53c8d29c60","filename":"2009-07-28-critical-sections-of-what.markdown","slug":"critical-sections-of-what","permalink":"https://rlc.vlinder.ca/blog/2009/07/28/critical-sections-of-what","locallink":"/blog/2009/07/28/critical-sections-of-what","published":true},{"author":"rlc","categories":["Programming Language Theory"],"comments":true,"date":"2009-07-28T00:00:00.000Z","layout":"post","tags":["Scott Meyers (0.9)","Francis Glassborow (0.8)","one-definition rule (0.9)","non-inline functions (0.7)","template functions (0.6)","C++ (0.9)","translation unit (0.8)","complexity (0.7)","programming language (0.8)"],"title":"Ah - The One Definition Rule","wordpress_id":81,"uuid":"c26ad6a6-fada-4ba0-b3f1-af3fe5433c87","filename":"2009-07-28-ah-the-one-definition-rule.markdown","slug":"ah-the-one-definition-rule","excerpt":"In response to Scott Meyers' [question on non-inline non-template functions and the one-definition rule](http://groups.google.com/group/comp.std.c++/msg/863b3f502efae0e0), Francis Glassborow replied with a very interesting example of two _lexically_ identical functions that weren't _actually_ identical. ","permalink":"https://rlc.vlinder.ca/blog/2009/07/28/ah-the-one-definition-rule","locallink":"/blog/2009/07/28/ah-the-one-definition-rule","published":true},{"author":"rlc","categories":["Programming Language","Functional Programming","C++ Standardization"],"comments":true,"date":"2009-07-28T00:00:00.000Z","excerpt":"Sun to early spring\nis like snow is to autumn:\nunexpected joy\n","layout":"post","tags":["C++ (0.8)","concepts (0.7)","meta-programming (0.6)","threading (0.5)","functional programming (0.9)","lambda expressions (0.8)","polymorphic lambdas (0.7)","comp.std.c++ (0.8)"],"title":"A glimmer of hope on comp.std.c++","wordpress_id":87,"uuid":"81075281-2342-448b-a8d3-c4c7e246ca94","filename":"2009-07-28-a-glimmer-of-hope-on-comp-std-c.markdown","slug":"a-glimmer-of-hope-on-comp-std-c","permalink":"https://rlc.vlinder.ca/blog/2009/07/28/a-glimmer-of-hope-on-comp-std-c","locallink":"/blog/2009/07/28/a-glimmer-of-hope-on-comp-std-c","published":true},{"author":"rlc","categories":["Technology","Programming","Software Development","Computer Science"],"comments":true,"date":"2009-07-25T00:00:00.000Z","excerpt":"recursive locking:\nwinter''s way of saying \"yes\",\nto summer''s loud \"no\"\n","layout":"post","tags":["RSS streams (1.0)","comp.programming.threads (1.0)","POSIX threads (0.8)","recursive locks (1.0)","design flaws (0.7)","David Schwartz (0.6)","thread synchronization (0.9)","threading architecture (0.8)","recursive locking (0.9)","code maintenance (0.7)"],"title":"Recursive Locking Is Evil, or is it?","wordpress_id":57,"uuid":"84d59596-bbe3-41ad-823d-f5fb32380de1","filename":"2009-07-25-recursive-locking-is-evil-or-is-it.markdown","slug":"recursive-locking-is-evil-or-is-it","permalink":"https://rlc.vlinder.ca/blog/2009/07/25/recursive-locking-is-evil-or-is-it","locallink":"/blog/2009/07/25/recursive-locking-is-evil-or-is-it","published":true},{"author":"rlc","categories":["Programming"],"comments":true,"date":"2009-07-24T00:00:00.000Z","excerpt":"Sadness of winter\ndecided this summer, when\nno concept survived\n","layout":"post","tags":["C++ (1.0)","Generic programming (0.9)","Concepts (1.0)","Standards committee (0.8)","Bjarne Stroustrup (0.7)","Template system (0.8)","Meta-programming (0.9)","Types (0.8)","Template meta-programming (0.9)","Libraries (0.7)"],"title":"No Concepts in C++0x","wordpress_id":54,"uuid":"2504c105-2494-400a-a038-a682f8565894","filename":"2009-07-24-no-concepts-in-c0x.markdown","slug":"no-concepts-in-c0x","permalink":"https://rlc.vlinder.ca/blog/2009/07/24/no-concepts-in-c0x","locallink":"/blog/2009/07/24/no-concepts-in-c0x","published":true},{"author":"rlc","categories":["Employment","Recruitment","Expertise","Education","Job Titles","Resume Accuracy"],"comments":true,"date":"2009-07-23T00:00:00.000Z","layout":"post","tags":["resume honesty (0.9)","job application (0.8)","expertise (0.9)","inflation (0.8)","internships (0.7)","psychologists (0.6)","experience (0.8)","responsibilities (0.7)","titles (0.6)","translation (0.7)","accuracy (0.8)","IT (0.8)","software (0.8)"],"title":"Why you shouldn't inflate your resume","wordpress_id":47,"uuid":"c62b93c9-8ecb-40c6-a593-1a4edbfe8df4","filename":"2009-07-23-why-you-shouldnt-inflate-your-resume.markdown","slug":"why-you-shouldnt-inflate-your-resume","excerpt":"Many people inflate their resumes when they apply for a job. When I'm on the hiring side of the equasion, I tend to frown upon such practices: though I usually don't care much about references, I do check the outliers. But what I check more is expertise - and that's something I can't stand inflation on.\n\n","permalink":"https://rlc.vlinder.ca/blog/2009/07/23/why-you-shouldnt-inflate-your-resume","locallink":"/blog/2009/07/23/why-you-shouldnt-inflate-your-resume","published":true},{"author":"rlc","categories":["Opinions","Technology"],"comments":true,"date":"2009-07-22T00:00:00.000Z","excerpt":"flabbergasted I\nlong for winter in summer?\nperhaps just autumn\n","layout":"post","tags":["fixoutlook.org (1.0)","Twitter campaign (0.8)","Microsoft (0.9)","Outlook (0.9)","HTML (0.9)","standards compliance (0.9)","Word (0.8)","XML (0.7)","XSL stylesheet (0.7)","Explorer (0.6)","IE-readible HTML (0.6)","E-mail Standards Project (0.8)","GMail (0.7)","web-based (0.6)","HTML mail (0.7)","E-mail clients (0.7)"],"title":"@msofficeus @fixoutlook - what's the big deal?","wordpress_id":44,"uuid":"7cebdd4e-1bbe-475f-8159-ddf9ad25fc58","filename":"2009-07-22-msofficeus-fixoutlook-whats-the-big-deal.markdown","slug":"msofficeus-fixoutlook-whats-the-big-deal","permalink":"https://rlc.vlinder.ca/blog/2009/07/22/msofficeus-fixoutlook-whats-the-big-deal","locallink":"/blog/2009/07/22/msofficeus-fixoutlook-whats-the-big-deal","published":true},{"author":"rlc","categories":["Work Experience","Software Engineering","Programming","Project Management","Team Leadership"],"comments":true,"date":"2009-07-21T00:00:00.000Z","excerpt":"Clarification\nas clarity of summer -\nyet not unlike spring.\n","layout":"post","tags":["software engineering (3.0)","work experience (2.5)","job titles (2.0)","programming (1.5)","team leadership (1.0)","project management (1.0)","software architecture (1.0)","career history (1.0)","professional background (1.0)","qualifications (1.0)"],"title":"Seven?","wordpress_id":40,"uuid":"6e373d24-9220-4994-8b80-73231f538e53","filename":"2009-07-21-seven.markdown","slug":"seven","permalink":"https://rlc.vlinder.ca/blog/2009/07/21/seven","locallink":"/blog/2009/07/21/seven","published":true},{"author":"rlc","categories":["Software Development","Expertise","Job Interviews","Technical Skills"],"comments":true,"date":"2009-07-19T00:00:00.000Z","excerpt":"Many summers spent\non coding and on code, yet...\nexpertise attained?\n","layout":"post","tags":["software design (0.9)","expertise (0.8)","C++ (0.7)","programming (0.6)","technical skills (0.5)","job interview (0.4)","candidate evaluation (0.4)","team lead (0.3)","software architecture (0.3)","coding (0.2)"],"title":"How to become an expert","wordpress_id":36,"uuid":"97ed8590-3b9a-49d9-a819-25b32a9d25cb","filename":"2009-07-19-how-to-become-an-expert.markdown","slug":"how-to-become-an-expert","permalink":"https://rlc.vlinder.ca/blog/2009/07/19/how-to-become-an-expert","locallink":"/blog/2009/07/19/how-to-become-an-expert","published":true},{"author":"rlc","categories":["Software Development","Programming","API Design","Software Architecture","Software Deployment"],"comments":true,"date":"2009-07-18T00:00:00.000Z","excerpt":"spring cleaning brings it\nperhaps not any cleaner -\nat least much leaner\n","layout":"post","tags":["software (1.0)","integration (0.8)","buggy (0.7)","spaghetti code (0.9)","API (0.9)","select function (0.9)","design by contract (0.8)","service-oriented architecture (0.9)","object-oriented architecture (0.8)","monolithic code (0.9)","IKEA (0.8)","deployment (0.8)","Joomla (0.9)","WordPress (0.9)","Debian GNU/Linux (0.9)","Funky (0.9)","Model-View-Controller (0.9)","Qt (0.9)","Linux kernel (0.9)","predictable design (0.9)"],"title":"The IKEA Approach","wordpress_id":14,"uuid":"a077001d-5cd7-4f22-98c3-d85b67676c3d","filename":"2009-07-18-the-ikea-approach.markdown","slug":"the-ikea-approach","permalink":"https://rlc.vlinder.ca/blog/2009/07/18/the-ikea-approach","locallink":"/blog/2009/07/18/the-ikea-approach","published":true},{"author":"rlc","categories":["This blog"],"comments":false,"date":"2009-07-16T00:00:00.000Z","excerpt":"the first of summer\nthe very last of winter?\nthe first of blog posts\n","layout":"post","tags":["Technology (1.0)","Software development (0.9)","Personal blog (0.8)","Vlinder Software (0.7)","Theology musings (0.5)","ACM Communications (0.4)","IEEE literature (0.4)","Dr. Dobb's Report (0.4)","Product development (0.6)","Fiction writing (0.3)"],"title":"A new blog","wordpress_id":1017,"uuid":"6d5517fd-4d73-4e1c-ad4c-ce03917ab8a6","filename":"2009-07-16-a-new-blog.markdown","slug":"a-new-blog","permalink":"https://rlc.vlinder.ca/blog/2009/07/16/a-new-blog","locallink":"/blog/2009/07/16/a-new-blog","published":true}]